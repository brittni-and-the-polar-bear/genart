{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "@batpb/genart",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "StringValidator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "StringValidator provides static methods that can be used\nto verify that strings contain specified patterns."
					}
				],
				"blockTags": [
					{
						"tag": "@since",
						"content": [
							{
								"kind": "text",
								"text": "2.0.0"
							}
						]
					},
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Utility"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 17,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "string-validator.ts",
							"line": 35,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 18,
							"name": "StringValidator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "- StringValidator is a static class and cannot be instantiated."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "string-validator.ts",
									"line": 35,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "StringValidator",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 2,
					"name": "isHex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "string-validator.ts",
							"line": 48,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "isHex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given string a hex color string?"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "2.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "string-validator.ts",
									"line": 48,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 4,
									"name": "hex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "string to check for the hex color pattern"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5,
									"name": "withAlpha",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " the string will be checked for a "
											},
											{
												"kind": "code",
												"text": "`#RRGGBBAA`"
											},
											{
												"kind": "text",
												"text": " pattern.\nWhen "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": ", the given string will be checked for a "
											},
											{
												"kind": "code",
												"text": "`#RRGGBB`"
											},
											{
												"kind": "text",
												"text": " pattern."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 6,
					"name": "isHexWithAlpha",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "string-validator.ts",
							"line": 68,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 7,
							"name": "isHexWithAlpha",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Is the given string a hex color string with an alpha component ("
									},
									{
										"kind": "code",
										"text": "`#RRGGBBAA`"
									},
									{
										"kind": "text",
										"text": ")?"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "2.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "string-validator.ts",
									"line": 68,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 8,
									"name": "hex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "string to check for the hex color pattern."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17
					]
				},
				{
					"title": "Methods",
					"children": [
						2,
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "string-validator.ts",
					"line": 31,
					"character": 13
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				1
			]
		}
	],
	"categories": [
		{
			"title": "Utility",
			"children": [
				1
			]
		}
	],
	"packageName": "@batpb/genart",
	"packageVersion": "2.0.0-rc.3-alpha.0",
	"readme": [
		{
			"kind": "text",
			"text": "# [@batpb/genart](https://www.npmjs.com/package/@batpb/genart) - algorithmic generative art library\n\nCopyright (C) 2022-2025 brittni and the polar bear LLC.\n\nA\n[TypeScript](https://www.typescriptlang.org/)\ncompatible library built with\n[p5.js](https://p5js.org/)\nfor creating responsive, generative, algorithmic art projects.\n\nThis project is currently in alpha development.\nThere may be breaking changes in future releases, and the documentation is still being written.\n\nThe source code of this project is licensed under the\n[MIT License](https://opensource.org/license/mit).\nThe full text of the license is included with the package source code."
		}
	],
	"symbolIdMap": {
		"0": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/string-validator.ts",
			"qualifiedName": "StringValidator"
		},
		"2": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/string-validator.ts",
			"qualifiedName": "StringValidator.isHex"
		},
		"3": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/string-validator.ts",
			"qualifiedName": "StringValidator.isHex"
		},
		"4": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/string-validator.ts",
			"qualifiedName": "hex"
		},
		"5": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/string-validator.ts",
			"qualifiedName": "withAlpha"
		},
		"6": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/string-validator.ts",
			"qualifiedName": "StringValidator.isHexWithAlpha"
		},
		"7": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/string-validator.ts",
			"qualifiedName": "StringValidator.isHexWithAlpha"
		},
		"8": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/string-validator.ts",
			"qualifiedName": "hex"
		},
		"17": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/string-validator.ts",
			"qualifiedName": "StringValidator.__constructor"
		},
		"18": {
			"packageName": "@batpb/genart",
			"packagePath": "src/string/string-validator.ts",
			"qualifiedName": "StringValidator"
		}
	},
	"files": {
		"entries": {
			"1": "src/string/index.ts",
			"2": "README.md",
			"3": ""
		},
		"reflections": {
			"1": 0,
			"2": 0,
			"3": 0
		}
	}
}
