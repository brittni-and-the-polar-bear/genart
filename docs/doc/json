{
	"id": 0,
	"name": "@batpb/genart",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 180,
			"name": "ColorSelectorManager",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Manager to select a random "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "ColorSelector",
						"target": 142,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " from a "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Set",
						"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Set"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 181,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 182,
							"name": "new ColorSelectorManager",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 180,
								"name": "ColorSelectorManager",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 183,
					"name": "_colorSelectors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Underlying "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Set",
								"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Set"
							},
							{
								"kind": "text",
								"text": " of "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ColorSelector",
								"target": 142,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " objects."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-selector-manager.ts",
							"line": 30,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 142,
								"name": "ColorSelector",
								"package": "@batpb/genart"
							}
						],
						"name": "Set",
						"package": "typescript",
						"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Set"
					},
					"defaultValue": "..."
				},
				{
					"id": 184,
					"name": "getRandomColorSelector",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector-manager.ts",
							"line": 37,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 185,
							"name": "getRandomColorSelector",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Select a random "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ColorSelector",
										"target": 142,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " from the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "_colorSelectors",
										"target": 183,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " set."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ColorSelector",
												"target": 142,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ". If a selector cannot be chosen,\na "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "DefaultColorSelector",
												"target": 164,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " object will be returned."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector-manager.ts",
									"line": 37,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"target": 142,
								"name": "ColorSelector",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 186,
					"name": "addColorSelector",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector-manager.ts",
							"line": 46,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 187,
							"name": "addColorSelector",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ColorSelector",
										"target": 142,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "_colorSelectors",
										"target": 183,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " set."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector-manager.ts",
									"line": 46,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 188,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 142,
										"name": "ColorSelector",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 189,
					"name": "addColorSelectors",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector-manager.ts",
							"line": 54,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 190,
							"name": "addColorSelectors",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add multiple "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ColorSelector",
										"target": 142,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " objects to the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "_colorSelectors",
										"target": 183,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " set."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector-manager.ts",
									"line": 54,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 191,
									"name": "selectors",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"qualifiedName": "Iterable"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 142,
												"name": "ColorSelector",
												"package": "@batpb/genart"
											}
										],
										"name": "Iterable",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						181
					]
				},
				{
					"title": "Properties",
					"children": [
						183
					]
				},
				{
					"title": "Methods",
					"children": [
						184,
						186,
						189
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-selector-manager.ts",
					"line": 26,
					"character": 6
				}
			]
		},
		{
			"id": 138,
			"name": "ColorSelectorType",
			"variant": "declaration",
			"kind": 8,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Enum for the different types of ColorSelectors."
					}
				]
			},
			"children": [
				{
					"id": 139,
					"name": "Palette",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Color selector that chooses colors from a pre-selected palette."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "palette color selector"
					}
				},
				{
					"id": 140,
					"name": "RGB",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Color selector that chooses color randomly from a range of RGB(A) values."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "RGB color selector"
					}
				},
				{
					"id": 141,
					"name": "Default",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default color selector. Should only be used in "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DefaultColorSelector",
								"target": 164,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "default color selector"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						139,
						140,
						141
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-selector.ts",
					"line": 26,
					"character": 11
				}
			]
		},
		{
			"id": 142,
			"name": "ColorSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "ColorSelectors choose and return colors from some set list or criteria."
					}
				]
			},
			"children": [
				{
					"id": 146,
					"name": "_colorChoices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A set list of "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Color",
								"target": 95,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " objects that the selector can choose from."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 51,
							"character": 21
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 95,
							"name": "Color",
							"package": "@batpb/genart"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 147,
					"name": "_randomOrder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag that determines the color selection order\nof "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "selectColorFromChoices",
								"target": 157,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": ".<br/>\nWhen "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "selectColorFromChoices",
								"target": 157,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " will select colors\nfrom "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "_colorChoices",
								"target": 146,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " in a random order.<br/>\nWhen "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "selectColorFromChoices",
								"target": 157,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " will select colors\nlist order."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 61,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 148,
					"name": "_currentIndex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The current index of "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "_colorChoices",
								"target": 146,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " being chosen\nwhen colors are selected in list order (i.e. "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "_randomOrder",
								"target": 147,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 67,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 143,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 74,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 144,
							"name": "new ColorSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "_randomOrder",
												"target": 147,
												"tsLinkText": ""
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 74,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 145,
									"name": "randomOrder",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A flag that determines the color selection order\nof "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "selectColorFromChoices",
												"target": 157,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 142,
								"name": "ColorSelector",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 149,
					"name": "getColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 81,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "getColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Select and return a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 95,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " object."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 81,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"target": 95,
								"name": "Color",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 151,
					"name": "name",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 86,
							"character": 24
						}
					],
					"getSignature": {
						"id": 152,
						"name": "name",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The name of the selector (e.g. 'blue rgb color selector')."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 86,
								"character": 24
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 153,
					"name": "colorNames",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 92,
							"character": 24
						}
					],
					"getSignature": {
						"id": 154,
						"name": "colorNames",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "A list of the names of the colors the selector\nis choosing from."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 92,
								"character": 24
							}
						],
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					}
				},
				{
					"id": 155,
					"name": "type",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 97,
							"character": 24
						}
					],
					"getSignature": {
						"id": 156,
						"name": "type",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "ColorSelectorType",
											"target": 138,
											"tsLinkText": ""
										},
										{
											"kind": "text",
											"text": " of the selector."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 97,
								"character": 24
							}
						],
						"type": {
							"type": "reference",
							"target": 138,
							"name": "ColorSelectorType",
							"package": "@batpb/genart"
						}
					}
				},
				{
					"id": 157,
					"name": "selectColorFromChoices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 104,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 158,
							"name": "selectColorFromChoices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The selected "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 95,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " from the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "_colorChoices",
												"target": 146,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " list.<br/>\nIf "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "_colorChoices",
												"target": 146,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " is empty, a default "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 95,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\nobject (black) will be returned."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 104,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"target": 95,
								"name": "Color",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 159,
					"name": "addColorChoice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 123,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 160,
							"name": "addColorChoice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 95,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "_colorChoices",
										"target": 146,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " list."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 123,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 161,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 95,
										"name": "Color",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 162,
					"name": "incrementCurrentIndex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 132,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 163,
							"name": "incrementCurrentIndex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Increment "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "_currentIndex",
										"target": 148,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to select the next\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 95,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " element in the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "_colorChoices",
										"target": 146,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " list."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "_randomOrder",
												"target": 147,
												"tsLinkText": ""
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 132,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						143
					]
				},
				{
					"title": "Properties",
					"children": [
						146,
						147,
						148
					]
				},
				{
					"title": "Accessors",
					"children": [
						151,
						153,
						155
					]
				},
				{
					"title": "Methods",
					"children": [
						149,
						157,
						159,
						162
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-selector.ts",
					"line": 47,
					"character": 15
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 164,
					"name": "DefaultColorSelector"
				}
			]
		},
		{
			"id": 164,
			"name": "DefaultColorSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Default color selector.\nTo be used when a valid color selector cannot be found."
					}
				]
			},
			"children": [
				{
					"id": 175,
					"name": "selectColorFromChoices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 104,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "selectColorFromChoices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The selected "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 95,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " from the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "_colorChoices",
												"target": 146,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " list.<br/>\nIf "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "_colorChoices",
												"target": 146,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " is empty, a default "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 95,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\nobject (black) will be returned."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 104,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"target": 95,
								"name": "Color",
								"package": "@batpb/genart"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 158,
								"name": "ColorSelector.selectColorFromChoices"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 157,
						"name": "ColorSelector.selectColorFromChoices"
					}
				},
				{
					"id": 177,
					"name": "addColorChoice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 123,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 178,
							"name": "addColorChoice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 95,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " to the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "_colorChoices",
										"target": 146,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " list."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 123,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 179,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 95,
										"name": "Color",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 160,
								"name": "ColorSelector.addColorChoice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 159,
						"name": "ColorSelector.addColorChoice"
					}
				},
				{
					"id": 165,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 147,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 166,
							"name": "new DefaultColorSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 147,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 164,
								"name": "DefaultColorSelector",
								"package": "@batpb/genart"
							},
							"overwrites": {
								"type": "reference",
								"target": 144,
								"name": "ColorSelector.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 143,
						"name": "ColorSelector.constructor"
					}
				},
				{
					"id": 167,
					"name": "colorNames",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 154,
							"character": 15
						}
					],
					"getSignature": {
						"id": 168,
						"name": "colorNames",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "code",
											"text": "`['black']`"
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 154,
								"character": 15
							}
						],
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						"overwrites": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.colorNames"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": 153,
						"name": "ColorSelector.colorNames"
					}
				},
				{
					"id": 169,
					"name": "getColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 161,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 170,
							"name": "getColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A black color "
											},
											{
												"kind": "code",
												"text": "`#000000`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 161,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"target": 95,
								"name": "Color",
								"package": "@batpb/genart"
							},
							"overwrites": {
								"type": "reference",
								"target": 150,
								"name": "ColorSelector.getColor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 149,
						"name": "ColorSelector.getColor"
					}
				},
				{
					"id": 171,
					"name": "name",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 168,
							"character": 15
						}
					],
					"getSignature": {
						"id": 172,
						"name": "name",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "code",
											"text": "`'default color selector'`"
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 168,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"overwrites": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.name"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": 151,
						"name": "ColorSelector.name"
					}
				},
				{
					"id": 173,
					"name": "type",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 175,
							"character": 15
						}
					],
					"getSignature": {
						"id": 174,
						"name": "type",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "ColorSelectorType.Default",
											"target": 141
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 175,
								"character": 15
							}
						],
						"type": {
							"type": "reference",
							"target": 138,
							"name": "ColorSelectorType",
							"package": "@batpb/genart"
						},
						"overwrites": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.type"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": 155,
						"name": "ColorSelector.type"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						165
					]
				},
				{
					"title": "Accessors",
					"children": [
						167,
						171,
						173
					]
				},
				{
					"title": "Methods",
					"children": [
						175,
						177,
						169
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-selector.ts",
					"line": 146,
					"character": 6
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 142,
					"name": "ColorSelector",
					"package": "@batpb/genart"
				}
			]
		},
		{
			"id": 95,
			"name": "Color",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Color information and functionality.\nColors are stored in RGBA format."
					}
				]
			},
			"children": [
				{
					"id": 111,
					"name": "_red",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The color's red component. Ranges in value from 0-255."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 33,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 112,
					"name": "_green",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The color's green component. Ranges in value from 0-255."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 38,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 113,
					"name": "_blue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The color's blue component. Ranges in value from 0-255."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 43,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 114,
					"name": "_alpha",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The color's alpha component. Ranges in value from 0-255."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 48,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 108,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 109,
							"name": "new Color",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 55,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 110,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "p5.js Color",
												"target": "https://p5js.org/reference/#/p5.Color"
											},
											{
												"kind": "text",
												"text": " object.\nThe color's RGBA components will become the values of\n"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "red",
												"target": 119,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "green",
												"target": 123,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "blue",
												"target": 127,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "alpha",
												"target": 131,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
											"qualifiedName": "\"../../index\".Color"
										},
										"name": "Color",
										"package": "@types/p5",
										"qualifiedName": "\"../../index\".Color"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 95,
								"name": "Color",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 96,
					"name": "getHSLColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 74,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 97,
							"name": "getHSLColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "p5.js Color",
												"target": "https://p5js.org/reference/#/p5.Color"
											},
											{
												"kind": "text",
												"text": " object matching the color specified\nby the given "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "h",
												"target": 98,
												"tsLinkText": ""
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "s",
												"target": 99,
												"tsLinkText": ""
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "l",
												"target": 100,
												"tsLinkText": ""
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "a",
												"target": 101,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 74,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 98,
									"name": "h",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 360."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 99,
									"name": "s",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 100."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 100,
									"name": "l",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 100."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 101,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 1."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
									"qualifiedName": "\"../../index\".Color"
								},
								"name": "Color",
								"package": "@types/p5",
								"qualifiedName": "\"../../index\".Color"
							}
						}
					]
				},
				{
					"id": 102,
					"name": "getHSLAColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 98,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 103,
							"name": "getHSLAColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "p5.js Color",
												"target": "https://p5js.org/reference/#/p5.Color"
											},
											{
												"kind": "text",
												"text": " object matching the color specified\nby the given "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "h",
												"target": 104,
												"tsLinkText": ""
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "s",
												"target": 105,
												"tsLinkText": ""
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "l",
												"target": 106,
												"tsLinkText": ""
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "a",
												"target": 107,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 98,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 104,
									"name": "h",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 360."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 105,
									"name": "s",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 100."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 106,
									"name": "l",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 100."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 107,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 1."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
									"qualifiedName": "\"../../index\".Color"
								},
								"name": "Color",
								"package": "@types/p5",
								"qualifiedName": "\"../../index\".Color"
							}
						}
					]
				},
				{
					"id": 115,
					"name": "color",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 106,
							"character": 15
						},
						{
							"fileName": "color/color.ts",
							"line": 117,
							"character": 15
						}
					],
					"getSignature": {
						"id": 116,
						"name": "color",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "A "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "p5.js Color",
											"target": "https://p5js.org/reference/#/p5.Color"
										},
										{
											"kind": "text",
											"text": " object matching the current\n"
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "red",
											"target": 119,
											"tsLinkText": ""
										},
										{
											"kind": "text",
											"text": ", "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "green",
											"target": 123,
											"tsLinkText": ""
										},
										{
											"kind": "text",
											"text": ", "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "blue",
											"target": 127,
											"tsLinkText": ""
										},
										{
											"kind": "text",
											"text": ", and "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "alpha",
											"target": 131,
											"tsLinkText": ""
										},
										{
											"kind": "text",
											"text": " values."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 106,
								"character": 15
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
								"qualifiedName": "\"../../index\".Color"
							},
							"name": "Color",
							"package": "@types/p5",
							"qualifiedName": "\"../../index\".Color"
						}
					},
					"setSignature": {
						"id": 117,
						"name": "color",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the current color."
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 117,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 118,
								"name": "c",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "p5.js Color",
											"target": "https://p5js.org/reference/#/p5.Color"
										},
										{
											"kind": "text",
											"text": " object.\nThe color's RGBA components will become the new values of\n"
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "red",
											"target": 119,
											"tsLinkText": ""
										},
										{
											"kind": "text",
											"text": ", "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "green",
											"target": 123,
											"tsLinkText": ""
										},
										{
											"kind": "text",
											"text": ", "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "blue",
											"target": 127,
											"tsLinkText": ""
										},
										{
											"kind": "text",
											"text": ", and "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "alpha",
											"target": 131,
											"tsLinkText": ""
										},
										{
											"kind": "text",
											"text": "."
										}
									]
								},
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
										"qualifiedName": "\"../../index\".Color"
									},
									"name": "Color",
									"package": "@types/p5",
									"qualifiedName": "\"../../index\".Color"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 119,
					"name": "red",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 124,
							"character": 15
						},
						{
							"fileName": "color/color.ts",
							"line": 132,
							"character": 15
						}
					],
					"getSignature": {
						"id": 120,
						"name": "red",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current red component value (0-255)."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 124,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 121,
						"name": "red",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the value of the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "red",
									"target": 119,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " component."
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 132,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 122,
								"name": "r",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 123,
					"name": "green",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 139,
							"character": 15
						},
						{
							"fileName": "color/color.ts",
							"line": 147,
							"character": 15
						}
					],
					"getSignature": {
						"id": 124,
						"name": "green",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current green component value (0-255)."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 139,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 125,
						"name": "green",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the value of the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "green",
									"target": 123,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " component."
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 147,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 126,
								"name": "g",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 127,
					"name": "blue",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 154,
							"character": 15
						},
						{
							"fileName": "color/color.ts",
							"line": 162,
							"character": 15
						}
					],
					"getSignature": {
						"id": 128,
						"name": "blue",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current blue component value (0-255)."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 154,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 129,
						"name": "blue",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the value of the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "blue",
									"target": 127,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " component."
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 162,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 130,
								"name": "b",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 131,
					"name": "alpha",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 169,
							"character": 15
						},
						{
							"fileName": "color/color.ts",
							"line": 177,
							"character": 15
						}
					],
					"getSignature": {
						"id": 132,
						"name": "alpha",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current alpha component value (0-255)."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 169,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 133,
						"name": "alpha",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the value of the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "alpha",
									"target": 131,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " component."
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 177,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 134,
								"name": "a",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 135,
					"name": "setColorValues",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 187,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 136,
							"name": "setColorValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the color values."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 187,
									"character": 12
								}
							],
							"parameters": [
								{
									"id": 137,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "p5.js Color",
												"target": "https://p5js.org/reference/#/p5.Color"
											},
											{
												"kind": "text",
												"text": " object.\nThe color's RGBA components will become the new values of\n"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "red",
												"target": 119,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "green",
												"target": 123,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "blue",
												"target": 127,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "alpha",
												"target": 131,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
											"qualifiedName": "\"../../index\".Color"
										},
										"name": "Color",
										"package": "@types/p5",
										"qualifiedName": "\"../../index\".Color"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						108
					]
				},
				{
					"title": "Properties",
					"children": [
						111,
						112,
						113,
						114
					]
				},
				{
					"title": "Accessors",
					"children": [
						115,
						119,
						123,
						127,
						131
					]
				},
				{
					"title": "Methods",
					"children": [
						96,
						102,
						135
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color.ts",
					"line": 29,
					"character": 6
				}
			]
		},
		{
			"id": 62,
			"name": "StringMap",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of string keys to some ValueType."
					}
				]
			},
			"children": [
				{
					"id": 66,
					"name": "_map",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The underlying map object."
							}
						]
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 26,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 65,
								"name": "ValueType",
								"package": "@batpb/genart",
								"qualifiedName": "StringMap.ValueType",
								"refersToTypeParameter": true
							}
						],
						"name": "Map",
						"package": "typescript",
						"externalUrl": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map"
					}
				},
				{
					"id": 63,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 28,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 64,
							"name": "new StringMap",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "map/string-map.ts",
									"line": 28,
									"character": 4
								}
							],
							"typeParameter": [
								{
									"id": 65,
									"name": "ValueType",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"type": {
								"type": "reference",
								"target": 62,
								"typeArguments": [
									{
										"type": "reference",
										"target": 65,
										"name": "ValueType",
										"package": "@batpb/genart",
										"qualifiedName": "StringMap.ValueType",
										"refersToTypeParameter": true
									}
								],
								"name": "StringMap",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 67,
					"name": "keys",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 35,
							"character": 15
						}
					],
					"getSignature": {
						"id": 68,
						"name": "keys",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "All the keys of the map."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "map/string-map.ts",
								"line": 35,
								"character": 15
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
								"qualifiedName": "IterableIterator"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "IterableIterator",
							"package": "typescript"
						}
					}
				},
				{
					"id": 69,
					"name": "values",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 42,
							"character": 15
						}
					],
					"getSignature": {
						"id": 70,
						"name": "values",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "All the values of the map."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "map/string-map.ts",
								"line": 42,
								"character": 15
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
								"qualifiedName": "IterableIterator"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 65,
									"name": "ValueType",
									"package": "@batpb/genart",
									"qualifiedName": "StringMap.ValueType",
									"refersToTypeParameter": true
								}
							],
							"name": "IterableIterator",
							"package": "typescript"
						}
					}
				},
				{
					"id": 71,
					"name": "size",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 49,
							"character": 15
						}
					],
					"getSignature": {
						"id": 72,
						"name": "size",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The size of the map."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "map/string-map.ts",
								"line": 49,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 73,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 58,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 74,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieve the value associated with the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "key",
										"target": 75,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "map/string-map.ts",
									"line": 58,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 75,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The key of the desired value in the map."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 65,
										"name": "ValueType",
										"package": "@batpb/genart",
										"qualifiedName": "StringMap.ValueType",
										"refersToTypeParameter": true
									}
								]
							}
						}
					]
				},
				{
					"id": 76,
					"name": "setKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 68,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "setKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Associate the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "key",
										"target": 78,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " with the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "value",
										"target": 79,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " in the map."
									}
								]
							},
							"sources": [
								{
									"fileName": "map/string-map.ts",
									"line": 68,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 78,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Key to set in the map."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 79,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value to be associated with the key."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 65,
										"name": "ValueType",
										"package": "@batpb/genart",
										"qualifiedName": "StringMap.ValueType",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 80,
					"name": "setUndefinedKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 81,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "setUndefinedKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Associate the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "key",
										"target": 82,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " with the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "value",
										"target": 83,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " in the map\nonly if the key has not been set in the map."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the operation is successful, "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " if it is not."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "map/string-map.ts",
									"line": 81,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 82,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Key to set in the map."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 83,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value to be associated with the key."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 65,
										"name": "ValueType",
										"package": "@batpb/genart",
										"qualifiedName": "StringMap.ValueType",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 84,
									"name": "errorMessage",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Message to log if the key already has a value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						63
					]
				},
				{
					"title": "Properties",
					"children": [
						66
					]
				},
				{
					"title": "Accessors",
					"children": [
						67,
						69,
						71
					]
				},
				{
					"title": "Methods",
					"children": [
						73,
						76,
						80
					]
				}
			],
			"sources": [
				{
					"fileName": "map/string-map.ts",
					"line": 22,
					"character": 6
				}
			],
			"typeParameters": [
				{
					"id": 85,
					"name": "ValueType",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1,
			"name": "getSingleDimensionIndex",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "math/math.ts",
					"line": 31,
					"character": 9
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "getSingleDimensionIndex",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The index in a single-dimension structure of the\ngiven row and column in a two-dimensional structure.<br/>\nIf "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "row",
										"target": 3,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "column",
										"target": 4,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " are negative, the function will return "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "undefined",
										"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined"
									},
									{
										"kind": "text",
										"text": ".<br/>\nIf "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "row",
										"target": 3,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is greater than or equal to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "totalRows",
										"target": 5,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ", the function will return "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "undefined",
										"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined"
									},
									{
										"kind": "text",
										"text": ".<br/>\nIf "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "column",
										"target": 4,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is greater than or equal to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "totalColumns",
										"target": 6,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ", the function will return "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "undefined",
										"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "math/math.ts",
							"line": 31,
							"character": 9
						}
					],
					"parameters": [
						{
							"id": 3,
							"name": "row",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Current row number. Rows are zero-indexed; the first row is row 0."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4,
							"name": "column",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Current column number. Columns are zero-indexed; the first column is column 0."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5,
							"name": "totalRows",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Total number of rows."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 6,
							"name": "totalColumns",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Total number of columns."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 7,
			"name": "Range",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isPublic": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Structure to handle a range of values,\nwhere the range has a minimum value and a maximum value."
					}
				]
			},
			"children": [
				{
					"id": 8,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "math/range.ts",
							"line": 31,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 9,
							"name": "new Range",
							"variant": "signature",
							"kind": 16384,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "math/range.ts",
									"line": 31,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 10,
									"name": "_min",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The minimum value of the Range."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 11,
									"name": "_max",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum value of the Range."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 7,
								"name": "Range",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 12,
					"name": "_min",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum value of the Range."
							}
						]
					},
					"sources": [
						{
							"fileName": "math/range.ts",
							"line": 31,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13,
					"name": "_max",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum value of the Range."
							}
						]
					},
					"sources": [
						{
							"fileName": "math/range.ts",
							"line": 31,
							"character": 53
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 14,
					"name": "max",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "math/range.ts",
							"line": 43,
							"character": 15
						},
						{
							"fileName": "math/range.ts",
							"line": 52,
							"character": 15
						}
					],
					"getSignature": {
						"id": 15,
						"name": "max",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isPublic": true
						},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The maximum value of the Range."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "math/range.ts",
								"line": 43,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 16,
						"name": "max",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "If the given "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "newMax",
									"target": 17,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is less than the current "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "_min",
									"target": 12,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": ",\nthe fields "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "_min",
									"target": 12,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " and "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "_max",
									"target": 13,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " will be set so that "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "_min",
									"target": 12,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is less than "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "_max",
									"target": 13,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "math/range.ts",
								"line": 52,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 17,
								"name": "newMax",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new maximum value of the Range."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 18,
					"name": "min",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "math/range.ts",
							"line": 66,
							"character": 15
						},
						{
							"fileName": "math/range.ts",
							"line": 75,
							"character": 15
						}
					],
					"getSignature": {
						"id": 19,
						"name": "min",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isPublic": true
						},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The minimum value of the Range."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "math/range.ts",
								"line": 66,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 20,
						"name": "min",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "If the given "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "newMin",
									"target": 21,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is greater than the current "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "_max",
									"target": 13,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": ",\nthe fields "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "_min",
									"target": 12,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " and "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "_max",
									"target": 13,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " will be set so that "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "_min",
									"target": 12,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": " is less than "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "_max",
									"target": 13,
									"tsLinkText": ""
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "math/range.ts",
								"line": 75,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 21,
								"name": "newMin",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new minimum value of the Range."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						8
					]
				},
				{
					"title": "Properties",
					"children": [
						12,
						13
					]
				},
				{
					"title": "Accessors",
					"children": [
						14,
						18
					]
				}
			],
			"sources": [
				{
					"fileName": "math/range.ts",
					"line": 25,
					"character": 6
				}
			]
		},
		{
			"id": 86,
			"name": "SketchContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isPublic": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The SketchContext provides static access to the p5.js sketch context.\nThis context allows access to all methods and variables of the p5.js library."
					}
				]
			},
			"children": [
				{
					"id": 87,
					"name": "_p5",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The underlying p5.js sketch context object."
							}
						],
						"blockTags": [
							{
								"tag": "@static",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "p5/sketch-context.ts",
							"line": 38,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/@types/p5/index.d.ts",
							"qualifiedName": "p5"
						},
						"name": "__module",
						"package": "@types/p5",
						"externalUrl": "https://p5js.org/reference/#/p5/p5",
						"qualifiedName": "p5"
					}
				},
				{
					"id": 88,
					"name": "initialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "p5/sketch-context.ts",
							"line": 47,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "initialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the sketch context to allow other accessors to have\naccurate canvas, environment, and runtime information."
									}
								],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "p5/sketch-context.ts",
									"line": 47,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 90,
									"name": "p5",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sketch context of the running p5.js script."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/p5/index.d.ts",
											"qualifiedName": "p5"
										},
										"name": "__module",
										"package": "@types/p5",
										"externalUrl": "https://p5js.org/reference/#/p5/p5",
										"qualifiedName": "p5"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 91,
					"name": "p5",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "p5/sketch-context.ts",
							"line": 58,
							"character": 22
						}
					],
					"getSignature": {
						"id": 92,
						"name": "p5",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current sketch context.<br/>\nIf no context has been initialized, the method will return\nan \"empty\" sketch context (0x0 canvas)."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "p5/sketch-context.ts",
								"line": 58,
								"character": 22
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/@types/p5/index.d.ts",
								"qualifiedName": "p5"
							},
							"name": "__module",
							"package": "@types/p5",
							"externalUrl": "https://p5js.org/reference/#/p5/p5",
							"qualifiedName": "p5"
						}
					}
				},
				{
					"id": 93,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 94,
							"name": "new SketchContext",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 86,
								"name": "SketchContext",
								"package": "@batpb/genart"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						93
					]
				},
				{
					"title": "Properties",
					"children": [
						87
					]
				},
				{
					"title": "Accessors",
					"children": [
						91
					]
				},
				{
					"title": "Methods",
					"children": [
						88
					]
				}
			],
			"sources": [
				{
					"fileName": "p5/sketch-context.ts",
					"line": 32,
					"character": 6
				}
			]
		},
		{
			"id": 22,
			"name": "Random",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isPublic": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A collection of static methods for retrieving random values."
					}
				]
			},
			"children": [
				{
					"id": 23,
					"name": "_randomMethod",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The primary function to be called when generating any random numbers.\nSet to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Math.random",
								"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Math/random"
							},
							{
								"kind": "text",
								"text": " by default."
							}
						],
						"blockTags": [
							{
								"tag": "@static",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 34,
							"character": 19
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 24,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 34,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 25,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "random/random.ts",
											"line": 34,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					},
					"defaultValue": "Math.random"
				},
				{
					"id": 26,
					"name": "randomMethod",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 42,
							"character": 22
						}
					],
					"setSignature": {
						"id": 27,
						"name": "randomMethod",
						"variant": "signature",
						"kind": 1048576,
						"flags": {
							"isPublic": true
						},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@static",
									"content": []
								}
							]
						},
						"sources": [
							{
								"fileName": "random/random.ts",
								"line": 42,
								"character": 22
							}
						],
						"parameters": [
							{
								"id": 28,
								"name": "method",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The primary function to be called when generating any random numbers.<br/>\nSet to "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "Math.random",
											"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Math/random"
										},
										{
											"kind": "text",
											"text": " by default."
										}
									]
								},
								"type": {
									"type": "reflection",
									"declaration": {
										"id": 29,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"sources": [
											{
												"fileName": "random/random.ts",
												"line": 42,
												"character": 43
											}
										],
										"signatures": [
											{
												"id": 30,
												"name": "__type",
												"variant": "signature",
												"kind": 4096,
												"flags": {},
												"sources": [
													{
														"fileName": "random/random.ts",
														"line": 42,
														"character": 43
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 31,
					"name": "randomFloat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 53,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 32,
							"name": "randomFloat",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random floating point value greater than or equal to min and less than max."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 53,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 33,
									"name": "min",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The minimum number that can be returned from this function (inclusive)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 34,
									"name": "max",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum number that can be returned from the function (non-inclusive)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 35,
					"name": "randomFloatInRange",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 71,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 36,
							"name": "randomFloatInRange",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random floating point value greater than or equal to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range.min",
												"target": 18,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\nand less than "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range.max",
												"target": 14,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 71,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 37,
									"name": "range",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range",
												"target": 7,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " that determines the minimum and maximum\nvalues that can be returned from the function."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 7,
										"name": "Range",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 38,
					"name": "randomInt",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 82,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 39,
							"name": "randomInt",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random integer value greater than or equal to min and less than max."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 82,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 40,
									"name": "min",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The minimum number that can be returned from this function (inclusive)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 41,
									"name": "max",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum number that can be returned from the function (non-inclusive)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 42,
					"name": "randomIntInRange",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 94,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 43,
							"name": "randomIntInRange",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random integer value greater than or equal to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range.min",
												"target": 18,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\nand less than "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range.max",
												"target": 14,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 94,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 44,
									"name": "range",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range",
												"target": 7,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " that determines the minimum and maximum\nvalues that can be returned from the function."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 7,
										"name": "Range",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 45,
					"name": "randomBoolean",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 105,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 46,
							"name": "randomBoolean",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random boolean value."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 105,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 47,
									"name": "chanceOfTrue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A floating point number between 0 and 1.\nIf provided, it represents the percent chance that this method will return true."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 48,
					"name": "randomElement",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 131,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 49,
							"name": "randomElement",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random element from the given list.\nThis method assumes an equal distribution for all elements of the list.<br/>\nIf an empty list is provided, the function will return "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "undefined",
												"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 131,
									"character": 18
								}
							],
							"typeParameter": [
								{
									"id": 50,
									"name": "Type",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 51,
									"name": "list",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of elements to be selected from."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 50,
											"name": "Type",
											"package": "@batpb/genart",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 50,
										"name": "Type",
										"package": "@batpb/genart",
										"refersToTypeParameter": true
									}
								]
							}
						}
					]
				},
				{
					"id": 52,
					"name": "randomWeightedElement",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 157,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "randomWeightedElement",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@static",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random element from the given list.\nThe distribution of the choices will be determined by the weights of each\nelement in the list.<br/>\nIf an empty list is provided, the function will return "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "undefined",
												"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined"
											},
											{
												"kind": "text",
												"text": ".<br/>\nIf the sum of weights in the list is less than 1.0, the function will return "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "undefined",
												"target": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 157,
									"character": 18
								}
							],
							"typeParameter": [
								{
									"id": 54,
									"name": "Type",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 55,
									"name": "list",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of elements to be selected from.<br/>\n<b>IMPORTANT: The sum of weights of the objects in this list should be equal to 1.0.</b>"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 58,
											"typeArguments": [
												{
													"type": "reference",
													"target": 54,
													"name": "Type",
													"package": "@batpb/genart",
													"refersToTypeParameter": true
												}
											],
											"name": "WeightedElement",
											"package": "@batpb/genart"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 54,
										"name": "Type",
										"package": "@batpb/genart",
										"refersToTypeParameter": true
									}
								]
							}
						}
					]
				},
				{
					"id": 56,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 57,
							"name": "new Random",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 22,
								"name": "Random",
								"package": "@batpb/genart"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						56
					]
				},
				{
					"title": "Properties",
					"children": [
						23
					]
				},
				{
					"title": "Accessors",
					"children": [
						26
					]
				},
				{
					"title": "Methods",
					"children": [
						31,
						35,
						38,
						42,
						45,
						48,
						52
					]
				}
			],
			"sources": [
				{
					"fileName": "random/random.ts",
					"line": 27,
					"character": 6
				}
			]
		},
		{
			"id": 58,
			"name": "WeightedElement",
			"variant": "declaration",
			"kind": 256,
			"flags": {
				"isPublic": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A structure for specifying weights of different values\nwhen selecting elements in an uneven distribution.\nThe greater the weight, the more likely the element will be chosen."
					}
				]
			},
			"children": [
				{
					"id": 59,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value returned if this element is selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "random/weighted-element.ts",
							"line": 31,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": 61,
						"name": "Type",
						"package": "@batpb/genart",
						"qualifiedName": "WeightedElement.Type",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 60,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight associated with this element.\nThe greater the weight, the more likely the element will be selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "random/weighted-element.ts",
							"line": 39,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59,
						60
					]
				}
			],
			"sources": [
				{
					"fileName": "random/weighted-element.ts",
					"line": 25,
					"character": 10
				}
			],
			"typeParameters": [
				{
					"id": 61,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				138
			]
		},
		{
			"title": "Classes",
			"children": [
				180,
				142,
				164,
				95,
				62,
				7,
				86,
				22
			]
		},
		{
			"title": "Interfaces",
			"children": [
				58
			]
		},
		{
			"title": "Functions",
			"children": [
				1
			]
		}
	],
	"categories": [
		{
			"title": "Color",
			"children": [
				180,
				138,
				142,
				164,
				95
			]
		},
		{
			"title": "Maps",
			"children": [
				62
			]
		},
		{
			"title": "Math",
			"children": [
				1,
				7
			]
		},
		{
			"title": "Random",
			"children": [
				7,
				22,
				58
			]
		},
		{
			"title": "p5",
			"children": [
				86
			]
		}
	],
	"packageName": "@batpb/genart",
	"packageVersion": "0.5.0",
	"readme": [
		{
			"kind": "text",
			"text": "# [@batpb/genart](https://www.npmjs.com/package/@batpb/genart) - generative art library\n\nCopyright (C) 2023-2024 brittni and the polar bear LLC.\n\nA [TypeScript](https://www.typescriptlang.org/) compatible library built on [p5.js](https://p5js.org/) \nfor creating responsive generative art projects.\n\n[GitHub Pages](https://brittni-and-the-polar-bear.github.io/generative-art-library/)\n\nDocumentation (coming soon!)\n\n## Important Notice\n\nThis project is currently in active development.\nLarge changes may be made to the API between minor versions.\n\n## Package Stats\n\n[![CodeQL](https://github.com/brittni-and-the-polar-bear/generative-art-library/actions/workflows/codeql.yml/badge.svg)](https://github.com/brittni-and-the-polar-bear/generative-art-library/actions/workflows/codeql.yml)\n[![Node.js Build and Test](https://github.com/brittni-and-the-polar-bear/generative-art-library/actions/workflows/node.js.yml/badge.svg)](https://github.com/brittni-and-the-polar-bear/generative-art-library/actions/workflows/node.js.yml)\n\n[![NPM Version](https://img.shields.io/npm/v/%40batpb%2Fgenart)\n![GitHub Release Date - Published_At](https://img.shields.io/github/release-date/brittni-and-the-polar-bear/generative-art-library)\n![GitHub License](https://img.shields.io/github/license/brittni-and-the-polar-bear/generative-art-library)\n![NPM Downloads](https://img.shields.io/npm/dw/%40batpb%2Fgenart)](https://www.npmjs.com/package/@batpb/genart)\n\n[![Socket Badge](https://socket.dev/api/badge/npm/package/@batpb/genart)](https://socket.dev/npm/package/@batpb/genart)\n\n![GitHub issues by-label (bug)](https://img.shields.io/github/issues/brittni-and-the-polar-bear/generative-art-library/bug?color=red)\n![GitHub issues by-label (security)](https://img.shields.io/github/issues/brittni-and-the-polar-bear/generative-art-library/security?color=red)\n\n![GitHub commits since latest release](https://img.shields.io/github/commits-since/brittni-and-the-polar-bear/generative-art-library/latest)\n\n![GitHub contributors](https://img.shields.io/github/contributors-anon/brittni-and-the-polar-bear/generative-art-library)\n\n----\n\n# Getting Started\n\n## Install with [npm](https://www.npmjs.com/)\n\n"
		},
		{
			"kind": "code",
			"text": "```shell\nnpm install @batpb/genart\n```"
		},
		{
			"kind": "text",
			"text": "\n\n----\n\n# Experiments\n\n[run the experiments](https://brittni-and-the-polar-bear.github.io/generative-art-library/experiments/)\n\n----\n\n# LICENSE Information\n\nThe source code of this project is licensed under the \n[GNU Affero General Public Version 3.0 License](https://www.gnu.org/licenses/agpl-3.0.en.html). \nThe full text of the license can be found in the \n[LICENSE file](https://github.com/brittni-and-the-polar-bear/generative-art-library/blob/main/LICENSE) \nof the root directory.\n\n----\n\n# Resources\n\n## Color Names\n\n[Color Namer](https://colornamer.robertcooper.me/)\n\n## Color Palettes\n\n[color-hex](https://www.color-hex.com/)\n\n[coolors](https://coolors.co/)\n\n[culrs](https://culrs.com/)"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/main/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "getSingleDimensionIndex"
		},
		"2": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "getSingleDimensionIndex"
		},
		"3": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "row"
		},
		"4": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "column"
		},
		"5": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "totalRows"
		},
		"6": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "totalColumns"
		},
		"7": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range"
		},
		"8": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.__constructor"
		},
		"9": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range"
		},
		"10": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "_min"
		},
		"11": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "_max"
		},
		"12": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range._min"
		},
		"13": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range._max"
		},
		"14": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.max"
		},
		"15": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.max"
		},
		"16": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.max"
		},
		"17": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "newMax"
		},
		"18": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.min"
		},
		"19": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.min"
		},
		"20": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.min"
		},
		"21": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "newMin"
		},
		"22": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random"
		},
		"23": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random._randomMethod"
		},
		"24": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "__type"
		},
		"25": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "__type"
		},
		"26": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomMethod"
		},
		"27": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomMethod"
		},
		"28": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "method"
		},
		"29": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "__type"
		},
		"30": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "__type"
		},
		"31": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomFloat"
		},
		"32": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomFloat"
		},
		"33": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "min"
		},
		"34": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "max"
		},
		"35": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomFloatInRange"
		},
		"36": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomFloatInRange"
		},
		"37": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "range"
		},
		"38": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomInt"
		},
		"39": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomInt"
		},
		"40": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "min"
		},
		"41": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "max"
		},
		"42": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomIntInRange"
		},
		"43": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomIntInRange"
		},
		"44": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "range"
		},
		"45": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomBoolean"
		},
		"46": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomBoolean"
		},
		"47": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "chanceOfTrue"
		},
		"48": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomElement"
		},
		"49": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomElement"
		},
		"50": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Type"
		},
		"51": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "list"
		},
		"52": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomWeightedElement"
		},
		"53": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomWeightedElement"
		},
		"54": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Type"
		},
		"55": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "list"
		},
		"58": {
			"sourceFileName": "src/main/random/weighted-element.ts",
			"qualifiedName": "WeightedElement"
		},
		"59": {
			"sourceFileName": "src/main/random/weighted-element.ts",
			"qualifiedName": "WeightedElement.value"
		},
		"60": {
			"sourceFileName": "src/main/random/weighted-element.ts",
			"qualifiedName": "WeightedElement.weight"
		},
		"61": {
			"sourceFileName": "src/main/random/weighted-element.ts",
			"qualifiedName": "WeightedElement.Type"
		},
		"62": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap"
		},
		"63": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.__constructor"
		},
		"64": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap"
		},
		"65": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.ValueType"
		},
		"66": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap._map"
		},
		"67": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.keys"
		},
		"68": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.keys"
		},
		"69": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.values"
		},
		"70": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.values"
		},
		"71": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.size"
		},
		"72": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.size"
		},
		"73": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.get"
		},
		"74": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.get"
		},
		"75": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "key"
		},
		"76": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.setKey"
		},
		"77": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.setKey"
		},
		"78": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "key"
		},
		"79": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "value"
		},
		"80": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.setUndefinedKey"
		},
		"81": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.setUndefinedKey"
		},
		"82": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "key"
		},
		"83": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "value"
		},
		"84": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "errorMessage"
		},
		"85": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.ValueType"
		},
		"86": {
			"sourceFileName": "src/main/p5/sketch-context.ts",
			"qualifiedName": "SketchContext"
		},
		"87": {
			"sourceFileName": "src/main/p5/sketch-context.ts",
			"qualifiedName": "SketchContext._p5"
		},
		"88": {
			"sourceFileName": "src/main/p5/sketch-context.ts",
			"qualifiedName": "SketchContext.initialize"
		},
		"89": {
			"sourceFileName": "src/main/p5/sketch-context.ts",
			"qualifiedName": "SketchContext.initialize"
		},
		"90": {
			"sourceFileName": "src/main/p5/sketch-context.ts",
			"qualifiedName": "p5"
		},
		"91": {
			"sourceFileName": "src/main/p5/sketch-context.ts",
			"qualifiedName": "SketchContext.p5"
		},
		"92": {
			"sourceFileName": "src/main/p5/sketch-context.ts",
			"qualifiedName": "SketchContext.p5"
		},
		"95": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color"
		},
		"96": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getHSLColor"
		},
		"97": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getHSLColor"
		},
		"98": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "h"
		},
		"99": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "s"
		},
		"100": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "l"
		},
		"101": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "a"
		},
		"102": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getHSLAColor"
		},
		"103": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getHSLAColor"
		},
		"104": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "h"
		},
		"105": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "s"
		},
		"106": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "l"
		},
		"107": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "a"
		},
		"108": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.__constructor"
		},
		"109": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color"
		},
		"110": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "color"
		},
		"111": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color._red"
		},
		"112": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color._green"
		},
		"113": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color._blue"
		},
		"114": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color._alpha"
		},
		"115": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.color"
		},
		"116": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.color"
		},
		"117": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.color"
		},
		"118": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "c"
		},
		"119": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.red"
		},
		"120": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.red"
		},
		"121": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.red"
		},
		"122": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "r"
		},
		"123": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.green"
		},
		"124": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.green"
		},
		"125": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.green"
		},
		"126": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "g"
		},
		"127": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.blue"
		},
		"128": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.blue"
		},
		"129": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.blue"
		},
		"130": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "b"
		},
		"131": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.alpha"
		},
		"132": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.alpha"
		},
		"133": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.alpha"
		},
		"134": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "a"
		},
		"135": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.setColorValues"
		},
		"136": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.setColorValues"
		},
		"137": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "color"
		},
		"138": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelectorType"
		},
		"139": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelectorType.Palette"
		},
		"140": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelectorType.RGB"
		},
		"141": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelectorType.Default"
		},
		"142": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector"
		},
		"143": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.__constructor"
		},
		"144": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector"
		},
		"145": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "randomOrder"
		},
		"146": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector._colorChoices"
		},
		"147": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector._randomOrder"
		},
		"148": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector._currentIndex"
		},
		"149": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.getColor"
		},
		"150": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.getColor"
		},
		"151": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.name"
		},
		"152": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.name"
		},
		"153": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.colorNames"
		},
		"154": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.colorNames"
		},
		"155": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.type"
		},
		"156": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.type"
		},
		"157": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.selectColorFromChoices"
		},
		"158": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.selectColorFromChoices"
		},
		"159": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.addColorChoice"
		},
		"160": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.addColorChoice"
		},
		"161": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "color"
		},
		"162": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.incrementCurrentIndex"
		},
		"163": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.incrementCurrentIndex"
		},
		"164": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector"
		},
		"165": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector.__constructor"
		},
		"166": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector"
		},
		"167": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector.colorNames"
		},
		"168": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector.colorNames"
		},
		"169": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector.getColor"
		},
		"170": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector.getColor"
		},
		"171": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector.name"
		},
		"172": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector.name"
		},
		"173": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector.type"
		},
		"174": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "DefaultColorSelector.type"
		},
		"175": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.selectColorFromChoices"
		},
		"176": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.selectColorFromChoices"
		},
		"177": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.addColorChoice"
		},
		"178": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.addColorChoice"
		},
		"179": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "color"
		},
		"180": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager"
		},
		"183": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager._colorSelectors"
		},
		"184": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.getRandomColorSelector"
		},
		"185": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.getRandomColorSelector"
		},
		"186": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.addColorSelector"
		},
		"187": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.addColorSelector"
		},
		"188": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "selector"
		},
		"189": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.addColorSelectors"
		},
		"190": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.addColorSelectors"
		},
		"191": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "selectors"
		}
	}
}