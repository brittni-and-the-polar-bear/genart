{
	"id": 0,
	"name": "@batpb/genart",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 532,
			"name": "AspectRatioName",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Valid keys for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "ASPECT_RATIOS",
						"target": 541
					},
					{
						"kind": "text",
						"text": " record.\nEach key corresponds to a pre-saved "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "AspectRatio",
						"target": 503
					},
					{
						"kind": "text",
						"text": " object."
					}
				]
			},
			"children": [
				{
					"id": 534,
					"name": "INITIAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use the initial or current aspect ratio of the browser window.\nThis aspect ratio will only change the canvas aspect ratio one time."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratios.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "INITIAL"
					}
				},
				{
					"id": 533,
					"name": "MATCH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Match the aspect ratio of the browser window.\nThe aspect ratio of the canvas will continue to match\nthe browser window until a different ratio is selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratios.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "MATCH"
					}
				},
				{
					"id": 535,
					"name": "PINTEREST_PIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The standard aspect ratio of a Pinterest pin."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratios.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "PINTEREST_PIN"
					}
				},
				{
					"id": 536,
					"name": "SOCIAL_VIDEO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The standard aspect ratio of a social media video\n(e.g. TikTok, Instagram Reels, YouTube Shorts)."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratios.ts",
							"line": 51,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "SOCIAL_VIDEO"
					}
				},
				{
					"id": 537,
					"name": "SQUARE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Square (1:1) aspect ratio."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratios.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "SQUARE"
					}
				},
				{
					"id": 538,
					"name": "TIKTOK_PHOTO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The aspect ratio for a photo post in TikTok."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratios.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "TIKTOK_PHOTO"
					}
				},
				{
					"id": 539,
					"name": "ULTRAWIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ratio for a 21:9 ultrawide movie."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratios.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ULTRAWIDE"
					}
				},
				{
					"id": 540,
					"name": "WIDESCREEN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ratio for a 16:9 widescreen movie."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratios.ts",
							"line": 71,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "WIDESCREEN"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						534,
						533,
						535,
						536,
						537,
						538,
						539,
						540
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/canvas/aspect-ratio/aspect-ratios.ts",
					"line": 28,
					"character": 12
				}
			]
		},
		{
			"id": 78,
			"name": "ColorSelectorType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Enum for the different types of "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "ColorSelector",
						"target": 82
					},
					{
						"kind": "text",
						"text": " classes."
					}
				]
			},
			"children": [
				{
					"id": 81,
					"name": "DEFAULT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default color selector. Should only be used in "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DefaultColorSelector",
								"target": 114
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-selector-type.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "default color selector"
					}
				},
				{
					"id": 79,
					"name": "PALETTE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Color selector that chooses colors from a pre-selected palette."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-selector-type.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "palette color selector"
					}
				},
				{
					"id": 80,
					"name": "RGB",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Color selector that chooses color randomly from a range of RGB(A) values."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-selector-type.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "RGB color selector"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						81,
						79,
						80
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-selector-type.ts",
					"line": 23,
					"character": 12
				}
			]
		},
		{
			"id": 152,
			"name": "ContrastFontSize",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Font size category used to evaluate the accessibility standard."
					}
				]
			},
			"children": [
				{
					"id": 154,
					"name": "LARGE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Large font size."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "large"
					}
				},
				{
					"id": 153,
					"name": "NORMAL",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Normal font size."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "normal"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						154,
						153
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-contrast/color-contrast-assessor.ts",
					"line": 48,
					"character": 12
				}
			]
		},
		{
			"id": 149,
			"name": "ContrastStandard",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Web Content Accessibility Guidelines (WCAG) color contrast categories.<br/>\nTo learn more about WCAG, visit\n<a href=\"https://www.w3.org/WAI/standards-guidelines/wcag/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.w3.org/WAI/standards-guidelines/wcag/</a>."
					}
				]
			},
			"children": [
				{
					"id": 150,
					"name": "AA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "WCAG AA Standard (color contrast >= 4.5)"
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "AA"
					}
				},
				{
					"id": 151,
					"name": "AAA",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "WCAG AAA Standard (color contrast >= 7)"
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "AAA"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						150,
						151
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-contrast/color-contrast-assessor.ts",
					"line": 31,
					"character": 12
				}
			]
		},
		{
			"id": 622,
			"name": "CoordinateMode",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 624,
					"name": "CANVAS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mode.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "canvas"
					}
				},
				{
					"id": 623,
					"name": "RATIO",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mode.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ratio"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						624,
						623
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/canvas/drawing/coordinate-mode.ts",
					"line": 21,
					"character": 12
				}
			]
		},
		{
			"id": 195,
			"name": "Discriminators",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The collection of discriminator values for library interfaces.\nAll values should be unique."
					}
				]
			},
			"children": [
				{
					"id": 196,
					"name": "PALETTE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminator for the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "Palette",
								"target": 338
							},
							{
								"kind": "text",
								"text": " interface."
							}
						]
					},
					"sources": [
						{
							"fileName": "discriminator/discriminators.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "I_PALETTE"
					}
				},
				{
					"id": 197,
					"name": "PALETTE_COLOR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminator for the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PaletteColor",
								"target": 351
							},
							{
								"kind": "text",
								"text": " interface."
							}
						]
					},
					"sources": [
						{
							"fileName": "discriminator/discriminators.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "I_PALETTE-COLOR"
					}
				},
				{
					"id": 198,
					"name": "WEIGHTED_ELEMENT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminator for the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "WeightedElement",
								"target": 701
							},
							{
								"kind": "text",
								"text": " interface."
							}
						]
					},
					"sources": [
						{
							"fileName": "discriminator/discriminators.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "I_WEIGHTED-ELEMENT"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						196,
						197,
						198
					]
				}
			],
			"sources": [
				{
					"fileName": "discriminator/discriminators.ts",
					"line": 24,
					"character": 12
				}
			]
		},
		{
			"id": 507,
			"name": "AspectRatioHandler",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An AspectRatioHandler provides the proper width and height of a canvas\ngiven an "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "AspectRatio",
						"target": 503
					},
					{
						"kind": "text",
						"text": " and resolution."
					}
				]
			},
			"children": [
				{
					"id": 518,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
							"line": 47,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 519,
							"name": "new AspectRatioHandler",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
									"line": 47,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 520,
									"name": "aspectRatio",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this aspect ratio has a\n"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "width ratio",
												"target": 505,
												"tsLinkText": "width ratio"
											},
											{
												"kind": "text",
												"text": " less than 1 or a\n"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "height ratio",
												"target": 506,
												"tsLinkText": "height ratio"
											},
											{
												"kind": "text",
												"text": " less than 1,\nthen "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "width",
												"target": 524
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "height",
												"target": 526
											},
											{
												"kind": "text",
												"text": " will both return 0."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 503,
										"name": "AspectRatio",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 521,
									"name": "baseResolution",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this values is less than or equal to 0,\n"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "width",
												"target": 524
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "height",
												"target": 526
											},
											{
												"kind": "text",
												"text": " will both return 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 507,
								"name": "AspectRatioHandler",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 526,
					"name": "height",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
							"line": 74,
							"character": 15
						}
					],
					"getSignature": {
						"id": 527,
						"name": "height",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The calculated canvas height."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
								"line": 74,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 524,
					"name": "width",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
							"line": 61,
							"character": 15
						}
					],
					"getSignature": {
						"id": 525,
						"name": "width",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The calculated canvas width."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
								"line": 61,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 508,
					"name": "buildAspectRatio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
							"line": 92,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 509,
							"name": "buildAspectRatio",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates an "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "AspectRatio",
										"target": 503
									},
									{
										"kind": "text",
										"text": " object with the given width ratio, height ratio, and name."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
									"line": 92,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 510,
									"name": "widthRatio",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this value is less than 1, this method will return "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 511,
									"name": "heightRatio",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this value is less than 1, this method will return "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 512,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this value is not specified, the name of the AspectRatio object will be\nderived from the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "widthRatio",
												"target": 510
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "heightRatio",
												"target": 511
											},
											{
												"kind": "text",
												"text": " parameters."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 503,
										"name": "AspectRatio",
										"package": "@batpb/genart"
									}
								]
							}
						}
					]
				},
				{
					"id": 513,
					"name": "buildAspectRatioFromDimensions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
							"line": 117,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 514,
							"name": "buildAspectRatioFromDimensions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
									"line": 117,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 515,
									"name": "width",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 516,
									"name": "height",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 517,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 503,
										"name": "AspectRatio",
										"package": "@batpb/genart"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						518
					]
				},
				{
					"title": "Accessors",
					"children": [
						526,
						524
					]
				},
				{
					"title": "Methods",
					"children": [
						508,
						513
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
					"line": 27,
					"character": 13
				}
			]
		},
		{
			"id": 628,
			"name": "CanvasContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The CanvasContext provides static access to information and methods\nfor the running p5.js sketch canvas."
					}
				]
			},
			"children": [
				{
					"id": 667,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 668,
							"name": "new CanvasContext",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 628,
								"name": "CanvasContext",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 644,
					"name": "defaultStroke",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/canvas-context.ts",
							"line": 127,
							"character": 22
						}
					],
					"getSignature": {
						"id": 645,
						"name": "defaultStroke",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The default stroke of the sketch.\nEquivalent to a stroke of 1 in a 500x500 sketch."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/canvas-context.ts",
								"line": 127,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 640,
					"name": "isWebGL",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/canvas-context.ts",
							"line": 112,
							"character": 22
						}
					],
					"getSignature": {
						"id": 641,
						"name": "isWebGL",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Is the canvas rendering mode set to WebGL?"
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/canvas-context.ts",
								"line": 112,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 642,
					"name": "lockedCanvas",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/canvas-context.ts",
							"line": 119,
							"character": 22
						}
					],
					"getSignature": {
						"id": 643,
						"name": "lockedCanvas",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "When true, "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "buildCanvas",
									"target": 634
								},
								{
									"kind": "text",
									"text": " will not create a new canvas."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/canvas-context.ts",
								"line": 119,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 634,
					"name": "buildCanvas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/canvas-context.ts",
							"line": 81,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 635,
							"name": "buildCanvas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Build a p5 canvas with the given aspect ratio, resolution, and canvas type.\nIf "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "lockedCanvas",
										"target": 642
									},
									{
										"kind": "text",
										"text": " is "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", no canvas will be built."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/canvas/canvas-context.ts",
									"line": 81,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 636,
									"name": "aspectRatio",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 503,
										"name": "AspectRatio",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 637,
									"name": "resolution",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 638,
									"name": "canvasType",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Can be WEBGL (\"webgl\") or P2D (\"p2d\")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 639,
									"name": "lockCanvas",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", the canvas will be locked after it has been created."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 646,
					"name": "lockCanvas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/canvas-context.ts",
							"line": 136,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 647,
							"name": "lockCanvas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Locks the canvas. After this is called, "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "buildCanvas",
										"target": 634
									},
									{
										"kind": "text",
										"text": " will not create a new canvas."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/canvas/canvas-context.ts",
									"line": 136,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 650,
					"name": "resizeCanvas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/canvas-context.ts",
							"line": 151,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 651,
							"name": "resizeCanvas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resizes the canvas and decorates the canvas with the appropriate\nupdated attributes."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/canvas/canvas-context.ts",
									"line": 151,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 648,
					"name": "unlockCanvas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/canvas-context.ts",
							"line": 143,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 649,
							"name": "unlockCanvas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Unlocks the canvas. After this is called, "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "buildCanvas",
										"target": 634
									},
									{
										"kind": "text",
										"text": " will create a new canvas."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/canvas/canvas-context.ts",
									"line": 143,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 652,
					"name": "updateAspectRatio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/canvas-context.ts",
							"line": 167,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 653,
							"name": "updateAspectRatio",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update the current aspect ratio of the canvas to the given aspect ratio.\nThis method will resize the canvas and decorate it with the appropriate\nupdated attributes."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/canvas/canvas-context.ts",
									"line": 167,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 654,
									"name": "aspectRatio",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 503,
										"name": "AspectRatio",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 655,
					"name": "updateResolution",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/canvas-context.ts",
							"line": 185,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 656,
							"name": "updateResolution",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update the current resolution of the canvas to the given resolution.\nThis method will resize the canvas and decorate it with the appropriate\nupdated attributes."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/canvas/canvas-context.ts",
									"line": 185,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 657,
									"name": "resolution",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						667
					]
				},
				{
					"title": "Accessors",
					"children": [
						644,
						640,
						642
					]
				},
				{
					"title": "Methods",
					"children": [
						634,
						646,
						650,
						648,
						652,
						655
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/canvas/canvas-context.ts",
					"line": 34,
					"character": 13
				}
			]
		},
		{
			"id": 542,
			"name": "CanvasRedrawEvent",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 543,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 544,
							"name": "new CanvasRedrawEvent",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 542,
								"name": "CanvasRedrawEvent",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 546,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
							"line": 36,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 547,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
									"line": 36,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 548,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 551,
										"name": "CanvasRedrawListener",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 549,
					"name": "publishRedraw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
							"line": 43,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 550,
							"name": "publishRedraw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
									"line": 43,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						543
					]
				},
				{
					"title": "Methods",
					"children": [
						546,
						549
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
					"line": 29,
					"character": 13
				}
			]
		},
		{
			"id": 463,
			"name": "CanvasScreen",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 464,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "screen/canvas-screen.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 465,
							"name": "new CanvasScreen",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/canvas-screen.ts",
									"line": 65,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 466,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 463,
								"name": "CanvasScreen",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 475,
					"name": "NAME",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "screen/canvas-screen.ts",
							"line": 72,
							"character": 15
						}
					],
					"getSignature": {
						"id": 476,
						"name": "NAME",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "screen/canvas-screen.ts",
								"line": 72,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 482,
					"name": "activate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "screen/canvas-screen.ts",
							"line": 93,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 483,
							"name": "activate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/canvas-screen.ts",
									"line": 93,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 479,
					"name": "addRedrawListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "screen/canvas-screen.ts",
							"line": 86,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 480,
							"name": "addRedrawListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/canvas-screen.ts",
									"line": 86,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 481,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 551,
										"name": "CanvasRedrawListener",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 469,
					"name": "draw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "screen/canvas-screen.ts",
							"line": 50,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 470,
							"name": "draw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/canvas-screen.ts",
									"line": 50,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 473,
					"name": "keyPressed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "screen/canvas-screen.ts",
							"line": 60,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 474,
							"name": "keyPressed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/canvas-screen.ts",
									"line": 60,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 471,
					"name": "mousePressed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "screen/canvas-screen.ts",
							"line": 55,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 472,
							"name": "mousePressed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/canvas-screen.ts",
									"line": 55,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 477,
					"name": "publishRedraw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "screen/canvas-screen.ts",
							"line": 79,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 478,
							"name": "publishRedraw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/canvas-screen.ts",
									"line": 79,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						464
					]
				},
				{
					"title": "Accessors",
					"children": [
						475
					]
				},
				{
					"title": "Methods",
					"children": [
						482,
						479,
						469,
						473,
						471,
						477
					]
				}
			],
			"sources": [
				{
					"fileName": "screen/canvas-screen.ts",
					"line": 31,
					"character": 22
				}
			]
		},
		{
			"id": 17,
			"name": "Color",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Color information and functionality.\nColors are stored in RGBA format."
					}
				]
			},
			"children": [
				{
					"id": 33,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 73,
							"character": 4
						},
						{
							"fileName": "color/color.ts",
							"line": 76,
							"character": 4
						},
						{
							"fileName": "color/color.ts",
							"line": 82,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "new Color",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 73,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 35,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A p5.js Color, "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 17
											},
											{
												"kind": "text",
												"text": ", or "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "PaletteColor",
												"target": 351
											},
											{
												"kind": "text",
												"text": " object.<br/>\n\nIf given a p5.js Color, the color's RGBA components\nwill become the values of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "red",
												"target": 50
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "green",
												"target": 54
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "blue",
												"target": 58
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "alpha",
												"target": 62
											},
											{
												"kind": "text",
												"text": ".<br/>\n\nIf given a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 17
											},
											{
												"kind": "text",
												"text": ", the given color's\n"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "red",
												"target": 50
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "green",
												"target": 54
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "blue",
												"target": 58
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "alpha",
												"target": 62
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "name",
												"target": 66
											},
											{
												"kind": "text",
												"text": "\nproperties will become the new values of this color's respective properties.<br/>\n\nIf given a "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "PaletteColor",
												"target": 351
											},
											{
												"kind": "text",
												"text": ", the color's\n"
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "RGB",
												"target": 352,
												"tsLinkText": "RGB"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "NAME ",
												"target": 363,
												"tsLinkText": "NAME "
											},
											{
												"kind": "text",
												"text": " values\nwill be used to build the color."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 351,
												"name": "PaletteColor",
												"package": "@batpb/genart"
											},
											{
												"type": "reference",
												"target": 17,
												"name": "Color",
												"package": "@batpb/genart"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
													"qualifiedName": "\"../../index\".Color"
												},
												"name": "Color",
												"package": "@types/p5",
												"qualifiedName": "\"../../index\".Color"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							}
						},
						{
							"id": 36,
							"name": "new Color",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 76,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 37,
									"name": "red",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 38,
									"name": "green",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 39,
									"name": "blue",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 40,
									"name": "alpha",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 62,
					"name": "alpha",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 248,
							"character": 15
						},
						{
							"fileName": "color/color.ts",
							"line": 257,
							"character": 15
						}
					],
					"getSignature": {
						"id": 63,
						"name": "alpha",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current alpha component value (0-255)."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 248,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 64,
						"name": "alpha",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the value of the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "alpha",
									"target": 62
								},
								{
									"kind": "text",
									"text": " component."
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 257,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 65,
								"name": "a",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 58,
					"name": "blue",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 230,
							"character": 15
						},
						{
							"fileName": "color/color.ts",
							"line": 239,
							"character": 15
						}
					],
					"getSignature": {
						"id": 59,
						"name": "blue",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current blue component value (0-255)."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 230,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 60,
						"name": "blue",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the value of the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "blue",
									"target": 58
								},
								{
									"kind": "text",
									"text": " component."
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 239,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 61,
								"name": "b",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 46,
					"name": "color",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 173,
							"character": 15
						},
						{
							"fileName": "color/color.ts",
							"line": 186,
							"character": 15
						}
					],
					"getSignature": {
						"id": 47,
						"name": "color",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "A p5.js Color object matching the current\n"
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "red",
											"target": 50
										},
										{
											"kind": "text",
											"text": ", "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "green",
											"target": 54
										},
										{
											"kind": "text",
											"text": ", "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "blue",
											"target": 58
										},
										{
											"kind": "text",
											"text": ", and "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "alpha",
											"target": 62
										},
										{
											"kind": "text",
											"text": " values."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 173,
								"character": 15
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
								"qualifiedName": "\"../../index\".Color"
							},
							"name": "Color",
							"package": "@types/p5",
							"qualifiedName": "\"../../index\".Color"
						}
					},
					"setSignature": {
						"id": 48,
						"name": "color",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the current color."
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 186,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 49,
								"name": "c",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "A p5.js Color object.\nThe color's RGBA components will become the new values of\n"
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "red",
											"target": 50
										},
										{
											"kind": "text",
											"text": ", "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "green",
											"target": 54
										},
										{
											"kind": "text",
											"text": ", "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "blue",
											"target": 58
										},
										{
											"kind": "text",
											"text": ", and "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "alpha",
											"target": 62
										},
										{
											"kind": "text",
											"text": "."
										}
									]
								},
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
										"qualifiedName": "\"../../index\".Color"
									},
									"name": "Color",
									"package": "@types/p5",
									"qualifiedName": "\"../../index\".Color"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 54,
					"name": "green",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 212,
							"character": 15
						},
						{
							"fileName": "color/color.ts",
							"line": 221,
							"character": 15
						}
					],
					"getSignature": {
						"id": 55,
						"name": "green",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current green component value (0-255)."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 212,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 56,
						"name": "green",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the value of the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "green",
									"target": 54
								},
								{
									"kind": "text",
									"text": " component.<br/>"
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 221,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 57,
								"name": "g",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 68,
					"name": "hex",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 283,
							"character": 15
						}
					],
					"getSignature": {
						"id": 69,
						"name": "hex",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The hex color string for the RGB\n("
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "red",
											"target": 50
										},
										{
											"kind": "text",
											"text": ", "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "green",
											"target": 54
										},
										{
											"kind": "text",
											"text": ", "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "blue",
											"target": 58
										},
										{
											"kind": "text",
											"text": ")\ncomponents of the color (#RRGGBB)."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 283,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 66,
					"name": "name",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 265,
							"character": 15
						}
					],
					"getSignature": {
						"id": 67,
						"name": "name",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The name of the color."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 265,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 50,
					"name": "red",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 194,
							"character": 15
						},
						{
							"fileName": "color/color.ts",
							"line": 203,
							"character": 15
						}
					],
					"getSignature": {
						"id": 51,
						"name": "red",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The current red component value (0-255)."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 194,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 52,
						"name": "red",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the value of the "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "red",
									"target": 50
								},
								{
									"kind": "text",
									"text": " component."
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color.ts",
								"line": 203,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 53,
								"name": "r",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 18,
					"name": "copy",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 126,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 19,
							"name": "copy",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Copy the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 17
									},
									{
										"kind": "text",
										"text": " object and return a new, distinct object."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 126,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 20,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17,
										"name": "Color",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 27,
					"name": "getHSLAColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 165,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "getHSLAColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A p5.js Color object matching the color specified\nby the given "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "h",
												"target": 29
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "s",
												"target": 30
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "l",
												"target": 31
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "a",
												"target": 32
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 165,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 29,
									"name": "h",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 360."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 30,
									"name": "s",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 100."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 31,
									"name": "l",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 100."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 32,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 1."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
									"qualifiedName": "\"../../index\".Color"
								},
								"name": "Color",
								"package": "@types/p5",
								"qualifiedName": "\"../../index\".Color"
							}
						}
					]
				},
				{
					"id": 21,
					"name": "getHSLColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 139,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 22,
							"name": "getHSLColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A p5.js Color object matching the color specified\nby the given "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "h",
												"target": 23
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "s",
												"target": 24
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "l",
												"target": 25
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "a",
												"target": 26
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 139,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 23,
									"name": "h",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 360."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 24,
									"name": "s",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 100."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 25,
									"name": "l",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 100."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 26,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Some number between 0 and 1."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/p5/src/color/p5.Color.d.ts",
									"qualifiedName": "\"../../index\".Color"
								},
								"name": "Color",
								"package": "@types/p5",
								"qualifiedName": "\"../../index\".Color"
							}
						}
					]
				},
				{
					"id": 73,
					"name": "getRGBAHex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 314,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 74,
							"name": "getRGBAHex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hex color string for the RGBA\n("
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "red",
										"target": 50
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "green",
										"target": 54
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "blue",
										"target": 58
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "alpha",
										"target": 62
									},
									{
										"kind": "text",
										"text": ")\ncomponents of the color."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 314,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 70,
					"name": "getRGBHex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color.ts",
							"line": 296,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 71,
							"name": "getRGBHex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hex color string for the RGBA\n("
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "red",
										"target": 50
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "green",
										"target": 54
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "blue",
										"target": 58
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "alpha",
										"target": 62
									},
									{
										"kind": "text",
										"text": ")\ncomponents of the color."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color.ts",
									"line": 296,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 72,
									"name": "withAlpha",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "if "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", an alpha component will be included in the hex\nstring (#RRGGBBAA).<br/>\nIf "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": ", only the RGB components will be included (#RRGGBB)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						33
					]
				},
				{
					"title": "Accessors",
					"children": [
						62,
						58,
						46,
						54,
						68,
						66,
						50
					]
				},
				{
					"title": "Methods",
					"children": [
						18,
						27,
						21,
						73,
						70
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color.ts",
					"line": 32,
					"character": 13
				}
			]
		},
		{
			"id": 155,
			"name": "ColorContrastAssessor",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Evaluates if two colors meet the AA or AAA contrast standard\nof the Web Content Accessibility Guidelines (WCAG).<br/>\nTo learn more about WCAG, visit\n<a href=\"https://www.w3.org/WAI/standards-guidelines/wcag/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.w3.org/WAI/standards-guidelines/wcag/</a>."
					}
				]
			},
			"children": [
				{
					"id": 187,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 188,
							"name": "new ColorContrastAssessor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 155,
								"name": "ColorContrastAssessor",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 156,
					"name": "meetsContrastStandard",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Evaluates if two colors have an appropriate contrast ratio\nfor the given "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ContrastStandard",
								"target": 149
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ContrastFontSize",
								"target": 152
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "colorA",
								"content": []
							},
							{
								"tag": "@param",
								"name": "colorB",
								"content": []
							},
							{
								"tag": "@param",
								"name": "standard",
								"content": [
									{
										"kind": "text",
										"text": "If no standard is provided, "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ContrastStandard.AA",
										"target": 150
									},
									{
										"kind": "text",
										"text": " will be used."
									}
								]
							},
							{
								"tag": "@param",
								"name": "fontSize",
								"content": [
									{
										"kind": "text",
										"text": "If no font size is provided, "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ContrastFontSize.NORMAL",
										"target": 153
									},
									{
										"kind": "text",
										"text": " will be used."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 70,
							"character": 18
						},
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 73,
							"character": 18
						},
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 76,
							"character": 18
						},
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 79,
							"character": 18
						},
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 84,
							"character": 18
						},
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 89,
							"character": 18
						},
						{
							"fileName": "color/color-contrast/color-contrast-assessor.ts",
							"line": 103,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 157,
							"name": "meetsContrastStandard",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color-contrast/color-contrast-assessor.ts",
									"line": 70,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 158,
									"name": "colorA",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17,
										"name": "Color",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 159,
									"name": "colorB",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17,
										"name": "Color",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 160,
							"name": "meetsContrastStandard",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color-contrast/color-contrast-assessor.ts",
									"line": 73,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 161,
									"name": "colorA",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 351,
										"name": "PaletteColor",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 162,
									"name": "colorB",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 351,
										"name": "PaletteColor",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 163,
							"name": "meetsContrastStandard",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color-contrast/color-contrast-assessor.ts",
									"line": 76,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 164,
									"name": "colorA",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 165,
									"name": "colorB",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 166,
							"name": "meetsContrastStandard",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color-contrast/color-contrast-assessor.ts",
									"line": 79,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 167,
									"name": "colorA",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17,
										"name": "Color",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 168,
									"name": "colorB",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17,
										"name": "Color",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 169,
									"name": "standard",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 149,
										"name": "ContrastStandard",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 170,
									"name": "fontSize",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 152,
										"name": "ContrastFontSize",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 171,
							"name": "meetsContrastStandard",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color-contrast/color-contrast-assessor.ts",
									"line": 84,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 172,
									"name": "colorA",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 351,
										"name": "PaletteColor",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 173,
									"name": "colorB",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 351,
										"name": "PaletteColor",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 174,
									"name": "standard",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 149,
										"name": "ContrastStandard",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 175,
									"name": "fontSize",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 152,
										"name": "ContrastFontSize",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 176,
							"name": "meetsContrastStandard",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color-contrast/color-contrast-assessor.ts",
									"line": 89,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 177,
									"name": "colorA",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 178,
									"name": "colorB",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 179,
									"name": "standard",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 149,
										"name": "ContrastStandard",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 180,
									"name": "fontSize",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 152,
										"name": "ContrastFontSize",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						187
					]
				},
				{
					"title": "Methods",
					"children": [
						156
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-contrast/color-contrast-assessor.ts",
					"line": 69,
					"character": 13
				}
			]
		},
		{
			"id": 1,
			"name": "ColorNameManager",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Manager to store and retrieve the names of colors based on their\nhex string value."
					}
				]
			},
			"children": [
				{
					"id": 15,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 16,
							"name": "new ColorNameManager",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1,
								"name": "ColorNameManager",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 9,
					"name": "addColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "color/color-name/color-name-manager.ts",
							"line": 102,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "addColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "PaletteColor.HEX",
										"target": 362
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "PaletteColor.NAME",
										"target": 363
									},
									{
										"kind": "text",
										"text": "\nto the matched colors map."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-name/color-name-manager.ts",
									"line": 102,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 11,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 351,
										"name": "PaletteColor",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 3,
					"name": "getColorName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "color/color-name/color-name-manager.ts",
							"line": 55,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 4,
							"name": "getColorName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the name of the color represented by the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "colorHex",
										"target": 5
									},
									{
										"kind": "text",
										"text": ".\nIf the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "colorHex",
										"target": 5
									},
									{
										"kind": "text",
										"text": " string is not well formatted or the nearest color function\nencounters an error, the method will return undefined."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-name/color-name-manager.ts",
									"line": 55,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 5,
									"name": "colorHex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hex string representation of the color whose\nname is being retrieved (format: "
											},
											{
												"kind": "code",
												"text": "`#RRGGBB`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 6,
					"name": "hasMatch",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "color/color-name/color-name-manager.ts",
							"line": 92,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 7,
							"name": "hasMatch",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Does the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "hex",
										"target": 8
									},
									{
										"kind": "text",
										"text": " string already have a color name match?"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "hex",
												"target": 8
											},
											{
												"kind": "text",
												"text": " has a direct color name match in the manager,\n"
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " if it does not."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-name/color-name-manager.ts",
									"line": 92,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 8,
									"name": "hex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						15
					]
				},
				{
					"title": "Methods",
					"children": [
						9,
						3,
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-name/color-name-manager.ts",
					"line": 40,
					"character": 13
				}
			]
		},
		{
			"id": 82,
			"name": "ColorSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "ColorSelectors choose and return colors from some list or criteria."
					}
				]
			},
			"children": [
				{
					"id": 83,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 69,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 84,
							"name": "new ColorSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 69,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 85,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the color selector."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 86,
									"name": "randomOrder",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A flag that determines the color selection order\nof "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "selectColorFromChoices",
												"target": 110
											},
											{
												"kind": "text",
												"text": ".<br/>\nWhen "
											},
											{
												"kind": "code",
												"text": "`randomOrder`"
											},
											{
												"kind": "text",
												"text": " is "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "selectColorFromChoices",
												"target": 110
											},
											{
												"kind": "text",
												"text": " will select colors in a random order.<br/>\nWhen "
											},
											{
												"kind": "code",
												"text": "`randomOrder`"
											},
											{
												"kind": "text",
												"text": " is "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "selectColorFromChoices",
												"target": 110
											},
											{
												"kind": "text",
												"text": " will select colors in list order."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 82,
								"name": "ColorSelector",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 96,
					"name": "colorNames",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 88,
							"character": 15
						}
					],
					"getSignature": {
						"id": 97,
						"name": "colorNames",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The names of the colors that can be or have been chosen\nby the color selector."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 88,
								"character": 15
							}
						],
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					}
				},
				{
					"id": 98,
					"name": "name",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 95,
							"character": 15
						}
					],
					"getSignature": {
						"id": 99,
						"name": "name",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The name of the selector (e.g. 'blue rgb color selector')."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 95,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 92,
					"name": "type",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 77,
							"character": 24
						}
					],
					"getSignature": {
						"id": 93,
						"name": "type",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The "
										},
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "ColorSelectorType",
											"target": 78
										},
										{
											"kind": "text",
											"text": " of the selector."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 77,
								"character": 24
							}
						],
						"type": {
							"type": "reference",
							"target": 78,
							"name": "ColorSelectorType",
							"package": "@batpb/genart"
						}
					}
				},
				{
					"id": 105,
					"name": "COLOR_NAMES",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 134,
							"character": 18
						}
					],
					"getSignature": {
						"id": 106,
						"name": "COLOR_NAMES",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "A Set of the names of the colors that can be\nor have been chosen by the color selector."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 134,
								"character": 18
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
								"qualifiedName": "Set"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "Set",
							"package": "typescript"
						}
					}
				},
				{
					"id": 100,
					"name": "getBackgroundColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 116,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 101,
							"name": "getBackgroundColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Select and return a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 17
									},
									{
										"kind": "text",
										"text": " object to be used as a background.\nThe color will either be black (#000000), white (#FFFFFF), or a color\nfrom the selector, chosen by the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getColor",
										"target": 94
									},
									{
										"kind": "text",
										"text": " method.<br/>\n<b>IMPORTANT: The sum of chanceOfBlack, chanceOfWhite, and chanceOfColor\nshould be equal to 1.0.</b>"
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 116,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 102,
									"name": "chanceOfBlack",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percent (0-1) chance that the chosen color\nwill be black (#000000). The sum of all percentages should be equal to 1.0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 103,
									"name": "chanceOfWhite",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percent (0-1) chance that the chosen color\nwill be white (#FFFFFF). The sum of all percentages should be equal to 1.0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 104,
									"name": "chanceOfColor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percent (0-1) chance that the chosen color\nwill be a color from the selector ("
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getColor",
												"target": 94
											},
											{
												"kind": "text",
												"text": ").\nThe sum of all percentages should be equal to 1.0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 94,
					"name": "getColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 82,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 95,
							"name": "getColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Select and return a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 17
									},
									{
										"kind": "text",
										"text": " object."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 82,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 107,
					"name": "addColorChoice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 142,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 108,
							"name": "addColorChoice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 17
									},
									{
										"kind": "text",
										"text": " to the list of possible color choices."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 142,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 109,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17,
										"name": "Color",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 110,
					"name": "selectColorFromChoices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 151,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 111,
							"name": "selectColorFromChoices",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The selected "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 17
											},
											{
												"kind": "text",
												"text": ".<br/>\nIf the list of color choices is empty, a default "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 17
											},
											{
												"kind": "text",
												"text": "\nobject (black) will be returned."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 151,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						83
					]
				},
				{
					"title": "Accessors",
					"children": [
						96,
						98,
						92,
						105
					]
				},
				{
					"title": "Methods",
					"children": [
						100,
						94,
						107,
						110
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-selector.ts",
					"line": 32,
					"character": 22
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 114,
					"name": "DefaultColorSelector"
				},
				{
					"type": "reference",
					"target": 365,
					"name": "PaletteColorSelector"
				}
			]
		},
		{
			"id": 137,
			"name": "ColorSelectorManager",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Manager to select a random "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "ColorSelector",
						"target": 82
					},
					{
						"kind": "text",
						"text": " from a set of color selectors."
					}
				]
			},
			"children": [
				{
					"id": 138,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 139,
							"name": "new ColorSelectorManager",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 137,
								"name": "ColorSelectorManager",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 143,
					"name": "addColorSelector",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector-manager.ts",
							"line": 50,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 144,
							"name": "addColorSelector",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ColorSelector",
										"target": 82
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector-manager.ts",
									"line": 50,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 145,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 82,
										"name": "ColorSelector",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 146,
					"name": "addColorSelectors",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector-manager.ts",
							"line": 59,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 147,
							"name": "addColorSelectors",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add multiple "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ColorSelector",
										"target": 82
									},
									{
										"kind": "text",
										"text": " objects."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector-manager.ts",
									"line": 59,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 148,
									"name": "selectors",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
											"qualifiedName": "Iterable"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 82,
												"name": "ColorSelector",
												"package": "@batpb/genart"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Iterable",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 141,
					"name": "getRandomColorSelector",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/color-selector-manager.ts",
							"line": 40,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 142,
							"name": "getRandomColorSelector",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Select a random "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ColorSelector",
										"target": 82
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "ColorSelector",
												"target": 82
											},
											{
												"kind": "text",
												"text": ". If a selector cannot be chosen,\na "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "DefaultColorSelector",
												"target": 114
											},
											{
												"kind": "text",
												"text": " object will be returned."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector-manager.ts",
									"line": 40,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"target": 82,
								"name": "ColorSelector",
								"package": "@batpb/genart"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						138
					]
				},
				{
					"title": "Methods",
					"children": [
						143,
						146,
						141
					]
				}
			],
			"sources": [
				{
					"fileName": "color/color-selector-manager.ts",
					"line": 28,
					"character": 13
				}
			]
		},
		{
			"id": 556,
			"name": "Coordinate",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 557,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate.ts",
							"line": 29,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 558,
							"name": "new Coordinate",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 556,
								"name": "Coordinate",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 561,
					"name": "getX",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate.ts",
							"line": 34,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 562,
							"name": "getX",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate.ts",
									"line": 34,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 563,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 568,
					"name": "getY",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate.ts",
							"line": 52,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 569,
							"name": "getY",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate.ts",
									"line": 52,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 570,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 579,
					"name": "remap",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate.ts",
							"line": 78,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 580,
							"name": "remap",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate.ts",
									"line": 78,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 575,
					"name": "setPosition",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate.ts",
							"line": 70,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 576,
							"name": "setPosition",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate.ts",
									"line": 70,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 577,
									"name": "position",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/p5/src/math/p5.Vector.d.ts",
											"qualifiedName": "\"../../index\".Vector"
										},
										"name": "Vector",
										"package": "@types/p5",
										"qualifiedName": "\"../../index\".Vector"
									}
								},
								{
									"id": 578,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 564,
					"name": "setX",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate.ts",
							"line": 42,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 565,
							"name": "setX",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate.ts",
									"line": 42,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 566,
									"name": "x",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 567,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 571,
					"name": "setY",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate.ts",
							"line": 60,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 572,
							"name": "setY",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate.ts",
									"line": 60,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 573,
									"name": "y",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 574,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						557
					]
				},
				{
					"title": "Methods",
					"children": [
						561,
						568,
						579,
						575,
						564,
						571
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/canvas/drawing/coordinate.ts",
					"line": 25,
					"character": 13
				}
			]
		},
		{
			"id": 589,
			"name": "CoordinateMapper",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 620,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 621,
							"name": "new CoordinateMapper",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 589,
								"name": "CoordinateMapper",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 590,
					"name": "centerX",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 36,
							"character": 22
						}
					],
					"getSignature": {
						"id": 591,
						"name": "centerX",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The center x-axis value of the canvas."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
								"line": 36,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 592,
					"name": "centerY",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 45,
							"character": 22
						}
					],
					"getSignature": {
						"id": 593,
						"name": "centerY",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The center y-axis value of the canvas."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
								"line": 45,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 594,
					"name": "maxX",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 54,
							"character": 22
						}
					],
					"getSignature": {
						"id": 595,
						"name": "maxX",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The maximum visible x-axis value of the canvas."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
								"line": 54,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 596,
					"name": "maxY",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 70,
							"character": 22
						}
					],
					"getSignature": {
						"id": 597,
						"name": "maxY",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The maximum visible y-axis value of the canvas."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
								"line": 70,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 598,
					"name": "minX",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 86,
							"character": 22
						}
					],
					"getSignature": {
						"id": 599,
						"name": "minX",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The minimum visible x-axis value of the canvas."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
								"line": 86,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 600,
					"name": "minY",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 102,
							"character": 22
						}
					],
					"getSignature": {
						"id": 601,
						"name": "minY",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The minimum visible y-axis value of the canvas."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
								"line": 102,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 617,
					"name": "mapCanvasToRatio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 165,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 618,
							"name": "mapCanvasToRatio",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
									"line": 165,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 619,
									"name": "canvasVector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/p5/src/math/p5.Vector.d.ts",
											"qualifiedName": "\"../../index\".Vector"
										},
										"name": "Vector",
										"package": "@types/p5",
										"qualifiedName": "\"../../index\".Vector"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/p5/src/math/p5.Vector.d.ts",
									"qualifiedName": "\"../../index\".Vector"
								},
								"name": "Vector",
								"package": "@types/p5",
								"qualifiedName": "\"../../index\".Vector"
							}
						}
					]
				},
				{
					"id": 611,
					"name": "mapCanvasXToRatio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 151,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 612,
							"name": "mapCanvasXToRatio",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
									"line": 151,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 613,
									"name": "canvasX",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 614,
					"name": "mapCanvasYToRatio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 158,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 615,
							"name": "mapCanvasYToRatio",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
									"line": 158,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 616,
									"name": "canvasY",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 602,
					"name": "mapRatioToCanvas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 116,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 603,
							"name": "mapRatioToCanvas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
									"line": 116,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 604,
									"name": "ratioVector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/p5/src/math/p5.Vector.d.ts",
											"qualifiedName": "\"../../index\".Vector"
										},
										"name": "Vector",
										"package": "@types/p5",
										"qualifiedName": "\"../../index\".Vector"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/p5/src/math/p5.Vector.d.ts",
									"qualifiedName": "\"../../index\".Vector"
								},
								"name": "Vector",
								"package": "@types/p5",
								"qualifiedName": "\"../../index\".Vector"
							}
						}
					]
				},
				{
					"id": 605,
					"name": "mapRatioToCanvasX",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 131,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 606,
							"name": "mapRatioToCanvasX",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Map a percentage value to a value on the x-axis of the canvas.\nA percentage value of 0.5 will be exactly in the middle of the x-axis,\nregardless of canvas resolution or aspect ratio."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
									"line": 131,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 607,
									"name": "ratio",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percentage expressed as a decimal number (e.g. 50% = 0.5)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 608,
					"name": "mapRatioToCanvasY",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
							"line": 144,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 609,
							"name": "mapRatioToCanvasY",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Map a percentage value to a value on the y-axis of the canvas.\nA percentage value of 0.5 will be exactly in the middle of the y-axis,\nregardless of canvas resolution or aspect ratio."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
									"line": 144,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 610,
									"name": "ratio",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percentage expressed as a decimal number (e.g. 50% = 0.5)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						620
					]
				},
				{
					"title": "Accessors",
					"children": [
						590,
						592,
						594,
						596,
						598,
						600
					]
				},
				{
					"title": "Methods",
					"children": [
						617,
						611,
						614,
						602,
						605,
						608
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/canvas/drawing/coordinate-mapper.ts",
					"line": 30,
					"character": 13
				}
			]
		},
		{
			"id": 114,
			"name": "DefaultColorSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Default color selector.\nTo be used when a valid color selector cannot be found."
					}
				]
			},
			"children": [
				{
					"id": 115,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/default-color-selector.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 116,
							"name": "new DefaultColorSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "color/default-color-selector.ts",
									"line": 30,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 114,
								"name": "DefaultColorSelector",
								"package": "@batpb/genart"
							},
							"overwrites": {
								"type": "reference",
								"target": 84,
								"name": "ColorSelector.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 83,
						"name": "ColorSelector.constructor"
					}
				},
				{
					"id": 121,
					"name": "colorNames",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 88,
							"character": 15
						}
					],
					"getSignature": {
						"id": 122,
						"name": "colorNames",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isInherited": true
						},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The names of the colors that can be or have been chosen\nby the color selector."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 88,
								"character": 15
							}
						],
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.colorNames"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 96,
						"name": "ColorSelector.colorNames"
					}
				},
				{
					"id": 123,
					"name": "name",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 95,
							"character": 15
						}
					],
					"getSignature": {
						"id": 124,
						"name": "name",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isInherited": true
						},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The name of the selector (e.g. 'blue rgb color selector')."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 95,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.name"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 98,
						"name": "ColorSelector.name"
					}
				},
				{
					"id": 119,
					"name": "type",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/default-color-selector.ts",
							"line": 50,
							"character": 15
						}
					],
					"getSignature": {
						"id": 120,
						"name": "type",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "ColorSelectorType.DEFAULT",
											"target": 81
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/default-color-selector.ts",
								"line": 50,
								"character": 15
							}
						],
						"type": {
							"type": "reference",
							"target": 78,
							"name": "ColorSelectorType",
							"package": "@batpb/genart"
						},
						"overwrites": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.type"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": 92,
						"name": "ColorSelector.type"
					}
				},
				{
					"id": 130,
					"name": "COLOR_NAMES",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 134,
							"character": 18
						}
					],
					"getSignature": {
						"id": 131,
						"name": "COLOR_NAMES",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isInherited": true
						},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "A Set of the names of the colors that can be\nor have been chosen by the color selector."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 134,
								"character": 18
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
								"qualifiedName": "Set"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "Set",
							"package": "typescript"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.COLOR_NAMES"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 105,
						"name": "ColorSelector.COLOR_NAMES"
					}
				},
				{
					"id": 125,
					"name": "getBackgroundColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 116,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 126,
							"name": "getBackgroundColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Select and return a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 17
									},
									{
										"kind": "text",
										"text": " object to be used as a background.\nThe color will either be black (#000000), white (#FFFFFF), or a color\nfrom the selector, chosen by the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getColor",
										"target": 94
									},
									{
										"kind": "text",
										"text": " method.<br/>\n<b>IMPORTANT: The sum of chanceOfBlack, chanceOfWhite, and chanceOfColor\nshould be equal to 1.0.</b>"
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 116,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 127,
									"name": "chanceOfBlack",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percent (0-1) chance that the chosen color\nwill be black (#000000). The sum of all percentages should be equal to 1.0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 128,
									"name": "chanceOfWhite",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percent (0-1) chance that the chosen color\nwill be white (#FFFFFF). The sum of all percentages should be equal to 1.0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 129,
									"name": "chanceOfColor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percent (0-1) chance that the chosen color\nwill be a color from the selector ("
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getColor",
												"target": 94
											},
											{
												"kind": "text",
												"text": ").\nThe sum of all percentages should be equal to 1.0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 101,
								"name": "ColorSelector.getBackgroundColor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 100,
						"name": "ColorSelector.getBackgroundColor"
					}
				},
				{
					"id": 117,
					"name": "getColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/default-color-selector.ts",
							"line": 43,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 118,
							"name": "getColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A black color "
											},
											{
												"kind": "code",
												"text": "`#000000`"
											},
											{
												"kind": "text",
												"text": ".<br/>\n<div class=\"color-block\" style=\"background: #000000;\">\n    <a href=\"https://coolors.co/000000\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">black (#000000)</h2>\n    </a>\n</div>"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/default-color-selector.ts",
									"line": 43,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							},
							"overwrites": {
								"type": "reference",
								"target": 95,
								"name": "ColorSelector.getColor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 94,
						"name": "ColorSelector.getColor"
					}
				},
				{
					"id": 132,
					"name": "addColorChoice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 142,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 133,
							"name": "addColorChoice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 17
									},
									{
										"kind": "text",
										"text": " to the list of possible color choices."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 142,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 134,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17,
										"name": "Color",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 108,
								"name": "ColorSelector.addColorChoice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 107,
						"name": "ColorSelector.addColorChoice"
					}
				},
				{
					"id": 135,
					"name": "selectColorFromChoices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 151,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 136,
							"name": "selectColorFromChoices",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The selected "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 17
											},
											{
												"kind": "text",
												"text": ".<br/>\nIf the list of color choices is empty, a default "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 17
											},
											{
												"kind": "text",
												"text": "\nobject (black) will be returned."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 151,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 111,
								"name": "ColorSelector.selectColorFromChoices"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 110,
						"name": "ColorSelector.selectColorFromChoices"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						115
					]
				},
				{
					"title": "Accessors",
					"children": [
						121,
						123,
						119,
						130
					]
				},
				{
					"title": "Methods",
					"children": [
						125,
						117,
						132,
						135
					]
				}
			],
			"sources": [
				{
					"fileName": "color/default-color-selector.ts",
					"line": 29,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 82,
					"name": "ColorSelector",
					"package": "@batpb/genart"
				}
			]
		},
		{
			"id": 189,
			"name": "Discriminator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Methods for evaluating if objects implement various interfaces."
					}
				]
			},
			"children": [
				{
					"id": 193,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 194,
							"name": "new Discriminator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 189,
								"name": "Discriminator",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 190,
					"name": "isPaletteColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "discriminator/discriminator.ts",
							"line": 41,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 191,
							"name": "isPaletteColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines if the given object is a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "PaletteColor",
										"target": 351
									},
									{
										"kind": "text",
										"text": "\n(i.e. implements the PaletteColor interface)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the given object implements\nthe "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "PaletteColor",
												"target": 351
											},
											{
												"kind": "text",
												"text": " interface, "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " if it does not."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "discriminator/discriminator.ts",
									"line": 41,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 192,
									"name": "object",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "object",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 351,
									"name": "PaletteColor",
									"package": "@batpb/genart"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						193
					]
				},
				{
					"title": "Methods",
					"children": [
						190
					]
				}
			],
			"sources": [
				{
					"fileName": "discriminator/discriminator.ts",
					"line": 31,
					"character": 13
				}
			]
		},
		{
			"id": 202,
			"name": "Geometry",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 203,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 204,
							"name": "new Geometry",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/geometry.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 205,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "GeometryConfig",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 202,
								"name": "Geometry",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 229,
					"name": "style",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 50,
							"character": 15
						},
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 54,
							"character": 15
						}
					],
					"getSignature": {
						"id": 230,
						"name": "style",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "geometry/shape/geometry.ts",
								"line": 50,
								"character": 15
							}
						],
						"type": {
							"type": "reference",
							"target": 272,
							"name": "GeometryStyle",
							"package": "@batpb/genart"
						}
					},
					"setSignature": {
						"id": 231,
						"name": "style",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"sources": [
							{
								"fileName": "geometry/shape/geometry.ts",
								"line": 54,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 232,
								"name": "style",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "reference",
									"target": 272,
									"name": "GeometryStyle",
									"package": "@batpb/genart"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 225,
					"name": "canvasRedraw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 46,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 226,
							"name": "canvasRedraw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/geometry.ts",
									"line": 46,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"target": 553,
								"name": "CanvasRedrawListener.canvasRedraw"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 552,
						"name": "CanvasRedrawListener.canvasRedraw"
					}
				},
				{
					"id": 227,
					"name": "draw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 48,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 228,
							"name": "draw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/geometry.ts",
									"line": 48,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"target": 555,
								"name": "CanvasRedrawListener.draw"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 554,
						"name": "CanvasRedrawListener.draw"
					}
				},
				{
					"id": 211,
					"name": "getX",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 38,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 212,
							"name": "getX",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/geometry.ts",
									"line": 38,
									"character": 20
								}
							],
							"parameters": [
								{
									"id": 213,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 218,
					"name": "getY",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 42,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 219,
							"name": "getY",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/geometry.ts",
									"line": 42,
									"character": 20
								}
							],
							"parameters": [
								{
									"id": 220,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 207,
					"name": "setPosition",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 36,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 208,
							"name": "setPosition",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/geometry.ts",
									"line": 36,
									"character": 20
								}
							],
							"parameters": [
								{
									"id": 209,
									"name": "position",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/p5/src/math/p5.Vector.d.ts",
											"qualifiedName": "\"../../index\".Vector"
										},
										"name": "Vector",
										"package": "@types/p5",
										"qualifiedName": "\"../../index\".Vector"
									}
								},
								{
									"id": 210,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 214,
					"name": "setX",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 40,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 215,
							"name": "setX",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/geometry.ts",
									"line": 40,
									"character": 20
								}
							],
							"parameters": [
								{
									"id": 216,
									"name": "x",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 217,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 221,
					"name": "setY",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 44,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "setY",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/geometry.ts",
									"line": 44,
									"character": 20
								}
							],
							"parameters": [
								{
									"id": 223,
									"name": "y",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 224,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						203
					]
				},
				{
					"title": "Accessors",
					"children": [
						229
					]
				},
				{
					"title": "Methods",
					"children": [
						225,
						227,
						211,
						218,
						207,
						214,
						221
					]
				}
			],
			"sources": [
				{
					"fileName": "geometry/shape/geometry.ts",
					"line": 29,
					"character": 22
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 240,
					"name": "Point"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 551,
					"name": "CanvasRedrawListener",
					"package": "@batpb/genart"
				}
			]
		},
		{
			"id": 272,
			"name": "GeometryStyle",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 273,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/style/geometry-style.ts",
							"line": 29,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 274,
							"name": "new GeometryStyle",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/style/geometry-style.ts",
									"line": 29,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 275,
									"name": "fill",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 17,
												"name": "Color",
												"package": "@batpb/genart"
											}
										]
									}
								},
								{
									"id": 276,
									"name": "stroke",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 17,
												"name": "Color",
												"package": "@batpb/genart"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 272,
								"name": "GeometryStyle",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 277,
					"name": "fill",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/style/geometry-style.ts",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							}
						]
					},
					"defaultValue": "..."
				},
				{
					"id": 278,
					"name": "stroke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/style/geometry-style.ts",
							"line": 25,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							}
						]
					},
					"defaultValue": "..."
				},
				{
					"id": 280,
					"name": "strokeMultiplier",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/style/geometry-style.ts",
							"line": 34,
							"character": 15
						},
						{
							"fileName": "geometry/style/geometry-style.ts",
							"line": 38,
							"character": 15
						}
					],
					"getSignature": {
						"id": 281,
						"name": "strokeMultiplier",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "geometry/style/geometry-style.ts",
								"line": 34,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 282,
						"name": "strokeMultiplier",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"sources": [
							{
								"fileName": "geometry/style/geometry-style.ts",
								"line": 38,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 283,
								"name": "multiplier",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 286,
					"name": "applyFill",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/style/geometry-style.ts",
							"line": 47,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 287,
							"name": "applyFill",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/style/geometry-style.ts",
									"line": 47,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 288,
					"name": "applyStroke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/style/geometry-style.ts",
							"line": 57,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 289,
							"name": "applyStroke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/style/geometry-style.ts",
									"line": 57,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 284,
					"name": "applyStyle",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/style/geometry-style.ts",
							"line": 42,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 285,
							"name": "applyStyle",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/style/geometry-style.ts",
									"line": 42,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						273
					]
				},
				{
					"title": "Properties",
					"children": [
						277,
						278
					]
				},
				{
					"title": "Accessors",
					"children": [
						280
					]
				},
				{
					"title": "Methods",
					"children": [
						286,
						288,
						284
					]
				}
			],
			"sources": [
				{
					"fileName": "geometry/style/geometry-style.ts",
					"line": 23,
					"character": 13
				}
			]
		},
		{
			"id": 669,
			"name": "MouseMapper",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The MouseMapper will map the current position of the mouse to\ncorresponding locations on the canvas."
					}
				]
			},
			"children": [
				{
					"id": 690,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 691,
							"name": "new MouseMapper",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 669,
								"name": "MouseMapper",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 670,
					"name": "mouseX",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/mouse/mouse-mapper.ts",
							"line": 34,
							"character": 22
						}
					],
					"getSignature": {
						"id": 671,
						"name": "mouseX",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The current mouseX position."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/mouse/mouse-mapper.ts",
								"line": 34,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 674,
					"name": "mouseXRatio",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/mouse/mouse-mapper.ts",
							"line": 52,
							"character": 22
						}
					],
					"getSignature": {
						"id": 675,
						"name": "mouseXRatio",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The current ratio value of the mouseX position,\nwhere the left edge of the canvas maps to 0,\nand the right edge of the canvas maps to 1."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/mouse/mouse-mapper.ts",
								"line": 52,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 672,
					"name": "mouseY",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/mouse/mouse-mapper.ts",
							"line": 42,
							"character": 22
						}
					],
					"getSignature": {
						"id": 673,
						"name": "mouseY",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The current mouseY position."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/mouse/mouse-mapper.ts",
								"line": 42,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 676,
					"name": "mouseYRatio",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/mouse/mouse-mapper.ts",
							"line": 62,
							"character": 22
						}
					],
					"getSignature": {
						"id": 677,
						"name": "mouseYRatio",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The current ratio value of the mouseY position,\nwhere the top edge of the canvas maps to 0,\nand the bottom edge of the canvas maps to 1."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/mouse/mouse-mapper.ts",
								"line": 62,
								"character": 22
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 678,
					"name": "mapMouseXToCanvas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/mouse/mouse-mapper.ts",
							"line": 74,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 679,
							"name": "mapMouseXToCanvas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Map the provided x-axis mouse position to the corresponding value\non the scale of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CoordinateMapper.minX",
										"target": 598
									},
									{
										"kind": "text",
										"text": " to\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CoordinateMapper.maxX",
										"target": 594
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/mouse/mouse-mapper.ts",
									"line": 74,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 680,
									"name": "mouseX",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 684,
					"name": "mapMouseXToRatio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/mouse/mouse-mapper.ts",
							"line": 88,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 685,
							"name": "mapMouseXToRatio",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/mouse/mouse-mapper.ts",
									"line": 88,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 686,
									"name": "mouseX",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 681,
					"name": "mapMouseYToCanvas",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/mouse/mouse-mapper.ts",
							"line": 81,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 682,
							"name": "mapMouseYToCanvas",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/mouse/mouse-mapper.ts",
									"line": 81,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 683,
									"name": "mouseY",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 687,
					"name": "mapMouseYToRatio",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/mouse/mouse-mapper.ts",
							"line": 95,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 688,
							"name": "mapMouseYToRatio",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/mouse/mouse-mapper.ts",
									"line": 95,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 689,
									"name": "mouseY",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						690
					]
				},
				{
					"title": "Accessors",
					"children": [
						670,
						674,
						672,
						676
					]
				},
				{
					"title": "Methods",
					"children": [
						678,
						684,
						681,
						687
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/mouse/mouse-mapper.ts",
					"line": 29,
					"character": 13
				}
			]
		},
		{
			"id": 692,
			"name": "P5Context",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The P5Context provides static access to the p5.js sketch context.\nThis context allows access to all methods and variables of the p5.js library."
					}
				]
			},
			"children": [
				{
					"id": 699,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 700,
							"name": "new P5Context",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 692,
								"name": "P5Context",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 697,
					"name": "p5",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/p5-context/p5-context.ts",
							"line": 58,
							"character": 22
						}
					],
					"getSignature": {
						"id": 698,
						"name": "p5",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The current sketch context.<br/>\nIf no context has been initialized, the method will return\nan \"empty\" sketch context (0x0 canvas; no loop)."
								}
							]
						},
						"sources": [
							{
								"fileName": "sketch/p5-context/p5-context.ts",
								"line": 58,
								"character": 22
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/@types/p5/index.d.ts",
								"qualifiedName": "p5"
							},
							"name": "__module",
							"package": "@types/p5",
							"qualifiedName": "p5"
						}
					}
				},
				{
					"id": 694,
					"name": "initialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "sketch/p5-context/p5-context.ts",
							"line": 46,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 695,
							"name": "initialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initializes the sketch context to allow other accessors to have\naccurate canvas, environment, and runtime information."
									}
								]
							},
							"sources": [
								{
									"fileName": "sketch/p5-context/p5-context.ts",
									"line": 46,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 696,
									"name": "p5",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sketch context of the running p5.js script."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/p5/index.d.ts",
											"qualifiedName": "p5"
										},
										"name": "__module",
										"package": "@types/p5",
										"qualifiedName": "p5"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						699
					]
				},
				{
					"title": "Accessors",
					"children": [
						697
					]
				},
				{
					"title": "Methods",
					"children": [
						694
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/p5-context/p5-context.ts",
					"line": 34,
					"character": 13
				}
			]
		},
		{
			"id": 365,
			"name": "PaletteColorSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A basic "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "ColorSelector",
						"target": 82
					},
					{
						"kind": "text",
						"text": " that chooses colors from a given "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 371,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "color/palette/palette-color-selector.ts",
							"line": 49,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 372,
							"name": "new PaletteColorSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "color/palette/palette-color-selector.ts",
									"line": 49,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 373,
									"name": "palette",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Palette",
												"target": 338
											},
											{
												"kind": "text",
												"text": " from which colors will be selected."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 338,
										"name": "Palette",
										"package": "@batpb/genart"
									}
								},
								{
									"id": 374,
									"name": "buildWithPaletteOrder",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", colors will be chosen\nin the order they appear in the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Palette.COLORS",
												"target": 343
											},
											{
												"kind": "text",
												"text": "\nlist. If buildWithPaletteOrder is "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "randomOrder",
												"target": 376
											},
											{
												"kind": "text",
												"text": " is "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": ", the order\nof colors from "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getColor",
												"target": 379
											},
											{
												"kind": "text",
												"text": " will match the order of colors in the palette."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 375,
									"name": "colorCount",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of colors available in the selector. This number\nshould be less than or equal to the number of colors in the given "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "palette",
												"target": 373
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 376,
									"name": "randomOrder",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A flag that determines the color selection order of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getColor",
												"target": 379
											},
											{
												"kind": "text",
												"text": ".\nWhen "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", colors will be chosen in a random order.\nWhen "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": ", colors will be chosen in the order they were initially selected."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 365,
								"name": "PaletteColorSelector",
								"package": "@batpb/genart"
							},
							"overwrites": {
								"type": "reference",
								"target": 84,
								"name": "ColorSelector.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 83,
						"name": "ColorSelector.constructor"
					}
				},
				{
					"id": 386,
					"name": "colorNames",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 88,
							"character": 15
						}
					],
					"getSignature": {
						"id": 387,
						"name": "colorNames",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isInherited": true
						},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The names of the colors that can be or have been chosen\nby the color selector."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 88,
								"character": 15
							}
						],
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.colorNames"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 96,
						"name": "ColorSelector.colorNames"
					}
				},
				{
					"id": 388,
					"name": "name",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 95,
							"character": 15
						}
					],
					"getSignature": {
						"id": 389,
						"name": "name",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isInherited": true
						},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The name of the selector (e.g. 'blue rgb color selector')."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 95,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.name"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 98,
						"name": "ColorSelector.name"
					}
				},
				{
					"id": 377,
					"name": "type",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/palette/palette-color-selector.ts",
							"line": 73,
							"character": 24
						}
					],
					"getSignature": {
						"id": 378,
						"name": "type",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "inline-tag",
											"tag": "@link",
											"text": "ColorSelectorType.PALETTE",
											"target": 79
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/palette/palette-color-selector.ts",
								"line": 73,
								"character": 24
							}
						],
						"type": {
							"type": "reference",
							"target": 78,
							"name": "ColorSelectorType",
							"package": "@batpb/genart"
						},
						"overwrites": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.type"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": 92,
						"name": "ColorSelector.type"
					}
				},
				{
					"id": 395,
					"name": "COLOR_NAMES",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 134,
							"character": 18
						}
					],
					"getSignature": {
						"id": 396,
						"name": "COLOR_NAMES",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isInherited": true
						},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "A Set of the names of the colors that can be\nor have been chosen by the color selector."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "color/color-selector.ts",
								"line": 134,
								"character": 18
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/typescript/lib/lib.es2015.collection.d.ts",
								"qualifiedName": "Set"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "Set",
							"package": "typescript"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "ColorSelector.COLOR_NAMES"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 105,
						"name": "ColorSelector.COLOR_NAMES"
					}
				},
				{
					"id": 390,
					"name": "getBackgroundColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 116,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 391,
							"name": "getBackgroundColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Select and return a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 17
									},
									{
										"kind": "text",
										"text": " object to be used as a background.\nThe color will either be black (#000000), white (#FFFFFF), or a color\nfrom the selector, chosen by the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getColor",
										"target": 94
									},
									{
										"kind": "text",
										"text": " method.<br/>\n<b>IMPORTANT: The sum of chanceOfBlack, chanceOfWhite, and chanceOfColor\nshould be equal to 1.0.</b>"
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 116,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 392,
									"name": "chanceOfBlack",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percent (0-1) chance that the chosen color\nwill be black (#000000). The sum of all percentages should be equal to 1.0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 393,
									"name": "chanceOfWhite",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percent (0-1) chance that the chosen color\nwill be white (#FFFFFF). The sum of all percentages should be equal to 1.0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 394,
									"name": "chanceOfColor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The percent (0-1) chance that the chosen color\nwill be a color from the selector ("
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getColor",
												"target": 94
											},
											{
												"kind": "text",
												"text": ").\nThe sum of all percentages should be equal to 1.0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 101,
								"name": "ColorSelector.getBackgroundColor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 100,
						"name": "ColorSelector.getBackgroundColor"
					}
				},
				{
					"id": 379,
					"name": "getColor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "color/palette/palette-color-selector.ts",
							"line": 80,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 380,
							"name": "getColor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Select and return a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 17
									},
									{
										"kind": "text",
										"text": " object."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/palette/palette-color-selector.ts",
									"line": 80,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							},
							"overwrites": {
								"type": "reference",
								"target": 95,
								"name": "ColorSelector.getColor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 94,
						"name": "ColorSelector.getColor"
					}
				},
				{
					"id": 397,
					"name": "addColorChoice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 142,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 398,
							"name": "addColorChoice",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Color",
										"target": 17
									},
									{
										"kind": "text",
										"text": " to the list of possible color choices."
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 142,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 399,
									"name": "color",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 17,
										"name": "Color",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 108,
								"name": "ColorSelector.addColorChoice"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 107,
						"name": "ColorSelector.addColorChoice"
					}
				},
				{
					"id": 400,
					"name": "selectColorFromChoices",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "color/color-selector.ts",
							"line": 151,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 401,
							"name": "selectColorFromChoices",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The selected "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 17
											},
											{
												"kind": "text",
												"text": ".<br/>\nIf the list of color choices is empty, a default "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Color",
												"target": 17
											},
											{
												"kind": "text",
												"text": "\nobject (black) will be returned."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "color/color-selector.ts",
									"line": 151,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "Color",
								"package": "@batpb/genart"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 111,
								"name": "ColorSelector.selectColorFromChoices"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 110,
						"name": "ColorSelector.selectColorFromChoices"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						371
					]
				},
				{
					"title": "Accessors",
					"children": [
						386,
						388,
						377,
						395
					]
				},
				{
					"title": "Methods",
					"children": [
						390,
						379,
						397,
						400
					]
				}
			],
			"sources": [
				{
					"fileName": "color/palette/palette-color-selector.ts",
					"line": 33,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 82,
					"name": "ColorSelector",
					"package": "@batpb/genart"
				}
			]
		},
		{
			"id": 240,
			"name": "Point",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 241,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/point.ts",
							"line": 36,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 242,
							"name": "new Point",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/point.ts",
									"line": 36,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 243,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 233,
										"name": "PointConfig",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 240,
								"name": "Point",
								"package": "@batpb/genart"
							},
							"overwrites": {
								"type": "reference",
								"target": 204,
								"name": "Geometry.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 203,
						"name": "Geometry.constructor"
					}
				},
				{
					"id": 268,
					"name": "style",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 50,
							"character": 15
						},
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 54,
							"character": 15
						}
					],
					"getSignature": {
						"id": 269,
						"name": "style",
						"variant": "signature",
						"kind": 524288,
						"flags": {
							"isInherited": true
						},
						"sources": [
							{
								"fileName": "geometry/shape/geometry.ts",
								"line": 50,
								"character": 15
							}
						],
						"type": {
							"type": "reference",
							"target": 272,
							"name": "GeometryStyle",
							"package": "@batpb/genart"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "Geometry.style"
						}
					},
					"setSignature": {
						"id": 270,
						"name": "style",
						"variant": "signature",
						"kind": 1048576,
						"flags": {
							"isInherited": true
						},
						"sources": [
							{
								"fileName": "geometry/shape/geometry.ts",
								"line": 54,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 271,
								"name": "style",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "reference",
									"target": 272,
									"name": "GeometryStyle",
									"package": "@batpb/genart"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "Geometry.style"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 229,
						"name": "Geometry.style"
					}
				},
				{
					"id": 263,
					"name": "canvasRedraw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/point.ts",
							"line": 72,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 264,
							"name": "canvasRedraw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/point.ts",
									"line": 72,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 226,
								"name": "Geometry.canvasRedraw"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 225,
						"name": "Geometry.canvasRedraw"
					}
				},
				{
					"id": 265,
					"name": "draw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/point.ts",
							"line": 76,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 266,
							"name": "draw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/point.ts",
									"line": 76,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 228,
								"name": "Geometry.draw"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 227,
						"name": "Geometry.draw"
					}
				},
				{
					"id": 249,
					"name": "getX",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/point.ts",
							"line": 56,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 250,
							"name": "getX",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/point.ts",
									"line": 56,
									"character": 20
								}
							],
							"parameters": [
								{
									"id": 251,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"target": 212,
								"name": "Geometry.getX"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 211,
						"name": "Geometry.getX"
					}
				},
				{
					"id": 256,
					"name": "getY",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/point.ts",
							"line": 64,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 257,
							"name": "getY",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/point.ts",
									"line": 64,
									"character": 20
								}
							],
							"parameters": [
								{
									"id": 258,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"overwrites": {
								"type": "reference",
								"target": 219,
								"name": "Geometry.getY"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 218,
						"name": "Geometry.getY"
					}
				},
				{
					"id": 245,
					"name": "setPosition",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/point.ts",
							"line": 52,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "setPosition",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/point.ts",
									"line": 52,
									"character": 20
								}
							],
							"parameters": [
								{
									"id": 247,
									"name": "position",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/@types/p5/src/math/p5.Vector.d.ts",
											"qualifiedName": "\"../../index\".Vector"
										},
										"name": "Vector",
										"package": "@types/p5",
										"qualifiedName": "\"../../index\".Vector"
									}
								},
								{
									"id": 248,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 208,
								"name": "Geometry.setPosition"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 207,
						"name": "Geometry.setPosition"
					}
				},
				{
					"id": 252,
					"name": "setX",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/point.ts",
							"line": 60,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 253,
							"name": "setX",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/point.ts",
									"line": 60,
									"character": 20
								}
							],
							"parameters": [
								{
									"id": 254,
									"name": "x",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 255,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 215,
								"name": "Geometry.setX"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 214,
						"name": "Geometry.setX"
					}
				},
				{
					"id": 259,
					"name": "setY",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/point.ts",
							"line": 68,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 260,
							"name": "setY",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "geometry/shape/point.ts",
									"line": 68,
									"character": 20
								}
							],
							"parameters": [
								{
									"id": 261,
									"name": "y",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 262,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 622,
										"name": "CoordinateMode",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"target": 222,
								"name": "Geometry.setY"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 221,
						"name": "Geometry.setY"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						241
					]
				},
				{
					"title": "Accessors",
					"children": [
						268
					]
				},
				{
					"title": "Methods",
					"children": [
						263,
						265,
						249,
						256,
						245,
						252,
						259
					]
				}
			],
			"sources": [
				{
					"fileName": "geometry/shape/point.ts",
					"line": 33,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 202,
					"name": "Geometry",
					"package": "@batpb/genart"
				}
			]
		},
		{
			"id": 705,
			"name": "Random",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A collection of static methods for retrieving random values."
					}
				]
			},
			"children": [
				{
					"id": 739,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 740,
							"name": "new Random",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 705,
								"name": "Random",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 709,
					"name": "randomMethod",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 40,
							"character": 22
						}
					],
					"setSignature": {
						"id": 710,
						"name": "randomMethod",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Set the primary function to be called when generating any random numbers.<br/>\nSet to Math.random by default."
								}
							]
						},
						"sources": [
							{
								"fileName": "random/random.ts",
								"line": 40,
								"character": 22
							}
						],
						"parameters": [
							{
								"id": 711,
								"name": "method",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "reflection",
									"declaration": {
										"id": 712,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"sources": [
											{
												"fileName": "random/random.ts",
												"line": 40,
												"character": 43
											}
										],
										"signatures": [
											{
												"id": 713,
												"name": "__type",
												"variant": "signature",
												"kind": 4096,
												"flags": {},
												"sources": [
													{
														"fileName": "random/random.ts",
														"line": 40,
														"character": 43
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										]
									}
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 728,
					"name": "randomBoolean",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 98,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 729,
							"name": "randomBoolean",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random boolean value."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 98,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 730,
									"name": "chanceOfTrue",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A floating point number between 0 and 1.\nIf provided, it represents the percent chance that this method will return true."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 731,
					"name": "randomElement",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 123,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 732,
							"name": "randomElement",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random element from the given list.\nThis method assumes an equal distribution for all elements of the list.<br/>\nIf an empty list is provided, the function will return undefined."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 123,
									"character": 18
								}
							],
							"typeParameters": [
								{
									"id": 733,
									"name": "Type",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 734,
									"name": "list",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of elements to be selected from."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 733,
											"name": "Type",
											"package": "@batpb/genart",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 733,
										"name": "Type",
										"package": "@batpb/genart",
										"refersToTypeParameter": true
									}
								]
							}
						}
					]
				},
				{
					"id": 714,
					"name": "randomFloat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 50,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 715,
							"name": "randomFloat",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random floating point value greater than or equal to min and less than max."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 50,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 716,
									"name": "min",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The minimum number that can be returned from this function (inclusive)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 717,
									"name": "max",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum number that can be returned from the function (non-inclusive)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 718,
					"name": "randomFloatInRange",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 67,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 719,
							"name": "randomFloatInRange",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random floating point value greater than or equal to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range.min",
												"target": 334
											},
											{
												"kind": "text",
												"text": "\nand less than "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range.max",
												"target": 330
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 67,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 720,
									"name": "range",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range",
												"target": 323
											},
											{
												"kind": "text",
												"text": " that determines the minimum and maximum\nvalues that can be returned from the function."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 323,
										"name": "Range",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 721,
					"name": "randomInt",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 77,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 722,
							"name": "randomInt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random integer value greater than or equal to min and less than max."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 77,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 723,
									"name": "min",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The minimum number that can be returned from this function (inclusive)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 724,
									"name": "max",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum number that can be returned from the function (non-inclusive)."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 725,
					"name": "randomIntInRange",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 88,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 726,
							"name": "randomIntInRange",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random integer value greater than or equal to "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range.min",
												"target": 334
											},
											{
												"kind": "text",
												"text": "\nand less than "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range.max",
												"target": 330
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 88,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 727,
									"name": "range",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Range",
												"target": 323
											},
											{
												"kind": "text",
												"text": " that determines the minimum and maximum\nvalues that can be returned from the function."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 323,
										"name": "Range",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 735,
					"name": "randomWeightedElement",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "random/random.ts",
							"line": 148,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 736,
							"name": "randomWeightedElement",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A random element from the given list.\nThe distribution of the choices will be determined by the weights of each\nelement in the list.<br/>\nIf an empty list is provided, the function will return "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": ".<br/>\nIf the sum of weights in the list is less than 1.0, the function will return "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random.ts",
									"line": 148,
									"character": 18
								}
							],
							"typeParameters": [
								{
									"id": 737,
									"name": "Type",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 738,
									"name": "list",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of elements to be selected from.<br/>\n<b>IMPORTANT: The sum of weights of the objects in this list should be equal to 1.0.</b>"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 701,
											"typeArguments": [
												{
													"type": "reference",
													"target": 737,
													"name": "Type",
													"package": "@batpb/genart",
													"refersToTypeParameter": true
												}
											],
											"name": "WeightedElement",
											"package": "@batpb/genart"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 737,
										"name": "Type",
										"package": "@batpb/genart",
										"refersToTypeParameter": true
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						739
					]
				},
				{
					"title": "Accessors",
					"children": [
						709
					]
				},
				{
					"title": "Methods",
					"children": [
						728,
						731,
						714,
						718,
						721,
						725,
						735
					]
				}
			],
			"sources": [
				{
					"fileName": "random/random.ts",
					"line": 27,
					"character": 13
				}
			]
		},
		{
			"id": 741,
			"name": "RandomSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A class for randomly selecting elements from a given list.\nThis class assumes an equal distribution for all elements of the list."
					}
				]
			},
			"children": [
				{
					"id": 742,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "random/random-selector.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 743,
							"name": "new RandomSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "random/random-selector.ts",
									"line": 33,
									"character": 4
								}
							],
							"typeParameters": [
								{
									"id": 744,
									"name": "Type",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 745,
									"name": "elements",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 744,
											"name": "Type",
											"package": "@batpb/genart",
											"qualifiedName": "RandomSelector.Type",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 741,
								"typeArguments": [
									{
										"type": "reference",
										"target": 744,
										"name": "Type",
										"package": "@batpb/genart",
										"qualifiedName": "RandomSelector.Type",
										"refersToTypeParameter": true
									}
								],
								"name": "RandomSelector",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 747,
					"name": "size",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "random/random-selector.ts",
							"line": 40,
							"character": 15
						}
					],
					"getSignature": {
						"id": 748,
						"name": "size",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Get the number of elements in the list."
								}
							]
						},
						"sources": [
							{
								"fileName": "random/random-selector.ts",
								"line": 40,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 749,
					"name": "getRandomElement",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "random/random-selector.ts",
							"line": 49,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 750,
							"name": "getRandomElement",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Selects random element from the list.<br/>\nThis method assumes an equal distribution for all elements of the list.<br/>\nIf the list is empty, the function will return undefined."
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random-selector.ts",
									"line": 49,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 744,
										"name": "Type",
										"package": "@batpb/genart",
										"qualifiedName": "RandomSelector.Type",
										"refersToTypeParameter": true
									}
								]
							}
						}
					]
				},
				{
					"id": 751,
					"name": "getRandomElementAndRemove",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "random/random-selector.ts",
							"line": 58,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 752,
							"name": "getRandomElementAndRemove",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Selects random element from the list, then removes that element from the list.<br/>\nThis method assumes an equal distribution for all elements of the list.<br/>\nIf the list is empty, the function will return undefined."
									}
								]
							},
							"sources": [
								{
									"fileName": "random/random-selector.ts",
									"line": 58,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 744,
										"name": "Type",
										"package": "@batpb/genart",
										"qualifiedName": "RandomSelector.Type",
										"refersToTypeParameter": true
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						742
					]
				},
				{
					"title": "Accessors",
					"children": [
						747
					]
				},
				{
					"title": "Methods",
					"children": [
						749,
						751
					]
				}
			],
			"sources": [
				{
					"fileName": "random/random-selector.ts",
					"line": 26,
					"character": 13
				}
			],
			"typeParameters": [
				{
					"id": 753,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 323,
			"name": "Range",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Structure to handle a range of values,\nwhere the range has a minimum value and a maximum value."
					}
				]
			},
			"children": [
				{
					"id": 324,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "math/range.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 325,
							"name": "new Range",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "math/range.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 326,
									"name": "_min",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The minimum value of the Range."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 327,
									"name": "_max",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum value of the Range."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 323,
								"name": "Range",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 330,
					"name": "max",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "math/range.ts",
							"line": 41,
							"character": 15
						},
						{
							"fileName": "math/range.ts",
							"line": 51,
							"character": 15
						}
					],
					"getSignature": {
						"id": 331,
						"name": "max",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The maximum value of the Range."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "math/range.ts",
								"line": 41,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 332,
						"name": "max",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "If the given "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "newMax",
									"target": 333
								},
								{
									"kind": "text",
									"text": " is less than the current "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "min",
									"target": 334
								},
								{
									"kind": "text",
									"text": ",\nthe fields "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "min",
									"target": 334
								},
								{
									"kind": "text",
									"text": " and "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "max",
									"target": 330
								},
								{
									"kind": "text",
									"text": " will be set so that "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "min",
									"target": 334
								},
								{
									"kind": "text",
									"text": " is less than "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "max",
									"target": 330
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "math/range.ts",
								"line": 51,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 333,
								"name": "newMax",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new maximum value of the Range."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 334,
					"name": "min",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "math/range.ts",
							"line": 64,
							"character": 15
						},
						{
							"fileName": "math/range.ts",
							"line": 74,
							"character": 15
						}
					],
					"getSignature": {
						"id": 335,
						"name": "min",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The minimum value of the Range."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "math/range.ts",
								"line": 64,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"setSignature": {
						"id": 336,
						"name": "min",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "If the given "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "newMin",
									"target": 337
								},
								{
									"kind": "text",
									"text": " is greater than the current "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "max",
									"target": 330
								},
								{
									"kind": "text",
									"text": ",\nthe fields "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "min",
									"target": 334
								},
								{
									"kind": "text",
									"text": " and "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "max",
									"target": 330
								},
								{
									"kind": "text",
									"text": " will be set so that "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "min",
									"target": 334
								},
								{
									"kind": "text",
									"text": " is less than "
								},
								{
									"kind": "inline-tag",
									"tag": "@link",
									"text": "max",
									"target": 330
								},
								{
									"kind": "text",
									"text": "."
								}
							]
						},
						"sources": [
							{
								"fileName": "math/range.ts",
								"line": 74,
								"character": 15
							}
						],
						"parameters": [
							{
								"id": 337,
								"name": "newMin",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"comment": {
									"summary": [
										{
											"kind": "text",
											"text": "The new minimum value of the Range."
										}
									]
								},
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						324
					]
				},
				{
					"title": "Accessors",
					"children": [
						330,
						334
					]
				}
			],
			"sources": [
				{
					"fileName": "math/range.ts",
					"line": 25,
					"character": 13
				}
			]
		},
		{
			"id": 484,
			"name": "ScreenHandler",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 501,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 502,
							"name": "new ScreenHandler",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 484,
								"name": "ScreenHandler",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 487,
					"name": "currentScreen",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "screen/screen-handler.ts",
							"line": 42,
							"character": 22
						}
					],
					"setSignature": {
						"id": 488,
						"name": "currentScreen",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"sources": [
							{
								"fileName": "screen/screen-handler.ts",
								"line": 42,
								"character": 22
							}
						],
						"parameters": [
							{
								"id": 489,
								"name": "name",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 490,
					"name": "addScreen",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "screen/screen-handler.ts",
							"line": 55,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 491,
							"name": "addScreen",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/screen-handler.ts",
									"line": 55,
									"character": 18
								}
							],
							"parameters": [
								{
									"id": 492,
									"name": "screen",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 463,
										"name": "CanvasScreen",
										"package": "@batpb/genart"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 493,
					"name": "draw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "screen/screen-handler.ts",
							"line": 62,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 494,
							"name": "draw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/screen-handler.ts",
									"line": 62,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 497,
					"name": "keyPressed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "screen/screen-handler.ts",
							"line": 76,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 498,
							"name": "keyPressed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/screen-handler.ts",
									"line": 76,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 495,
					"name": "mousePressed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "screen/screen-handler.ts",
							"line": 69,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 496,
							"name": "mousePressed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/screen-handler.ts",
									"line": 69,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 499,
					"name": "publishRedraw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "screen/screen-handler.ts",
							"line": 83,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 500,
							"name": "publishRedraw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "screen/screen-handler.ts",
									"line": 83,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						501
					]
				},
				{
					"title": "Accessors",
					"children": [
						487
					]
				},
				{
					"title": "Methods",
					"children": [
						490,
						493,
						497,
						495,
						499
					]
				}
			],
			"sources": [
				{
					"fileName": "screen/screen-handler.ts",
					"line": 28,
					"character": 13
				}
			]
		},
		{
			"id": 290,
			"name": "StringMap",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of string keys to some ValueType."
					}
				]
			},
			"children": [
				{
					"id": 291,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 28,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 292,
							"name": "new StringMap",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "map/string-map.ts",
									"line": 28,
									"character": 4
								}
							],
							"typeParameters": [
								{
									"id": 293,
									"name": "ValueType",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"type": {
								"type": "reference",
								"target": 290,
								"typeArguments": [
									{
										"type": "reference",
										"target": 293,
										"name": "ValueType",
										"package": "@batpb/genart",
										"qualifiedName": "StringMap.ValueType",
										"refersToTypeParameter": true
									}
								],
								"name": "StringMap",
								"package": "@batpb/genart"
							}
						}
					]
				},
				{
					"id": 295,
					"name": "keys",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 35,
							"character": 15
						}
					],
					"getSignature": {
						"id": 296,
						"name": "keys",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "All the keys of the map."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "map/string-map.ts",
								"line": 35,
								"character": 15
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
								"qualifiedName": "IterableIterator"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IterableIterator",
							"package": "typescript"
						}
					}
				},
				{
					"id": 299,
					"name": "size",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 49,
							"character": 15
						}
					],
					"getSignature": {
						"id": 300,
						"name": "size",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "The size of the map."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "map/string-map.ts",
								"line": 49,
								"character": 15
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 297,
					"name": "values",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 42,
							"character": 15
						}
					],
					"getSignature": {
						"id": 298,
						"name": "values",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [],
							"blockTags": [
								{
									"tag": "@returns",
									"content": [
										{
											"kind": "text",
											"text": "All the values of the map."
										}
									]
								}
							]
						},
						"sources": [
							{
								"fileName": "map/string-map.ts",
								"line": 42,
								"character": 15
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
								"qualifiedName": "IterableIterator"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 293,
									"name": "ValueType",
									"package": "@batpb/genart",
									"qualifiedName": "StringMap.ValueType",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IterableIterator",
							"package": "typescript"
						}
					}
				},
				{
					"id": 301,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 58,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 302,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieve the value associated with the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "key",
										"target": 303
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "map/string-map.ts",
									"line": 58,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 303,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The key of the desired value in the map."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 293,
										"name": "ValueType",
										"package": "@batpb/genart",
										"qualifiedName": "StringMap.ValueType",
										"refersToTypeParameter": true
									}
								]
							}
						}
					]
				},
				{
					"id": 304,
					"name": "hasKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 67,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 305,
							"name": "hasKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the map contains the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "key",
										"target": 306
									},
									{
										"kind": "text",
										"text": ",\nreturns "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " if it does not."
									}
								]
							},
							"sources": [
								{
									"fileName": "map/string-map.ts",
									"line": 67,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 306,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 307,
					"name": "setKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 77,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 308,
							"name": "setKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Associate the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "key",
										"target": 309
									},
									{
										"kind": "text",
										"text": " with the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "value",
										"target": 310
									},
									{
										"kind": "text",
										"text": " in the map."
									}
								]
							},
							"sources": [
								{
									"fileName": "map/string-map.ts",
									"line": 77,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 309,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Key to set in the map."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 310,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value to be associated with the key."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 293,
										"name": "ValueType",
										"package": "@batpb/genart",
										"qualifiedName": "StringMap.ValueType",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 311,
					"name": "setUndefinedKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "map/string-map.ts",
							"line": 90,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 312,
							"name": "setUndefinedKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Associate the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "key",
										"target": 313
									},
									{
										"kind": "text",
										"text": " with the given "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "value",
										"target": 314
									},
									{
										"kind": "text",
										"text": " in the map\nonly if the key has not been set in the map."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the operation is successful, "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " if it is not."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "map/string-map.ts",
									"line": 90,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 313,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Key to set in the map."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 314,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value to be associated with the key."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 293,
										"name": "ValueType",
										"package": "@batpb/genart",
										"qualifiedName": "StringMap.ValueType",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 315,
									"name": "errorMessage",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Message to log if the key already has a value."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						291
					]
				},
				{
					"title": "Accessors",
					"children": [
						295,
						299,
						297
					]
				},
				{
					"title": "Methods",
					"children": [
						301,
						304,
						307,
						311
					]
				}
			],
			"sources": [
				{
					"fileName": "map/string-map.ts",
					"line": 22,
					"character": 6
				}
			],
			"typeParameters": [
				{
					"id": 316,
					"name": "ValueType",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 503,
			"name": "AspectRatio",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the width to height ratio of a canvas."
					}
				]
			},
			"children": [
				{
					"id": 506,
					"name": "HEIGHT_RATIO",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height ratio component."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratio.ts",
							"line": 38,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 504,
					"name": "NAME",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the aspect ratio."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratio.ts",
							"line": 28,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 505,
					"name": "WIDTH_RATIO",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width ratio component."
							}
						]
					},
					"sources": [
						{
							"fileName": "sketch/canvas/aspect-ratio/aspect-ratio.ts",
							"line": 33,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						506,
						504,
						505
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/canvas/aspect-ratio/aspect-ratio.ts",
					"line": 24,
					"character": 17
				}
			]
		},
		{
			"id": 551,
			"name": "CanvasRedrawListener",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 552,
					"name": "canvasRedraw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/redraw-event/canvas-redraw-listener.ts",
							"line": 31,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 553,
							"name": "canvasRedraw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/redraw-event/canvas-redraw-listener.ts",
									"line": 31,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 554,
					"name": "draw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/drawable.ts",
							"line": 28,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 555,
							"name": "draw",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/drawable.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 627,
								"name": "Drawable.draw"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 626,
						"name": "Drawable.draw"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						552,
						554
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/canvas/drawing/redraw-event/canvas-redraw-listener.ts",
					"line": 28,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 625,
					"name": "Drawable",
					"package": "@batpb/genart"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 202,
					"name": "Geometry"
				}
			]
		},
		{
			"id": 625,
			"name": "Drawable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 626,
					"name": "draw",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sketch/canvas/drawing/drawable.ts",
							"line": 28,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 627,
							"name": "draw",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "sketch/canvas/drawing/drawable.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						626
					]
				}
			],
			"sources": [
				{
					"fileName": "sketch/canvas/drawing/drawable.ts",
					"line": 25,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 551,
					"name": "CanvasRedrawListener"
				}
			]
		},
		{
			"id": 199,
			"name": "GeometryConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 200,
					"name": "coordinateMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 25,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": 622,
						"name": "CoordinateMode",
						"package": "@batpb/genart"
					}
				},
				{
					"id": 201,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 26,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": 272,
						"name": "GeometryStyle",
						"package": "@batpb/genart"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						200,
						201
					]
				}
			],
			"sources": [
				{
					"fileName": "geometry/shape/geometry.ts",
					"line": 24,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 233,
					"name": "PointConfig"
				}
			]
		},
		{
			"id": 338,
			"name": "Palette",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A collection of "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects."
					}
				]
			},
			"children": [
				{
					"id": 343,
					"name": "COLORS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The list of "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PaletteColor",
								"target": 351
							},
							{
								"kind": "text",
								"text": " objects that compose the palette."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette.ts",
							"line": 51,
							"character": 13
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 351,
							"name": "PaletteColor",
							"package": "@batpb/genart"
						}
					}
				},
				{
					"id": 344,
					"name": "CONTRAST_MAP",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A map of hex color strings to arrays of hex colors,\nwhere each color in the array passes the WCAG AA standard\nwith normal and large size text when compared to the key.<br/>\nThe only colors listed in this map should be the colors of the\npalette, black (#000000), and white (#FFFFFF)."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette.ts",
							"line": 60,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 345,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 346,
									"name": "#000000",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The colors in the palette that pass the WCAG AA standard when\ncompared to black (#000000). This list should NOT contain\nwhite (#FFFFFF) unless it is a color listed in the palette."
											}
										]
									},
									"sources": [
										{
											"fileName": "color/palette/palette.ts",
											"line": 66,
											"character": 8
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 347,
									"name": "#FFFFFF",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The colors in the palette that pass the WCAG AA standard when\ncompared to white (#FFFFFF). This list should NOT contain\nblack (#000000) unless it is a color listed in the palette."
											}
										]
									},
									"sources": [
										{
											"fileName": "color/palette/palette.ts",
											"line": 73,
											"character": 8
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										346,
										347
									]
								}
							],
							"sources": [
								{
									"fileName": "color/palette/palette.ts",
									"line": 60,
									"character": 28
								}
							],
							"indexSignatures": [
								{
									"id": 348,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "color/palette/palette.ts",
											"line": 75,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 349,
											"name": "HEX",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 350,
					"name": "DISCRIMINATOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminator for determining if an object is a Palette."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette.ts",
							"line": 81,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": 196,
						"name": "PALETTE",
						"package": "@batpb/genart",
						"qualifiedName": "Discriminators.PALETTE"
					}
				},
				{
					"id": 342,
					"name": "IS_GRADIENT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag indicating if the palette is a gradient."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette.ts",
							"line": 46,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 339,
					"name": "NAME",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the palette."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette.ts",
							"line": 31,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 340,
					"name": "SOURCE",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The source of the palette."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette.ts",
							"line": 36,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 341,
					"name": "SOURCE_URL",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The source URL of the palette."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette.ts",
							"line": 41,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						343,
						344,
						350,
						342,
						339,
						340,
						341
					]
				}
			],
			"sources": [
				{
					"fileName": "color/palette/palette.ts",
					"line": 27,
					"character": 17
				}
			]
		},
		{
			"id": 351,
			"name": "PaletteColor",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A color to be used in a "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 364,
					"name": "DISCRIMINATOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Discriminator for determining if an object is a PaletteColor."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette-color.ts",
							"line": 81,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": 197,
						"name": "PALETTE_COLOR",
						"package": "@batpb/genart",
						"qualifiedName": "Discriminators.PALETTE_COLOR"
					}
				},
				{
					"id": 362,
					"name": "HEX",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The hex string representation of the color (format: "
							},
							{
								"kind": "code",
								"text": "`#RRGGBB`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette-color.ts",
							"line": 71,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 357,
					"name": "HSL",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HSL (hue, saturation, lightness) components of the color."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette-color.ts",
							"line": 51,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 358,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 359,
									"name": "H",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hue component (0-360)."
											}
										]
									},
									"sources": [
										{
											"fileName": "color/palette/palette-color.ts",
											"line": 55,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 361,
									"name": "L",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The lightness component (0-100)."
											}
										]
									},
									"sources": [
										{
											"fileName": "color/palette/palette-color.ts",
											"line": 65,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 360,
									"name": "S",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The saturation component (0-100)."
											}
										]
									},
									"sources": [
										{
											"fileName": "color/palette/palette-color.ts",
											"line": 60,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										359,
										361,
										360
									]
								}
							],
							"sources": [
								{
									"fileName": "color/palette/palette-color.ts",
									"line": 51,
									"character": 18
								}
							]
						}
					}
				},
				{
					"id": 363,
					"name": "NAME",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the color."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette-color.ts",
							"line": 76,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 352,
					"name": "RGB",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The RGB (red, green, blue) components of the color."
							}
						]
					},
					"sources": [
						{
							"fileName": "color/palette/palette-color.ts",
							"line": 31,
							"character": 13
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 353,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 356,
									"name": "B",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The blue component (0-255)."
											}
										]
									},
									"sources": [
										{
											"fileName": "color/palette/palette-color.ts",
											"line": 45,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 355,
									"name": "G",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The green component (0-255)."
											}
										]
									},
									"sources": [
										{
											"fileName": "color/palette/palette-color.ts",
											"line": 40,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 354,
									"name": "R",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The red component (0-255)."
											}
										]
									},
									"sources": [
										{
											"fileName": "color/palette/palette-color.ts",
											"line": 35,
											"character": 17
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										356,
										355,
										354
									]
								}
							],
							"sources": [
								{
									"fileName": "color/palette/palette-color.ts",
									"line": 31,
									"character": 18
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						364,
						362,
						357,
						363,
						352
					]
				}
			],
			"sources": [
				{
					"fileName": "color/palette/palette-color.ts",
					"line": 27,
					"character": 17
				}
			]
		},
		{
			"id": 233,
			"name": "PointConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 238,
					"name": "coordinateMode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 25,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": 622,
						"name": "CoordinateMode",
						"package": "@batpb/genart"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 200,
						"name": "GeometryConfig.coordinateMode"
					}
				},
				{
					"id": 234,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/point.ts",
							"line": 28,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/@types/p5/src/math/p5.Vector.d.ts",
									"qualifiedName": "\"../../index\".Vector"
								},
								"name": "Vector",
								"package": "@types/p5",
								"qualifiedName": "\"../../index\".Vector"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 235,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 236,
											"name": "x",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "geometry/shape/point.ts",
													"line": 28,
													"character": 41
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 237,
											"name": "y",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "geometry/shape/point.ts",
													"line": 28,
													"character": 52
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												236,
												237
											]
										}
									],
									"sources": [
										{
											"fileName": "geometry/shape/point.ts",
											"line": 28,
											"character": 39
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 239,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "geometry/shape/geometry.ts",
							"line": 26,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": 272,
						"name": "GeometryStyle",
						"package": "@batpb/genart"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 201,
						"name": "GeometryConfig.style"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						238,
						234,
						239
					]
				}
			],
			"sources": [
				{
					"fileName": "geometry/shape/point.ts",
					"line": 27,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 199,
					"name": "GeometryConfig",
					"package": "@batpb/genart"
				}
			]
		},
		{
			"id": 701,
			"name": "WeightedElement",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A structure for specifying weights of different values\nwhen selecting elements in an uneven distribution.\nThe greater the weight, the more likely the element will be chosen."
					}
				]
			},
			"children": [
				{
					"id": 702,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value returned if this element is selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "random/weighted-element.ts",
							"line": 28,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"target": 704,
						"name": "Type",
						"package": "@batpb/genart",
						"qualifiedName": "WeightedElement.Type",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 703,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight associated with this element.\nThe greater the weight, the more likely the element will be selected."
							}
						]
					},
					"sources": [
						{
							"fileName": "random/weighted-element.ts",
							"line": 34,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						702,
						703
					]
				}
			],
			"sources": [
				{
					"fileName": "random/weighted-element.ts",
					"line": 24,
					"character": 10
				}
			],
			"typeParameters": [
				{
					"id": 704,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 435,
			"name": "ALL_PALETTE_COLORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hex values to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects for all palette colors.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/all-colors.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Colors</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/palette-color-maps.ts",
					"line": 29,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 351,
						"name": "PaletteColor",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 454,
			"name": "ALL_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for all palettes.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/all-palettes.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Palettes</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/palette-maps.ts",
					"line": 29,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 461,
			"name": "ASEXUAL_FLAG_PALETTE",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<!-- Coolors Palette Widget -->\n<script src=\"https://coolors.co/palette-widget/widget.js\"></script>\n<script data-id=\"08264250835324647\">new CoolorsPaletteWidget(\"08264250835324647\", [\"000000\",\"a3a3a3\",\"ffffff\",\"80007f\"],\"asexual flag\"); </script>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_000000",
								"target": 402
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_A3A3A3",
								"target": 412
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_FFFFFF",
								"target": 434
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_80007F",
								"target": 426
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palettes/pride/asexual-flag-palette.ts",
					"line": 37,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 338,
				"name": "Palette",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 541,
			"name": "ASPECT_RATIOS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pre-set "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "AspectRatio",
						"target": 503
					},
					{
						"kind": "text",
						"text": " objects for easy access."
					}
				]
			},
			"sources": [
				{
					"fileName": "sketch/canvas/aspect-ratio/aspect-ratios.ts",
					"line": 80,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 532,
						"name": "AspectRatioName",
						"package": "@batpb/genart"
					},
					{
						"type": "reference",
						"target": 503,
						"name": "AspectRatio",
						"package": "@batpb/genart"
					}
				],
				"name": "Record",
				"package": "typescript"
			},
			"defaultValue": "..."
		},
		{
			"id": 436,
			"name": "BLACK_PALETTE_COLORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hex values to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects for all\nblack palette colors.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/black/black-colors.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Colors</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/palette-color-maps.ts",
					"line": 40,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 351,
						"name": "PaletteColor",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 459,
			"name": "BLUE_LILY_PALETTE",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<!-- Coolors Palette Widget -->\n<script src=\"https://coolors.co/palette-widget/widget.js\"></script>\n<script data-id=\"05684644562469574\">new CoolorsPaletteWidget(\"05684644562469574\", [\"f0f3f4\",\"fafeff\",\"7dced8\",\"1d90af\",\"3b2212\"],\"blue lily\"); </script>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_F0F3F4",
								"target": 413
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_FAFEFF",
								"target": 432
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_7DCED8",
								"target": 408
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_1D90AF",
								"target": 407
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_3B2212",
								"target": 409
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palettes/nature/flowers/blue-lily-palette.ts",
					"line": 39,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 338,
				"name": "Palette",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 437,
			"name": "BLUE_PALETTE_COLORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hex values to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects for all\nblue palette colors.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/blue/blue-colors-by-luminance.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Colors</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/palette-color-maps.ts",
					"line": 51,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 351,
						"name": "PaletteColor",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 458,
			"name": "BRITTNI_PALETTE",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<!-- Coolors Palette Widget -->\n<script src=\"https://coolors.co/palette-widget/widget.js\"></script>\n<script data-id=\"03724492652337519\">new CoolorsPaletteWidget(\"03724492652337519\", [\"121212\",\"0437f1\",\"ff6bb5\",\"0fff4f\",\"7a00f5\"],\"brittni\"); </script>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_121212",
								"target": 403
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_0437F1",
								"target": 406
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_FF6BB5",
								"target": 424
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_0FFF4F",
								"target": 415
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_7A00F5",
								"target": 425
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palettes/miscellaneous/brittni-palette.ts",
					"line": 38,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 338,
				"name": "Palette",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 438,
			"name": "BROWN_PALETTE_COLORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hex values to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects for all\nbrown palette colors.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/brown/brown-colors.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Colors</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/palette-color-maps.ts",
					"line": 62,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 351,
						"name": "PaletteColor",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 445,
			"name": "CHRISTMAS_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for all Christmas palettes.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/holiday/christmas/christmas-palettes.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Palettes</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/holidays/christmas/christmas-palette-maps.ts",
					"line": 30,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 456,
			"name": "CLASSIC_CHRISTMAS_PALETTE",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<!-- Coolors Palette Widget -->\n<script src=\"https://coolors.co/palette-widget/widget.js\"></script>\n<script data-id=\"048851888975141655\">new CoolorsPaletteWidget(\"048851888975141655\", [\"bc010a\",\"d01625\",\"007058\",\"23856d\",\"fbf9f9\"],\"classic christmas\"); </script>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_BC010A",
								"target": 429
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_D01625",
								"target": 430
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_007058",
								"target": 414
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_23856D",
								"target": 416
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_FBF9F9",
								"target": 433
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palettes/holidays/christmas/classic-christmas-palette.ts",
					"line": 39,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 338,
				"name": "Palette",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 462,
			"name": "DALLAS_COWBOYS_PALETTE",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<!-- Coolors Palette Widget -->\n<script src=\"https://coolors.co/palette-widget/widget.js\"></script>\n<script data-id=\"009411858208226276\">new CoolorsPaletteWidget(\"009411858208226276\", [\"041e43\",\"869498\",\"ffffff\",\"7e9594\",\"003494\"],\"dallas cowboys\"); </script>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_041E43",
								"target": 405
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_869498",
								"target": 411
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_FFFFFF",
								"target": 434
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_7E9594",
								"target": 410
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_003494",
								"target": 404
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palettes/sports/football/dallas-cowboys-palette.ts",
					"line": 39,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 338,
				"name": "Palette",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 449,
			"name": "FLOWERS_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for all flowers palettes.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/nature/flowers/flowers-palettes.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Palettes</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/nature/flowers/flowers-palette-maps.ts",
					"line": 30,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 452,
			"name": "FOOTBALL_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for all football palettes.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/sports/football/football-palettes.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Palettes</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/sports/football/football-palette-maps.ts",
					"line": 30,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 457,
			"name": "GLITTER_PALETTE",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<!-- Coolors Palette Widget -->\n<script src=\"https://coolors.co/palette-widget/widget.js\"></script>\n<script data-id=\"09635237276120507\">new CoolorsPaletteWidget(\"09635237276120507\", [\"fce3ec\",\"f8b9ce\",\"f490b1\",\"f06090\",\"ec417a\"],\"glitter\"); </script>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_FCE3EC",
								"target": 423
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_F8B9CE",
								"target": 422
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_F490B1",
								"target": 421
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_F06090",
								"target": 420
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_EC417A",
								"target": 419
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palettes/holidays/valentines-day/glitter-palette.ts",
					"line": 40,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 338,
				"name": "Palette",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 455,
			"name": "GRADIENT_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for gradient palettes.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/gradient-palettes.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Palettes</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/palette-maps.ts",
					"line": 39,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 439,
			"name": "GRAY_PALETTE_COLORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hex values to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects for all\ngray palette colors.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/gray/gray-colors.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Colors</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/palette-color-maps.ts",
					"line": 73,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 351,
						"name": "PaletteColor",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 440,
			"name": "GREEN_PALETTE_COLORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hex values to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects for all\ngreen palette colors.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/green/green-colors-by-luminance.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Colors</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/palette-color-maps.ts",
					"line": 84,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 351,
						"name": "PaletteColor",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 447,
			"name": "HOLIDAYS_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for all holidays palettes.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/holidays/holidays-palettes.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Palettes</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/holidays/holidays-palette-maps.ts",
					"line": 29,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 448,
			"name": "MISCELLANEOUS_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for all miscellaneous palettes.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/miscellaneous/miscellaneous-palettes.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Palettes</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/miscellaneous/miscellaneous-pallete-maps.ts",
					"line": 29,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 450,
			"name": "NATURE_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for all nature palettes.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/nature/nature-palettes.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Palettes</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/nature/nature-palette-maps.ts",
					"line": 29,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 402,
			"name": "PC_000000",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #000000;\">\n    <a href=\"https://coolors.co/000000\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">black (#000000)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ASEXUAL_FLAG_PALETTE",
								"target": 461
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/black/pc-000000.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 404,
			"name": "PC_003494",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #003494;\">\n    <a href=\"https://coolors.co/003494\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">smalt (#003494)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DALLAS_COWBOYS_PALETTE",
								"target": 462
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/blue/pc-003494.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 414,
			"name": "PC_007058",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #007058;\">\n    <a href=\"https://coolors.co/007058\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">teal dark green (#007058)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CLASSIC_CHRISTMAS_PALETTE",
								"target": 456
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/green/pc-007058.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 405,
			"name": "PC_041E43",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #041E43;\">\n    <a href=\"https://coolors.co/041e43\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">midnight mirage (#041E43)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DALLAS_COWBOYS_PALETTE",
								"target": 462
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/blue/pc-041e43.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 406,
			"name": "PC_0437F1",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #0437F1;\">\n    <a href=\"https://coolors.co/0437f1\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">blue bouquet (#0437F1)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BRITTNI_PALETTE",
								"target": 458
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/blue/pc-0437f1.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 415,
			"name": "PC_0FFF4F",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #0FFF4F;\">\n    <a href=\"https://coolors.co/0fff4f\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">cathode green (#0FFF4F)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BRITTNI_PALETTE",
								"target": 458
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/green/pc-0fff4f.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 403,
			"name": "PC_121212",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #121212;\">\n    <a href=\"https://coolors.co/121212\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">dark tone ink (#121212)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BRITTNI_PALETTE",
								"target": 458
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/black/pc-121212.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 407,
			"name": "PC_1D90AF",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #1D90AF;\">\n    <a href=\"https://coolors.co/1d90af\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">mediterranean sea (#1D90AF)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BLUE_LILY_PALETTE",
								"target": 459
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/blue/pc-1d90af.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 416,
			"name": "PC_23856D",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #23856D;\">\n    <a href=\"https://coolors.co/23856d\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">accent green blue (#23856D)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CLASSIC_CHRISTMAS_PALETTE",
								"target": 456
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/green/pc-23856d.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 409,
			"name": "PC_3B2212",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #3B2212;\">\n    <a href=\"https://coolors.co/3b2212\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">délicieux au chocolat (#3B2212)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BLUE_LILY_PALETTE",
								"target": 459
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/brown/pc-3b2212.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 417,
			"name": "PC_5F8661",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #5F8661;\">\n    <a href=\"https://coolors.co/5f8661\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">tuscan herbs (#5F8661)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "WHITE_LILY_PALETTE",
								"target": 460
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/green/pc-5f8661.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 425,
			"name": "PC_7A00F5",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #7A00F5;\">\n    <a href=\"https://coolors.co/7a00f5\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">poison purple (#7A00F5)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BRITTNI_PALETTE",
								"target": 458
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/purple/pc-7a00f5.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 408,
			"name": "PC_7DCED8",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #7DCED8;\">\n    <a href=\"https://coolors.co/7dced8\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">spray (#7DCED8)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BLUE_LILY_PALETTE",
								"target": 459
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/blue/pc-7dced8.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 410,
			"name": "PC_7E9594",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #7E9594;\">\n    <a href=\"https://coolors.co/7e9594\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">green granite (#7E9594)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DALLAS_COWBOYS_PALETTE",
								"target": 462
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/gray/pc-7e9594.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 426,
			"name": "PC_80007F",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #80007F;\">\n    <a href=\"https://coolors.co/80007f\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">philippine violet (#80007F)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ASEXUAL_FLAG_PALETTE",
								"target": 461
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/purple/pc-80007f.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 411,
			"name": "PC_869498",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #869498;\">\n    <a href=\"https://coolors.co/869498\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">carrier pigeon blue (#869498)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DALLAS_COWBOYS_PALETTE",
								"target": 462
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/gray/pc-869498.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 412,
			"name": "PC_A3A3A3",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #A3A3A3;\">\n    <a href=\"https://coolors.co/a3a3a3\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">dark souls (#A3A3A3)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ASEXUAL_FLAG_PALETTE",
								"target": 461
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/gray/pc-a3a3a3.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 427,
			"name": "PC_AEAED6",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #AEAED6;\">\n    <a href=\"https://coolors.co/aeaed6\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">pixie violet (#AEAED6)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "WHITE_LILY_PALETTE",
								"target": 460
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/purple/pc-aeaed6.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 418,
			"name": "PC_B1C69F",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #B1C69F;\">\n    <a href=\"https://coolors.co/b1c69f\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">wasabi peanut (#B1C69F)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "WHITE_LILY_PALETTE",
								"target": 460
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/green/pc-b1c69f.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 429,
			"name": "PC_BC010A",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #BC010A;\">\n    <a href=\"https://coolors.co/bc010a\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">bird's eye (#BC010A)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CLASSIC_CHRISTMAS_PALETTE",
								"target": 456
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/red/pc-bc010a.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 430,
			"name": "PC_D01625",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #D01625;\">\n    <a href=\"https://coolors.co/d01625\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block white-pass\">cartoon violence (#D01625)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CLASSIC_CHRISTMAS_PALETTE",
								"target": 456
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/red/pc-d01625.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 428,
			"name": "PC_D6D6FF",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #D6D6FF;\">\n    <a href=\"https://coolors.co/d6d6ff\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">pale lavender (#D6D6FF)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "WHITE_LILY_PALETTE",
								"target": 460
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/purple/pc-d6d6ff.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 419,
			"name": "PC_EC417A",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #EC417A;\">\n    <a href=\"https://coolors.co/ec417a\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">radishical (#EC417A)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GLITTER_PALETTE",
								"target": 457
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/pink/pc-ec417a.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 420,
			"name": "PC_F06090",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #F06090;\">\n    <a href=\"https://coolors.co/f06090\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">medium pink (#F06090)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GLITTER_PALETTE",
								"target": 457
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/pink/pc-f06090.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 413,
			"name": "PC_F0F3F4",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #F0F3F4;\">\n    <a href=\"https://coolors.co/f0f3f4\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">zappy zebra (#F0F3F4)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BLUE_LILY_PALETTE",
								"target": 459
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/gray/pc-f0f3f4.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 421,
			"name": "PC_F490B1",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #F490B1;\">\n    <a href=\"https://coolors.co/f490b1\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">sachet pink (#F490B1)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GLITTER_PALETTE",
								"target": 457
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/pink/pc-f490b1.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 422,
			"name": "PC_F8B9CE",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #F8B9CE;\">\n    <a href=\"https://coolors.co/f8b9ce\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">christy's smile (#F8B9CE)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GLITTER_PALETTE",
								"target": 457
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/pink/pc-f8b9ce.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 431,
			"name": "PC_FAFBEF",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #FAFBEF;\">\n    <a href=\"https://coolors.co/fafbef\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">enoki (#FAFBEF)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "WHITE_LILY_PALETTE",
								"target": 460
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/white/pc-fafbef.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 432,
			"name": "PC_FAFEFF",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #FAFEFF;\">\n    <a href=\"https://coolors.co/fafeff\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">polar bear in a blizzard (#FAFEFF)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BLUE_LILY_PALETTE",
								"target": 459
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/white/pc-fafeff.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 433,
			"name": "PC_FBF9F9",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #FBF9F9;\">\n    <a href=\"https://coolors.co/fbf9f9\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">doctor white (#FBF9F9)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "CLASSIC_CHRISTMAS_PALETTE",
								"target": 456
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/white/pc-fbf9f9.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 423,
			"name": "PC_FCE3EC",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #FCE3EC;\">\n    <a href=\"https://coolors.co/fce3ec\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">spun sugar (#FCE3EC)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "GLITTER_PALETTE",
								"target": 457
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/pink/pc-fce3ec.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 424,
			"name": "PC_FF6BB5",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #FF6BB5;\">\n    <a href=\"https://coolors.co/ff6bb5\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">fen hong pink (#FF6BB5)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "BRITTNI_PALETTE",
								"target": 458
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/pink/pc-ff6bb5.ts",
					"line": 36,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 434,
			"name": "PC_FFFFFF",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<div class=\"color-block\" style=\"background: #FFFFFF;\">\n    <a href=\"https://coolors.co/ffffff\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <h2 class=\"color-block black-pass\">white (#FFFFFF)</h2>\n    </a>\n</div>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ASEXUAL_FLAG_PALETTE",
								"target": 461
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "DALLAS_COWBOYS_PALETTE",
								"target": 462
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/white/pc-ffffff.ts",
					"line": 37,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 351,
				"name": "PaletteColor",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 441,
			"name": "PINK_PALETTE_COLORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hex values to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects for all\npink palette colors.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/pink/pink-colors-by-luminance.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Colors</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/palette-color-maps.ts",
					"line": 95,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 351,
						"name": "PaletteColor",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 451,
			"name": "PRIDE_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for all pride palettes."
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/pride/pride-palette-maps.ts",
					"line": 29,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 442,
			"name": "PURPLE_PALETTE_COLORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hex values to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects for all\npurple palette colors.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/purple/purple-colors.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Colors</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/palette-color-maps.ts",
					"line": 106,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 351,
						"name": "PaletteColor",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 443,
			"name": "RED_PALETTE_COLORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hex values to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects for all\nred palette colors.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/red/red-colors-by-luminance.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Colors</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/palette-color-maps.ts",
					"line": 117,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 351,
						"name": "PaletteColor",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 453,
			"name": "SPORTS_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for all sports palettes.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/sports/sports-palettes.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Palettes</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/sports/sports-palette-maps.ts",
					"line": 29,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 446,
			"name": "VALENTINES_PALETTES",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of palette names to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "Palette",
						"target": 338
					},
					{
						"kind": "text",
						"text": " objects for all Valentine's Day palettes.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/holiday/valentines-day/valentines-day-palettes.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Palettes</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-maps/holidays/valentines-day/valentines-day-palette-maps.ts",
					"line": 30,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 338,
						"name": "Palette",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 460,
			"name": "WHITE_LILY_PALETTE",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "<!-- Coolors Palette Widget -->\n<script src=\"https://coolors.co/palette-widget/widget.js\"></script>\n<script data-id=\"08679171490640973\">new CoolorsPaletteWidget(\"08679171490640973\", [\"fafbef\",\"b1c69f\",\"5f8661\",\"d6d6ff\",\"aeaed6\"],\"white lily\"); </script>"
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_FAFBEF",
								"target": 431
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_B1C69F",
								"target": 418
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_5F8661",
								"target": 417
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_D6D6FF",
								"target": 428
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "PC_AEAED6",
								"target": 427
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palettes/nature/flowers/white-lily-palette.ts",
					"line": 39,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 338,
				"name": "Palette",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 444,
			"name": "WHITE_PALETTE_COLORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of hex values to "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "PaletteColor",
						"target": 351
					},
					{
						"kind": "text",
						"text": " objects for all\nwhite palette colors.\n\n<a href=\"https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/white/white-colors.html\" target=\"_blank\" rel=\"noopener noreferrer\">See the Colors</a>"
					}
				]
			},
			"sources": [
				{
					"fileName": "color/palette/palette-colors/palette-color-maps.ts",
					"line": 128,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"target": 290,
				"typeArguments": [
					{
						"type": "reference",
						"target": 351,
						"name": "PaletteColor",
						"package": "@batpb/genart"
					}
				],
				"name": "StringMap",
				"package": "@batpb/genart"
			},
			"defaultValue": "..."
		},
		{
			"id": 317,
			"name": "getSingleDimensionIndex",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "math/math.ts",
					"line": 32,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 318,
					"name": "getSingleDimensionIndex",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The index in a single-dimension structure of the\ngiven row and column in a two-dimensional structure.<br/>\nIf "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "row",
										"target": 319
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "column",
										"target": 320
									},
									{
										"kind": "text",
										"text": " are negative, the function will return undefined.<br/>\nIf "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "row",
										"target": 319
									},
									{
										"kind": "text",
										"text": " is greater than or equal to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "totalRows",
										"target": 321
									},
									{
										"kind": "text",
										"text": ", the function will return undefined.<br/>\nIf "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "column",
										"target": 320
									},
									{
										"kind": "text",
										"text": " is greater than or equal to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "totalColumns",
										"target": 322
									},
									{
										"kind": "text",
										"text": ", the function will return undefined."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "math/math.ts",
							"line": 32,
							"character": 16
						}
					],
					"parameters": [
						{
							"id": 319,
							"name": "row",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Current row number. Rows are zero-indexed; the first row is row 0."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 320,
							"name": "column",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Current column number. Columns are zero-indexed; the first column is column 0."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 321,
							"name": "totalRows",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Total number of rows."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 322,
							"name": "totalColumns",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Total number of columns."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				532,
				78,
				152,
				149,
				622,
				195
			]
		},
		{
			"title": "Classes",
			"children": [
				507,
				628,
				542,
				463,
				17,
				155,
				1,
				82,
				137,
				556,
				589,
				114,
				189,
				202,
				272,
				669,
				692,
				365,
				240,
				705,
				741,
				323,
				484,
				290
			]
		},
		{
			"title": "Interfaces",
			"children": [
				503,
				551,
				625,
				199,
				338,
				351,
				233,
				701
			]
		},
		{
			"title": "Variables",
			"children": [
				435,
				454,
				461,
				541,
				436,
				459,
				437,
				458,
				438,
				445,
				456,
				462,
				449,
				452,
				457,
				455,
				439,
				440,
				447,
				448,
				450,
				402,
				404,
				414,
				405,
				406,
				415,
				403,
				407,
				416,
				409,
				417,
				425,
				408,
				410,
				426,
				411,
				412,
				427,
				418,
				429,
				430,
				428,
				419,
				420,
				413,
				421,
				422,
				431,
				432,
				433,
				423,
				424,
				434,
				441,
				451,
				442,
				443,
				453,
				446,
				460,
				444
			]
		},
		{
			"title": "Functions",
			"children": [
				317
			]
		}
	],
	"categories": [
		{
			"title": "Canvas Screen",
			"children": [
				463,
				484
			]
		},
		{
			"title": "Color",
			"children": [
				78,
				17,
				155,
				1,
				82,
				137,
				114
			]
		},
		{
			"title": "Color Contrast",
			"children": [
				152,
				149,
				155
			]
		},
		{
			"title": "Color Selector",
			"children": [
				82,
				114,
				365
			]
		},
		{
			"title": "Discriminator",
			"children": [
				195,
				189
			]
		},
		{
			"title": "Map",
			"children": [
				290
			]
		},
		{
			"title": "Math",
			"children": [
				323,
				317
			]
		},
		{
			"title": "Other",
			"children": [
				622,
				556,
				272,
				199,
				233
			]
		},
		{
			"title": "Palette",
			"children": [
				365,
				338,
				351
			]
		},
		{
			"title": "Palette Collections",
			"children": [
				454,
				445,
				449,
				452,
				455,
				447,
				448,
				450,
				451,
				453,
				446
			]
		},
		{
			"title": "Palette Color Collections",
			"children": [
				435,
				436,
				437,
				438,
				439,
				440,
				441,
				442,
				443,
				444
			]
		},
		{
			"title": "Palette Colors (All)",
			"children": [
				435,
				402,
				404,
				414,
				405,
				406,
				415,
				403,
				407,
				416,
				409,
				417,
				425,
				408,
				410,
				426,
				411,
				412,
				427,
				418,
				429,
				430,
				428,
				419,
				420,
				413,
				421,
				422,
				431,
				432,
				433,
				423,
				424,
				434
			]
		},
		{
			"title": "Palette Colors (Black)",
			"children": [
				436,
				402,
				403
			]
		},
		{
			"title": "Palette Colors (Blue)",
			"children": [
				437,
				404,
				405,
				406,
				407,
				408
			]
		},
		{
			"title": "Palette Colors (Brown)",
			"children": [
				438,
				409
			]
		},
		{
			"title": "Palette Colors (Gray)",
			"children": [
				439,
				410,
				411,
				412,
				413
			]
		},
		{
			"title": "Palette Colors (Green)",
			"children": [
				440,
				414,
				415,
				416,
				417,
				418
			]
		},
		{
			"title": "Palette Colors (Pink)",
			"children": [
				419,
				420,
				421,
				422,
				423,
				424,
				441
			]
		},
		{
			"title": "Palette Colors (Purple)",
			"children": [
				425,
				426,
				427,
				428,
				442
			]
		},
		{
			"title": "Palette Colors (Red)",
			"children": [
				429,
				430,
				443
			]
		},
		{
			"title": "Palette Colors (White)",
			"children": [
				431,
				432,
				433,
				434,
				444
			]
		},
		{
			"title": "Palettes (All)",
			"children": [
				454,
				461,
				459,
				458,
				456,
				462,
				457,
				460
			]
		},
		{
			"title": "Palettes (Gradient)",
			"children": [
				457,
				455
			]
		},
		{
			"title": "Palettes (Holidays)",
			"children": [
				445,
				456,
				457,
				447,
				446
			]
		},
		{
			"title": "Palettes (Holidays/Christmas)",
			"children": [
				445,
				456
			]
		},
		{
			"title": "Palettes (Holidays/Valentine's Day)",
			"children": [
				457,
				446
			]
		},
		{
			"title": "Palettes (Miscellaneous)",
			"children": [
				458,
				448
			]
		},
		{
			"title": "Palettes (Nature)",
			"children": [
				459,
				449,
				450,
				460
			]
		},
		{
			"title": "Palettes (Nature/Flowers)",
			"children": [
				459,
				449,
				460
			]
		},
		{
			"title": "Palettes (Pride)",
			"children": [
				461,
				451
			]
		},
		{
			"title": "Palettes (Sports)",
			"children": [
				462,
				452,
				453
			]
		},
		{
			"title": "Palettes (Sports/Football)",
			"children": [
				462,
				452
			]
		},
		{
			"title": "Random",
			"children": [
				705,
				741,
				323,
				701
			]
		},
		{
			"title": "Sketch Context",
			"children": [
				532,
				507,
				628,
				542,
				589,
				202,
				669,
				692,
				240,
				503,
				551,
				625,
				541
			]
		},
		{
			"title": "Sketch Context: Canvas",
			"children": [
				532,
				507,
				628,
				542,
				589,
				202,
				240,
				503,
				551,
				625,
				541
			]
		},
		{
			"title": "Sketch Context: Drawing",
			"children": [
				542,
				589,
				202,
				240,
				551,
				625
			]
		},
		{
			"title": "Sketch Context: Events",
			"children": [
				542,
				202,
				240,
				551
			]
		},
		{
			"title": "Sketch Context: Mouse",
			"children": [
				669
			]
		},
		{
			"title": "Sketch Context: p5.js",
			"children": [
				692
			]
		}
	],
	"packageName": "@batpb/genart",
	"packageVersion": "2.0.0-rc1",
	"readme": [
		{
			"kind": "text",
			"text": "# [@batpb/genart](https://www.npmjs.com/package/@batpb/genart) - generative art library\n\nCopyright (C) 2023-2024 brittni and the polar bear LLC.\n\nA [TypeScript](https://www.typescriptlang.org/) compatible library built on [p5.js](https://p5js.org/) \nfor creating responsive generative art projects.\n\n## [see the project's GitHub Pages blog](https://brittni-and-the-polar-bear.github.io/generative-art-library/)\n\n## important notice\n\nThis project is currently in active development.\n\n----\n\n## package stats\n\n----\n\n### actions\n\n[![CodeQL](https://github.com/brittni-and-the-polar-bear/generative-art-library/actions/workflows/codeql.yml/badge.svg)](https://github.com/brittni-and-the-polar-bear/generative-art-library/actions/workflows/codeql.yml)\n[![Node.js Build and Test](https://github.com/brittni-and-the-polar-bear/generative-art-library/actions/workflows/node-js.yml/badge.svg)](https://github.com/brittni-and-the-polar-bear/generative-art-library/actions/workflows/node-js.yml)\n\n----\n\n### npm\n\n[![NPM Version](https://img.shields.io/npm/v/%40batpb%2Fgenart)\n![GitHub Release Date - Published_At](https://img.shields.io/github/release-date/brittni-and-the-polar-bear/generative-art-library)\n![GitHub License](https://img.shields.io/github/license/brittni-and-the-polar-bear/generative-art-library)\n![NPM Downloads](https://img.shields.io/npm/dw/%40batpb%2Fgenart)](https://www.npmjs.com/package/@batpb/genart)\n\n![NPM Unpacked Size](https://img.shields.io/npm/unpacked-size/%40batpb%2Fgenart)\n\n----\n\n### security\n\n[![Socket Badge](https://socket.dev/api/badge/npm/package/@batpb/genart)](https://socket.dev/npm/package/@batpb/genart)\n\n----\n\n### github\n\n![GitHub followers](https://img.shields.io/github/followers/brittni-and-the-polar-bear)\n![GitHub Repo stars](https://img.shields.io/github/stars/brittni-and-the-polar-bear/generative-art-library)\n![GitHub watchers](https://img.shields.io/github/watchers/brittni-and-the-polar-bear/generative-art-library)\n\n![GitHub Issues or Pull Requests](https://img.shields.io/github/issues/brittni-and-the-polar-bear/generative-art-library)\n![GitHub Issues or Pull Requests](https://img.shields.io/github/issues-pr/brittni-and-the-polar-bear/generative-art-library)\n\n![GitHub issues by-label (bug)](https://img.shields.io/github/issues/brittni-and-the-polar-bear/generative-art-library/bug?color=red)\n![GitHub issues by-label (security)](https://img.shields.io/github/issues/brittni-and-the-polar-bear/generative-art-library/security?color=red)\n\n![GitHub commits since latest release](https://img.shields.io/github/commits-since/brittni-and-the-polar-bear/generative-art-library/latest)\n\n![GitHub contributors](https://img.shields.io/github/contributors-anon/brittni-and-the-polar-bear/generative-art-library)\n\n![GitHub repo size](https://img.shields.io/github/repo-size/brittni-and-the-polar-bear/generative-art-library)\n\n----\n\n### docs coverage\n\n![Documentation Coverage](https://brittni-and-the-polar-bear.github.io/generative-art-library/doc/coverage.svg)\n\n----\n\n# getting started\n\n## install with [npm](https://www.npmjs.com/)\n\n"
		},
		{
			"kind": "code",
			"text": "```shell\nnpm install @batpb/genart\n```"
		},
		{
			"kind": "text",
			"text": "\n\n----\n\n# [documentation](https://brittni-and-the-polar-bear.github.io/generative-art-library/doc/index.html)\n\n## [v1.1.0 release notes](https://brittni-and-the-polar-bear.github.io/generative-art-library//release-notes/v1.x/v1.1.x/v1.1.0-notes.html)\n\n----\n\n# experiments (coming soon!)\n\n----\n\n# meet the team (coming soon!)\n\n----\n\n# LICENSE information\n\nThe source code of this project is licensed under the \n[GNU Affero General Public Version 3.0 License](https://www.gnu.org/licenses/agpl-3.0.en.html). \nThe full text of the license can be found in the \n[LICENSE](https://github.com/brittni-and-the-polar-bear/generative-art-library/blob/main/LICENSE) \nfile in the root directory.\n\n----\n\n# [development resources](https://brittni-and-the-polar-bear.github.io/generative-art-library/resources.html)\n\n----\n\n## [library colors](https://brittni-and-the-polar-bear.github.io/generative-art-library/colors/all-colors.html)\n\n## [library palettes](https://brittni-and-the-polar-bear.github.io/generative-art-library/palettes/all-palettes_one-page.html)"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/main/batpb-genart.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/main/color/color-name/color-name-manager.ts",
			"qualifiedName": "ColorNameManager"
		},
		"3": {
			"sourceFileName": "src/main/color/color-name/color-name-manager.ts",
			"qualifiedName": "ColorNameManager.getColorName"
		},
		"4": {
			"sourceFileName": "src/main/color/color-name/color-name-manager.ts",
			"qualifiedName": "ColorNameManager.getColorName"
		},
		"5": {
			"sourceFileName": "src/main/color/color-name/color-name-manager.ts",
			"qualifiedName": "colorHex"
		},
		"6": {
			"sourceFileName": "src/main/color/color-name/color-name-manager.ts",
			"qualifiedName": "ColorNameManager.hasMatch"
		},
		"7": {
			"sourceFileName": "src/main/color/color-name/color-name-manager.ts",
			"qualifiedName": "ColorNameManager.hasMatch"
		},
		"8": {
			"sourceFileName": "src/main/color/color-name/color-name-manager.ts",
			"qualifiedName": "hex"
		},
		"9": {
			"sourceFileName": "src/main/color/color-name/color-name-manager.ts",
			"qualifiedName": "ColorNameManager.addColor"
		},
		"10": {
			"sourceFileName": "src/main/color/color-name/color-name-manager.ts",
			"qualifiedName": "ColorNameManager.addColor"
		},
		"11": {
			"sourceFileName": "src/main/color/color-name/color-name-manager.ts",
			"qualifiedName": "color"
		},
		"17": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color"
		},
		"18": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.copy"
		},
		"19": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.copy"
		},
		"20": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "color"
		},
		"21": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getHSLColor"
		},
		"22": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getHSLColor"
		},
		"23": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "h"
		},
		"24": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "s"
		},
		"25": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "l"
		},
		"26": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "a"
		},
		"27": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getHSLAColor"
		},
		"28": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getHSLAColor"
		},
		"29": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "h"
		},
		"30": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "s"
		},
		"31": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "l"
		},
		"32": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "a"
		},
		"33": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.__constructor"
		},
		"34": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color"
		},
		"35": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "color"
		},
		"36": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color"
		},
		"37": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "red"
		},
		"38": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "green"
		},
		"39": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "blue"
		},
		"40": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "alpha"
		},
		"46": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.color"
		},
		"47": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.color"
		},
		"48": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.color"
		},
		"49": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "c"
		},
		"50": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.red"
		},
		"51": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.red"
		},
		"52": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.red"
		},
		"53": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "r"
		},
		"54": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.green"
		},
		"55": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.green"
		},
		"56": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.green"
		},
		"57": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "g"
		},
		"58": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.blue"
		},
		"59": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.blue"
		},
		"60": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.blue"
		},
		"61": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "b"
		},
		"62": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.alpha"
		},
		"63": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.alpha"
		},
		"64": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.alpha"
		},
		"65": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "a"
		},
		"66": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.name"
		},
		"67": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.name"
		},
		"68": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.hex"
		},
		"69": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.hex"
		},
		"70": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getRGBHex"
		},
		"71": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getRGBHex"
		},
		"72": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "withAlpha"
		},
		"73": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getRGBAHex"
		},
		"74": {
			"sourceFileName": "src/main/color/color.ts",
			"qualifiedName": "Color.getRGBAHex"
		},
		"78": {
			"sourceFileName": "src/main/color/color-selector-type.ts",
			"qualifiedName": "ColorSelectorType"
		},
		"79": {
			"sourceFileName": "src/main/color/color-selector-type.ts",
			"qualifiedName": "ColorSelectorType.PALETTE"
		},
		"80": {
			"sourceFileName": "src/main/color/color-selector-type.ts",
			"qualifiedName": "ColorSelectorType.RGB"
		},
		"81": {
			"sourceFileName": "src/main/color/color-selector-type.ts",
			"qualifiedName": "ColorSelectorType.DEFAULT"
		},
		"82": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector"
		},
		"83": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.__constructor"
		},
		"84": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector"
		},
		"85": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "name"
		},
		"86": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "randomOrder"
		},
		"92": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.type"
		},
		"93": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.type"
		},
		"94": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.getColor"
		},
		"95": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.getColor"
		},
		"96": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.colorNames"
		},
		"97": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.colorNames"
		},
		"98": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.name"
		},
		"99": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.name"
		},
		"100": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.getBackgroundColor"
		},
		"101": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.getBackgroundColor"
		},
		"102": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "chanceOfBlack"
		},
		"103": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "chanceOfWhite"
		},
		"104": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "chanceOfColor"
		},
		"105": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.COLOR_NAMES"
		},
		"106": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.COLOR_NAMES"
		},
		"107": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.addColorChoice"
		},
		"108": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.addColorChoice"
		},
		"109": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "color"
		},
		"110": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.selectColorFromChoices"
		},
		"111": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.selectColorFromChoices"
		},
		"114": {
			"sourceFileName": "src/main/color/default-color-selector.ts",
			"qualifiedName": "DefaultColorSelector"
		},
		"115": {
			"sourceFileName": "src/main/color/default-color-selector.ts",
			"qualifiedName": "DefaultColorSelector.__constructor"
		},
		"116": {
			"sourceFileName": "src/main/color/default-color-selector.ts",
			"qualifiedName": "DefaultColorSelector"
		},
		"117": {
			"sourceFileName": "src/main/color/default-color-selector.ts",
			"qualifiedName": "DefaultColorSelector.getColor"
		},
		"118": {
			"sourceFileName": "src/main/color/default-color-selector.ts",
			"qualifiedName": "DefaultColorSelector.getColor"
		},
		"119": {
			"sourceFileName": "src/main/color/default-color-selector.ts",
			"qualifiedName": "DefaultColorSelector.type"
		},
		"120": {
			"sourceFileName": "src/main/color/default-color-selector.ts",
			"qualifiedName": "DefaultColorSelector.type"
		},
		"121": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.colorNames"
		},
		"122": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.colorNames"
		},
		"123": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.name"
		},
		"124": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.name"
		},
		"125": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.getBackgroundColor"
		},
		"126": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.getBackgroundColor"
		},
		"127": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "chanceOfBlack"
		},
		"128": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "chanceOfWhite"
		},
		"129": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "chanceOfColor"
		},
		"130": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.COLOR_NAMES"
		},
		"131": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.COLOR_NAMES"
		},
		"132": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.addColorChoice"
		},
		"133": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.addColorChoice"
		},
		"134": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "color"
		},
		"135": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.selectColorFromChoices"
		},
		"136": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.selectColorFromChoices"
		},
		"137": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager"
		},
		"141": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.getRandomColorSelector"
		},
		"142": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.getRandomColorSelector"
		},
		"143": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.addColorSelector"
		},
		"144": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.addColorSelector"
		},
		"145": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "selector"
		},
		"146": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.addColorSelectors"
		},
		"147": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "ColorSelectorManager.addColorSelectors"
		},
		"148": {
			"sourceFileName": "src/main/color/color-selector-manager.ts",
			"qualifiedName": "selectors"
		},
		"149": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ContrastStandard"
		},
		"150": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ContrastStandard.AA"
		},
		"151": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ContrastStandard.AAA"
		},
		"152": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ContrastFontSize"
		},
		"153": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ContrastFontSize.NORMAL"
		},
		"154": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ContrastFontSize.LARGE"
		},
		"155": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ColorContrastAssessor"
		},
		"156": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ColorContrastAssessor.meetsContrastStandard"
		},
		"157": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ColorContrastAssessor.meetsContrastStandard"
		},
		"158": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorA"
		},
		"159": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorB"
		},
		"160": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ColorContrastAssessor.meetsContrastStandard"
		},
		"161": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorA"
		},
		"162": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorB"
		},
		"163": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ColorContrastAssessor.meetsContrastStandard"
		},
		"164": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorA"
		},
		"165": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorB"
		},
		"166": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ColorContrastAssessor.meetsContrastStandard"
		},
		"167": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorA"
		},
		"168": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorB"
		},
		"169": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "standard"
		},
		"170": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "fontSize"
		},
		"171": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ColorContrastAssessor.meetsContrastStandard"
		},
		"172": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorA"
		},
		"173": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorB"
		},
		"174": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "standard"
		},
		"175": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "fontSize"
		},
		"176": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "ColorContrastAssessor.meetsContrastStandard"
		},
		"177": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorA"
		},
		"178": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "colorB"
		},
		"179": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "standard"
		},
		"180": {
			"sourceFileName": "src/main/color/color-contrast/color-contrast-assessor.ts",
			"qualifiedName": "fontSize"
		},
		"189": {
			"sourceFileName": "src/main/discriminator/discriminator.ts",
			"qualifiedName": "Discriminator"
		},
		"190": {
			"sourceFileName": "src/main/discriminator/discriminator.ts",
			"qualifiedName": "Discriminator.isPaletteColor"
		},
		"191": {
			"sourceFileName": "src/main/discriminator/discriminator.ts",
			"qualifiedName": "Discriminator.isPaletteColor"
		},
		"192": {
			"sourceFileName": "src/main/discriminator/discriminator.ts",
			"qualifiedName": "object"
		},
		"195": {
			"sourceFileName": "src/main/discriminator/discriminators.ts",
			"qualifiedName": "Discriminators"
		},
		"196": {
			"sourceFileName": "src/main/discriminator/discriminators.ts",
			"qualifiedName": "Discriminators.PALETTE"
		},
		"197": {
			"sourceFileName": "src/main/discriminator/discriminators.ts",
			"qualifiedName": "Discriminators.PALETTE_COLOR"
		},
		"198": {
			"sourceFileName": "src/main/discriminator/discriminators.ts",
			"qualifiedName": "Discriminators.WEIGHTED_ELEMENT"
		},
		"199": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "GeometryConfig"
		},
		"200": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "GeometryConfig.coordinateMode"
		},
		"201": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "GeometryConfig.style"
		},
		"202": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry"
		},
		"203": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.__constructor"
		},
		"204": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry"
		},
		"205": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "config"
		},
		"207": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.setPosition"
		},
		"208": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.setPosition"
		},
		"209": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "position"
		},
		"210": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "mode"
		},
		"211": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.getX"
		},
		"212": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.getX"
		},
		"213": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "mode"
		},
		"214": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.setX"
		},
		"215": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.setX"
		},
		"216": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "x"
		},
		"217": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "mode"
		},
		"218": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.getY"
		},
		"219": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.getY"
		},
		"220": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "mode"
		},
		"221": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.setY"
		},
		"222": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.setY"
		},
		"223": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "y"
		},
		"224": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "mode"
		},
		"225": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.canvasRedraw"
		},
		"226": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.canvasRedraw"
		},
		"227": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.draw"
		},
		"228": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.draw"
		},
		"229": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.style"
		},
		"230": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.style"
		},
		"231": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.style"
		},
		"232": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "style"
		},
		"233": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "PointConfig"
		},
		"234": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "PointConfig.position"
		},
		"235": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "__type"
		},
		"236": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "__type.x"
		},
		"237": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "__type.y"
		},
		"238": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "GeometryConfig.coordinateMode"
		},
		"239": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "GeometryConfig.style"
		},
		"240": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point"
		},
		"241": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.__constructor"
		},
		"242": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point"
		},
		"243": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "config"
		},
		"245": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.setPosition"
		},
		"246": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.setPosition"
		},
		"247": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "position"
		},
		"248": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "mode"
		},
		"249": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.getX"
		},
		"250": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.getX"
		},
		"251": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "mode"
		},
		"252": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.setX"
		},
		"253": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.setX"
		},
		"254": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "x"
		},
		"255": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "mode"
		},
		"256": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.getY"
		},
		"257": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.getY"
		},
		"258": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "mode"
		},
		"259": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.setY"
		},
		"260": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.setY"
		},
		"261": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "y"
		},
		"262": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "mode"
		},
		"263": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.canvasRedraw"
		},
		"264": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.canvasRedraw"
		},
		"265": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.draw"
		},
		"266": {
			"sourceFileName": "src/main/geometry/shape/point.ts",
			"qualifiedName": "Point.draw"
		},
		"268": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.style"
		},
		"269": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.style"
		},
		"270": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "Geometry.style"
		},
		"271": {
			"sourceFileName": "src/main/geometry/shape/geometry.ts",
			"qualifiedName": "style"
		},
		"272": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle"
		},
		"273": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.__constructor"
		},
		"274": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle"
		},
		"275": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "fill"
		},
		"276": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "stroke"
		},
		"277": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.fill"
		},
		"278": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.stroke"
		},
		"280": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.strokeMultiplier"
		},
		"281": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.strokeMultiplier"
		},
		"282": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.strokeMultiplier"
		},
		"283": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "multiplier"
		},
		"284": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.applyStyle"
		},
		"285": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.applyStyle"
		},
		"286": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.applyFill"
		},
		"287": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.applyFill"
		},
		"288": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.applyStroke"
		},
		"289": {
			"sourceFileName": "src/main/geometry/style/geometry-style.ts",
			"qualifiedName": "GeometryStyle.applyStroke"
		},
		"290": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap"
		},
		"291": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.__constructor"
		},
		"292": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap"
		},
		"293": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.ValueType"
		},
		"295": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.keys"
		},
		"296": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.keys"
		},
		"297": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.values"
		},
		"298": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.values"
		},
		"299": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.size"
		},
		"300": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.size"
		},
		"301": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.get"
		},
		"302": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.get"
		},
		"303": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "key"
		},
		"304": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.hasKey"
		},
		"305": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.hasKey"
		},
		"306": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "key"
		},
		"307": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.setKey"
		},
		"308": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.setKey"
		},
		"309": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "key"
		},
		"310": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "value"
		},
		"311": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.setUndefinedKey"
		},
		"312": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.setUndefinedKey"
		},
		"313": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "key"
		},
		"314": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "value"
		},
		"315": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "errorMessage"
		},
		"316": {
			"sourceFileName": "src/main/map/string-map.ts",
			"qualifiedName": "StringMap.ValueType"
		},
		"317": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "getSingleDimensionIndex"
		},
		"318": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "getSingleDimensionIndex"
		},
		"319": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "row"
		},
		"320": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "column"
		},
		"321": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "totalRows"
		},
		"322": {
			"sourceFileName": "src/main/math/math.ts",
			"qualifiedName": "totalColumns"
		},
		"323": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range"
		},
		"324": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.__constructor"
		},
		"325": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range"
		},
		"326": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "_min"
		},
		"327": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "_max"
		},
		"330": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.max"
		},
		"331": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.max"
		},
		"332": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.max"
		},
		"333": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "newMax"
		},
		"334": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.min"
		},
		"335": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.min"
		},
		"336": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "Range.min"
		},
		"337": {
			"sourceFileName": "src/main/math/range.ts",
			"qualifiedName": "newMin"
		},
		"338": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "Palette"
		},
		"339": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "Palette.NAME"
		},
		"340": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "Palette.SOURCE"
		},
		"341": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "Palette.SOURCE_URL"
		},
		"342": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "Palette.IS_GRADIENT"
		},
		"343": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "Palette.COLORS"
		},
		"344": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "Palette.CONTRAST_MAP"
		},
		"345": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "__type"
		},
		"346": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "__type.#000000"
		},
		"347": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "__type.#FFFFFF"
		},
		"348": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "__type.__index"
		},
		"350": {
			"sourceFileName": "src/main/color/palette/palette.ts",
			"qualifiedName": "Palette.DISCRIMINATOR"
		},
		"351": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "PaletteColor"
		},
		"352": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "PaletteColor.RGB"
		},
		"353": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "__type"
		},
		"354": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "__type.R"
		},
		"355": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "__type.G"
		},
		"356": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "__type.B"
		},
		"357": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "PaletteColor.HSL"
		},
		"358": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "__type"
		},
		"359": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "__type.H"
		},
		"360": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "__type.S"
		},
		"361": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "__type.L"
		},
		"362": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "PaletteColor.HEX"
		},
		"363": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "PaletteColor.NAME"
		},
		"364": {
			"sourceFileName": "src/main/color/palette/palette-color.ts",
			"qualifiedName": "PaletteColor.DISCRIMINATOR"
		},
		"365": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "PaletteColorSelector"
		},
		"371": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "PaletteColorSelector.__constructor"
		},
		"372": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "PaletteColorSelector"
		},
		"373": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "palette"
		},
		"374": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "buildWithPaletteOrder"
		},
		"375": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "colorCount"
		},
		"376": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "randomOrder"
		},
		"377": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "PaletteColorSelector.type"
		},
		"378": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "PaletteColorSelector.type"
		},
		"379": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "PaletteColorSelector.getColor"
		},
		"380": {
			"sourceFileName": "src/main/color/palette/palette-color-selector.ts",
			"qualifiedName": "PaletteColorSelector.getColor"
		},
		"386": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.colorNames"
		},
		"387": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.colorNames"
		},
		"388": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.name"
		},
		"389": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.name"
		},
		"390": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.getBackgroundColor"
		},
		"391": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.getBackgroundColor"
		},
		"392": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "chanceOfBlack"
		},
		"393": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "chanceOfWhite"
		},
		"394": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "chanceOfColor"
		},
		"395": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.COLOR_NAMES"
		},
		"396": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.COLOR_NAMES"
		},
		"397": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.addColorChoice"
		},
		"398": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.addColorChoice"
		},
		"399": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "color"
		},
		"400": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.selectColorFromChoices"
		},
		"401": {
			"sourceFileName": "src/main/color/color-selector.ts",
			"qualifiedName": "ColorSelector.selectColorFromChoices"
		},
		"402": {
			"sourceFileName": "src/main/color/palette/palette-colors/black/pc-000000.ts",
			"qualifiedName": "PC_000000"
		},
		"403": {
			"sourceFileName": "src/main/color/palette/palette-colors/black/pc-121212.ts",
			"qualifiedName": "PC_121212"
		},
		"404": {
			"sourceFileName": "src/main/color/palette/palette-colors/blue/pc-003494.ts",
			"qualifiedName": "PC_003494"
		},
		"405": {
			"sourceFileName": "src/main/color/palette/palette-colors/blue/pc-041e43.ts",
			"qualifiedName": "PC_041E43"
		},
		"406": {
			"sourceFileName": "src/main/color/palette/palette-colors/blue/pc-0437f1.ts",
			"qualifiedName": "PC_0437F1"
		},
		"407": {
			"sourceFileName": "src/main/color/palette/palette-colors/blue/pc-1d90af.ts",
			"qualifiedName": "PC_1D90AF"
		},
		"408": {
			"sourceFileName": "src/main/color/palette/palette-colors/blue/pc-7dced8.ts",
			"qualifiedName": "PC_7DCED8"
		},
		"409": {
			"sourceFileName": "src/main/color/palette/palette-colors/brown/pc-3b2212.ts",
			"qualifiedName": "PC_3B2212"
		},
		"410": {
			"sourceFileName": "src/main/color/palette/palette-colors/gray/pc-7e9594.ts",
			"qualifiedName": "PC_7E9594"
		},
		"411": {
			"sourceFileName": "src/main/color/palette/palette-colors/gray/pc-869498.ts",
			"qualifiedName": "PC_869498"
		},
		"412": {
			"sourceFileName": "src/main/color/palette/palette-colors/gray/pc-a3a3a3.ts",
			"qualifiedName": "PC_A3A3A3"
		},
		"413": {
			"sourceFileName": "src/main/color/palette/palette-colors/gray/pc-f0f3f4.ts",
			"qualifiedName": "PC_F0F3F4"
		},
		"414": {
			"sourceFileName": "src/main/color/palette/palette-colors/green/pc-007058.ts",
			"qualifiedName": "PC_007058"
		},
		"415": {
			"sourceFileName": "src/main/color/palette/palette-colors/green/pc-0fff4f.ts",
			"qualifiedName": "PC_0FFF4F"
		},
		"416": {
			"sourceFileName": "src/main/color/palette/palette-colors/green/pc-23856d.ts",
			"qualifiedName": "PC_23856D"
		},
		"417": {
			"sourceFileName": "src/main/color/palette/palette-colors/green/pc-5f8661.ts",
			"qualifiedName": "PC_5F8661"
		},
		"418": {
			"sourceFileName": "src/main/color/palette/palette-colors/green/pc-b1c69f.ts",
			"qualifiedName": "PC_B1C69F"
		},
		"419": {
			"sourceFileName": "src/main/color/palette/palette-colors/pink/pc-ec417a.ts",
			"qualifiedName": "PC_EC417A"
		},
		"420": {
			"sourceFileName": "src/main/color/palette/palette-colors/pink/pc-f06090.ts",
			"qualifiedName": "PC_F06090"
		},
		"421": {
			"sourceFileName": "src/main/color/palette/palette-colors/pink/pc-f490b1.ts",
			"qualifiedName": "PC_F490B1"
		},
		"422": {
			"sourceFileName": "src/main/color/palette/palette-colors/pink/pc-f8b9ce.ts",
			"qualifiedName": "PC_F8B9CE"
		},
		"423": {
			"sourceFileName": "src/main/color/palette/palette-colors/pink/pc-fce3ec.ts",
			"qualifiedName": "PC_FCE3EC"
		},
		"424": {
			"sourceFileName": "src/main/color/palette/palette-colors/pink/pc-ff6bb5.ts",
			"qualifiedName": "PC_FF6BB5"
		},
		"425": {
			"sourceFileName": "src/main/color/palette/palette-colors/purple/pc-7a00f5.ts",
			"qualifiedName": "PC_7A00F5"
		},
		"426": {
			"sourceFileName": "src/main/color/palette/palette-colors/purple/pc-80007f.ts",
			"qualifiedName": "PC_80007F"
		},
		"427": {
			"sourceFileName": "src/main/color/palette/palette-colors/purple/pc-aeaed6.ts",
			"qualifiedName": "PC_AEAED6"
		},
		"428": {
			"sourceFileName": "src/main/color/palette/palette-colors/purple/pc-d6d6ff.ts",
			"qualifiedName": "PC_D6D6FF"
		},
		"429": {
			"sourceFileName": "src/main/color/palette/palette-colors/red/pc-bc010a.ts",
			"qualifiedName": "PC_BC010A"
		},
		"430": {
			"sourceFileName": "src/main/color/palette/palette-colors/red/pc-d01625.ts",
			"qualifiedName": "PC_D01625"
		},
		"431": {
			"sourceFileName": "src/main/color/palette/palette-colors/white/pc-fafbef.ts",
			"qualifiedName": "PC_FAFBEF"
		},
		"432": {
			"sourceFileName": "src/main/color/palette/palette-colors/white/pc-fafeff.ts",
			"qualifiedName": "PC_FAFEFF"
		},
		"433": {
			"sourceFileName": "src/main/color/palette/palette-colors/white/pc-fbf9f9.ts",
			"qualifiedName": "PC_FBF9F9"
		},
		"434": {
			"sourceFileName": "src/main/color/palette/palette-colors/white/pc-ffffff.ts",
			"qualifiedName": "PC_FFFFFF"
		},
		"435": {
			"sourceFileName": "src/main/color/palette/palette-colors/palette-color-maps.ts",
			"qualifiedName": "ALL_PALETTE_COLORS"
		},
		"436": {
			"sourceFileName": "src/main/color/palette/palette-colors/palette-color-maps.ts",
			"qualifiedName": "BLACK_PALETTE_COLORS"
		},
		"437": {
			"sourceFileName": "src/main/color/palette/palette-colors/palette-color-maps.ts",
			"qualifiedName": "BLUE_PALETTE_COLORS"
		},
		"438": {
			"sourceFileName": "src/main/color/palette/palette-colors/palette-color-maps.ts",
			"qualifiedName": "BROWN_PALETTE_COLORS"
		},
		"439": {
			"sourceFileName": "src/main/color/palette/palette-colors/palette-color-maps.ts",
			"qualifiedName": "GRAY_PALETTE_COLORS"
		},
		"440": {
			"sourceFileName": "src/main/color/palette/palette-colors/palette-color-maps.ts",
			"qualifiedName": "GREEN_PALETTE_COLORS"
		},
		"441": {
			"sourceFileName": "src/main/color/palette/palette-colors/palette-color-maps.ts",
			"qualifiedName": "PINK_PALETTE_COLORS"
		},
		"442": {
			"sourceFileName": "src/main/color/palette/palette-colors/palette-color-maps.ts",
			"qualifiedName": "PURPLE_PALETTE_COLORS"
		},
		"443": {
			"sourceFileName": "src/main/color/palette/palette-colors/palette-color-maps.ts",
			"qualifiedName": "RED_PALETTE_COLORS"
		},
		"444": {
			"sourceFileName": "src/main/color/palette/palette-colors/palette-color-maps.ts",
			"qualifiedName": "WHITE_PALETTE_COLORS"
		},
		"445": {
			"sourceFileName": "src/main/color/palette/palette-maps/holidays/christmas/christmas-palette-maps.ts",
			"qualifiedName": "CHRISTMAS_PALETTES"
		},
		"446": {
			"sourceFileName": "src/main/color/palette/palette-maps/holidays/valentines-day/valentines-day-palette-maps.ts",
			"qualifiedName": "VALENTINES_PALETTES"
		},
		"447": {
			"sourceFileName": "src/main/color/palette/palette-maps/holidays/holidays-palette-maps.ts",
			"qualifiedName": "HOLIDAYS_PALETTES"
		},
		"448": {
			"sourceFileName": "src/main/color/palette/palette-maps/miscellaneous/miscellaneous-pallete-maps.ts",
			"qualifiedName": "MISCELLANEOUS_PALETTES"
		},
		"449": {
			"sourceFileName": "src/main/color/palette/palette-maps/nature/flowers/flowers-palette-maps.ts",
			"qualifiedName": "FLOWERS_PALETTES"
		},
		"450": {
			"sourceFileName": "src/main/color/palette/palette-maps/nature/nature-palette-maps.ts",
			"qualifiedName": "NATURE_PALETTES"
		},
		"451": {
			"sourceFileName": "src/main/color/palette/palette-maps/pride/pride-palette-maps.ts",
			"qualifiedName": "PRIDE_PALETTES"
		},
		"452": {
			"sourceFileName": "src/main/color/palette/palette-maps/sports/football/football-palette-maps.ts",
			"qualifiedName": "FOOTBALL_PALETTES"
		},
		"453": {
			"sourceFileName": "src/main/color/palette/palette-maps/sports/sports-palette-maps.ts",
			"qualifiedName": "SPORTS_PALETTES"
		},
		"454": {
			"sourceFileName": "src/main/color/palette/palette-maps/palette-maps.ts",
			"qualifiedName": "ALL_PALETTES"
		},
		"455": {
			"sourceFileName": "src/main/color/palette/palette-maps/palette-maps.ts",
			"qualifiedName": "GRADIENT_PALETTES"
		},
		"456": {
			"sourceFileName": "src/main/color/palette/palettes/holidays/christmas/classic-christmas-palette.ts",
			"qualifiedName": "CLASSIC_CHRISTMAS_PALETTE"
		},
		"457": {
			"sourceFileName": "src/main/color/palette/palettes/holidays/valentines-day/glitter-palette.ts",
			"qualifiedName": "GLITTER_PALETTE"
		},
		"458": {
			"sourceFileName": "src/main/color/palette/palettes/miscellaneous/brittni-palette.ts",
			"qualifiedName": "BRITTNI_PALETTE"
		},
		"459": {
			"sourceFileName": "src/main/color/palette/palettes/nature/flowers/blue-lily-palette.ts",
			"qualifiedName": "BLUE_LILY_PALETTE"
		},
		"460": {
			"sourceFileName": "src/main/color/palette/palettes/nature/flowers/white-lily-palette.ts",
			"qualifiedName": "WHITE_LILY_PALETTE"
		},
		"461": {
			"sourceFileName": "src/main/color/palette/palettes/pride/asexual-flag-palette.ts",
			"qualifiedName": "ASEXUAL_FLAG_PALETTE"
		},
		"462": {
			"sourceFileName": "src/main/color/palette/palettes/sports/football/dallas-cowboys-palette.ts",
			"qualifiedName": "DALLAS_COWBOYS_PALETTE"
		},
		"463": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen"
		},
		"464": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.__constructor"
		},
		"465": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen"
		},
		"466": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "name"
		},
		"469": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.draw"
		},
		"470": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.draw"
		},
		"471": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.mousePressed"
		},
		"472": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.mousePressed"
		},
		"473": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.keyPressed"
		},
		"474": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.keyPressed"
		},
		"475": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.NAME"
		},
		"476": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.NAME"
		},
		"477": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.publishRedraw"
		},
		"478": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.publishRedraw"
		},
		"479": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.addRedrawListener"
		},
		"480": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.addRedrawListener"
		},
		"481": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "listener"
		},
		"482": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.activate"
		},
		"483": {
			"sourceFileName": "src/main/screen/canvas-screen.ts",
			"qualifiedName": "CanvasScreen.activate"
		},
		"484": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler"
		},
		"487": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.currentScreen"
		},
		"488": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.currentScreen"
		},
		"489": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "name"
		},
		"490": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.addScreen"
		},
		"491": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.addScreen"
		},
		"492": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "screen"
		},
		"493": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.draw"
		},
		"494": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.draw"
		},
		"495": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.mousePressed"
		},
		"496": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.mousePressed"
		},
		"497": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.keyPressed"
		},
		"498": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.keyPressed"
		},
		"499": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.publishRedraw"
		},
		"500": {
			"sourceFileName": "src/main/screen/screen-handler.ts",
			"qualifiedName": "ScreenHandler.publishRedraw"
		},
		"503": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio.ts",
			"qualifiedName": "AspectRatio"
		},
		"504": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio.ts",
			"qualifiedName": "AspectRatio.NAME"
		},
		"505": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio.ts",
			"qualifiedName": "AspectRatio.WIDTH_RATIO"
		},
		"506": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio.ts",
			"qualifiedName": "AspectRatio.HEIGHT_RATIO"
		},
		"507": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler"
		},
		"508": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler.buildAspectRatio"
		},
		"509": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler.buildAspectRatio"
		},
		"510": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "widthRatio"
		},
		"511": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "heightRatio"
		},
		"512": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "name"
		},
		"513": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler.buildAspectRatioFromDimensions"
		},
		"514": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler.buildAspectRatioFromDimensions"
		},
		"515": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "width"
		},
		"516": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "height"
		},
		"517": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "name"
		},
		"518": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler.__constructor"
		},
		"519": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler"
		},
		"520": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "aspectRatio"
		},
		"521": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "baseResolution"
		},
		"524": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler.width"
		},
		"525": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler.width"
		},
		"526": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler.height"
		},
		"527": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratio-handler.ts",
			"qualifiedName": "AspectRatioHandler.height"
		},
		"532": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratios.ts",
			"qualifiedName": "AspectRatioName"
		},
		"533": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratios.ts",
			"qualifiedName": "AspectRatioName.MATCH"
		},
		"534": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratios.ts",
			"qualifiedName": "AspectRatioName.INITIAL"
		},
		"535": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratios.ts",
			"qualifiedName": "AspectRatioName.PINTEREST_PIN"
		},
		"536": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratios.ts",
			"qualifiedName": "AspectRatioName.SOCIAL_VIDEO"
		},
		"537": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratios.ts",
			"qualifiedName": "AspectRatioName.SQUARE"
		},
		"538": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratios.ts",
			"qualifiedName": "AspectRatioName.TIKTOK_PHOTO"
		},
		"539": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratios.ts",
			"qualifiedName": "AspectRatioName.ULTRAWIDE"
		},
		"540": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratios.ts",
			"qualifiedName": "AspectRatioName.WIDESCREEN"
		},
		"541": {
			"sourceFileName": "src/main/sketch/canvas/aspect-ratio/aspect-ratios.ts",
			"qualifiedName": "ASPECT_RATIOS"
		},
		"542": {
			"sourceFileName": "src/main/sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
			"qualifiedName": "CanvasRedrawEvent"
		},
		"546": {
			"sourceFileName": "src/main/sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
			"qualifiedName": "CanvasRedrawEvent.addListener"
		},
		"547": {
			"sourceFileName": "src/main/sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
			"qualifiedName": "CanvasRedrawEvent.addListener"
		},
		"548": {
			"sourceFileName": "src/main/sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
			"qualifiedName": "listener"
		},
		"549": {
			"sourceFileName": "src/main/sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
			"qualifiedName": "CanvasRedrawEvent.publishRedraw"
		},
		"550": {
			"sourceFileName": "src/main/sketch/canvas/drawing/redraw-event/canvas-redraw-event.ts",
			"qualifiedName": "CanvasRedrawEvent.publishRedraw"
		},
		"551": {
			"sourceFileName": "src/main/sketch/canvas/drawing/redraw-event/canvas-redraw-listener.ts",
			"qualifiedName": "CanvasRedrawListener"
		},
		"552": {
			"sourceFileName": "src/main/sketch/canvas/drawing/redraw-event/canvas-redraw-listener.ts",
			"qualifiedName": "CanvasRedrawListener.canvasRedraw"
		},
		"553": {
			"sourceFileName": "src/main/sketch/canvas/drawing/redraw-event/canvas-redraw-listener.ts",
			"qualifiedName": "CanvasRedrawListener.canvasRedraw"
		},
		"554": {
			"sourceFileName": "src/main/sketch/canvas/drawing/drawable.ts",
			"qualifiedName": "Drawable.draw"
		},
		"555": {
			"sourceFileName": "src/main/sketch/canvas/drawing/drawable.ts",
			"qualifiedName": "Drawable.draw"
		},
		"556": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate"
		},
		"557": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.__constructor"
		},
		"558": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate"
		},
		"561": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.getX"
		},
		"562": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.getX"
		},
		"563": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "mode"
		},
		"564": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.setX"
		},
		"565": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.setX"
		},
		"566": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "x"
		},
		"567": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "mode"
		},
		"568": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.getY"
		},
		"569": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.getY"
		},
		"570": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "mode"
		},
		"571": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.setY"
		},
		"572": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.setY"
		},
		"573": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "y"
		},
		"574": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "mode"
		},
		"575": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.setPosition"
		},
		"576": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.setPosition"
		},
		"577": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "position"
		},
		"578": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "mode"
		},
		"579": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.remap"
		},
		"580": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate.ts",
			"qualifiedName": "Coordinate.remap"
		},
		"589": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper"
		},
		"590": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.centerX"
		},
		"591": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.centerX"
		},
		"592": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.centerY"
		},
		"593": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.centerY"
		},
		"594": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.maxX"
		},
		"595": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.maxX"
		},
		"596": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.maxY"
		},
		"597": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.maxY"
		},
		"598": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.minX"
		},
		"599": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.minX"
		},
		"600": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.minY"
		},
		"601": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.minY"
		},
		"602": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapRatioToCanvas"
		},
		"603": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapRatioToCanvas"
		},
		"604": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "ratioVector"
		},
		"605": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapRatioToCanvasX"
		},
		"606": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapRatioToCanvasX"
		},
		"607": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "ratio"
		},
		"608": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapRatioToCanvasY"
		},
		"609": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapRatioToCanvasY"
		},
		"610": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "ratio"
		},
		"611": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapCanvasXToRatio"
		},
		"612": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapCanvasXToRatio"
		},
		"613": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "canvasX"
		},
		"614": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapCanvasYToRatio"
		},
		"615": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapCanvasYToRatio"
		},
		"616": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "canvasY"
		},
		"617": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapCanvasToRatio"
		},
		"618": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "CoordinateMapper.mapCanvasToRatio"
		},
		"619": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mapper.ts",
			"qualifiedName": "canvasVector"
		},
		"622": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mode.ts",
			"qualifiedName": "CoordinateMode"
		},
		"623": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mode.ts",
			"qualifiedName": "CoordinateMode.RATIO"
		},
		"624": {
			"sourceFileName": "src/main/sketch/canvas/drawing/coordinate-mode.ts",
			"qualifiedName": "CoordinateMode.CANVAS"
		},
		"625": {
			"sourceFileName": "src/main/sketch/canvas/drawing/drawable.ts",
			"qualifiedName": "Drawable"
		},
		"626": {
			"sourceFileName": "src/main/sketch/canvas/drawing/drawable.ts",
			"qualifiedName": "Drawable.draw"
		},
		"627": {
			"sourceFileName": "src/main/sketch/canvas/drawing/drawable.ts",
			"qualifiedName": "Drawable.draw"
		},
		"628": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext"
		},
		"634": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.buildCanvas"
		},
		"635": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.buildCanvas"
		},
		"636": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "aspectRatio"
		},
		"637": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "resolution"
		},
		"638": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "canvasType"
		},
		"639": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "lockCanvas"
		},
		"640": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.isWebGL"
		},
		"641": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.isWebGL"
		},
		"642": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.lockedCanvas"
		},
		"643": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.lockedCanvas"
		},
		"644": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.defaultStroke"
		},
		"645": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.defaultStroke"
		},
		"646": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.lockCanvas"
		},
		"647": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.lockCanvas"
		},
		"648": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.unlockCanvas"
		},
		"649": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.unlockCanvas"
		},
		"650": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.resizeCanvas"
		},
		"651": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.resizeCanvas"
		},
		"652": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.updateAspectRatio"
		},
		"653": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.updateAspectRatio"
		},
		"654": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "aspectRatio"
		},
		"655": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.updateResolution"
		},
		"656": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "CanvasContext.updateResolution"
		},
		"657": {
			"sourceFileName": "src/main/sketch/canvas/canvas-context.ts",
			"qualifiedName": "resolution"
		},
		"669": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper"
		},
		"670": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mouseX"
		},
		"671": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mouseX"
		},
		"672": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mouseY"
		},
		"673": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mouseY"
		},
		"674": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mouseXRatio"
		},
		"675": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mouseXRatio"
		},
		"676": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mouseYRatio"
		},
		"677": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mouseYRatio"
		},
		"678": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mapMouseXToCanvas"
		},
		"679": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mapMouseXToCanvas"
		},
		"680": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "mouseX"
		},
		"681": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mapMouseYToCanvas"
		},
		"682": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mapMouseYToCanvas"
		},
		"683": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "mouseY"
		},
		"684": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mapMouseXToRatio"
		},
		"685": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mapMouseXToRatio"
		},
		"686": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "mouseX"
		},
		"687": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mapMouseYToRatio"
		},
		"688": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "MouseMapper.mapMouseYToRatio"
		},
		"689": {
			"sourceFileName": "src/main/sketch/mouse/mouse-mapper.ts",
			"qualifiedName": "mouseY"
		},
		"692": {
			"sourceFileName": "src/main/sketch/p5-context/p5-context.ts",
			"qualifiedName": "P5Context"
		},
		"694": {
			"sourceFileName": "src/main/sketch/p5-context/p5-context.ts",
			"qualifiedName": "P5Context.initialize"
		},
		"695": {
			"sourceFileName": "src/main/sketch/p5-context/p5-context.ts",
			"qualifiedName": "P5Context.initialize"
		},
		"696": {
			"sourceFileName": "src/main/sketch/p5-context/p5-context.ts",
			"qualifiedName": "p5"
		},
		"697": {
			"sourceFileName": "src/main/sketch/p5-context/p5-context.ts",
			"qualifiedName": "P5Context.p5"
		},
		"698": {
			"sourceFileName": "src/main/sketch/p5-context/p5-context.ts",
			"qualifiedName": "P5Context.p5"
		},
		"701": {
			"sourceFileName": "src/main/random/weighted-element.ts",
			"qualifiedName": "WeightedElement"
		},
		"702": {
			"sourceFileName": "src/main/random/weighted-element.ts",
			"qualifiedName": "WeightedElement.value"
		},
		"703": {
			"sourceFileName": "src/main/random/weighted-element.ts",
			"qualifiedName": "WeightedElement.weight"
		},
		"704": {
			"sourceFileName": "src/main/random/weighted-element.ts",
			"qualifiedName": "WeightedElement.Type"
		},
		"705": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random"
		},
		"709": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomMethod"
		},
		"710": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomMethod"
		},
		"711": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "method"
		},
		"712": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "__type"
		},
		"713": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "__type"
		},
		"714": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomFloat"
		},
		"715": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomFloat"
		},
		"716": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "min"
		},
		"717": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "max"
		},
		"718": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomFloatInRange"
		},
		"719": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomFloatInRange"
		},
		"720": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "range"
		},
		"721": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomInt"
		},
		"722": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomInt"
		},
		"723": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "min"
		},
		"724": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "max"
		},
		"725": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomIntInRange"
		},
		"726": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomIntInRange"
		},
		"727": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "range"
		},
		"728": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomBoolean"
		},
		"729": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomBoolean"
		},
		"730": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "chanceOfTrue"
		},
		"731": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomElement"
		},
		"732": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomElement"
		},
		"733": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Type"
		},
		"734": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "list"
		},
		"735": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomWeightedElement"
		},
		"736": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Random.randomWeightedElement"
		},
		"737": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "Type"
		},
		"738": {
			"sourceFileName": "src/main/random/random.ts",
			"qualifiedName": "list"
		},
		"741": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector"
		},
		"742": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector.__constructor"
		},
		"743": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector"
		},
		"744": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector.Type"
		},
		"745": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "elements"
		},
		"747": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector.size"
		},
		"748": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector.size"
		},
		"749": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector.getRandomElement"
		},
		"750": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector.getRandomElement"
		},
		"751": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector.getRandomElementAndRemove"
		},
		"752": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector.getRandomElementAndRemove"
		},
		"753": {
			"sourceFileName": "src/main/random/random-selector.ts",
			"qualifiedName": "RandomSelector.Type"
		}
	},
	"files": {
		"entries": {
			"1": "src/main/batpb-genart.ts"
		},
		"reflections": {
			"1": 0
		}
	}
}
